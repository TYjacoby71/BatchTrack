"""complete_fresh_start

Revision ID: f1fffb4bc721
Revises: 
Create Date: 2025-07-03 18:32:52.552280

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f1fffb4bc721'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('batch',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('label_code', sa.String(length=32), nullable=True),
    sa.Column('batch_type', sa.String(length=32), nullable=False),
    sa.Column('projected_yield', sa.Float(), nullable=True),
    sa.Column('projected_yield_unit', sa.String(length=50), nullable=True),
    sa.Column('sku_id', sa.Integer(), nullable=True),
    sa.Column('final_quantity', sa.Float(), nullable=True),
    sa.Column('output_unit', sa.String(length=50), nullable=True),
    sa.Column('scale', sa.Float(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('status_reason', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('total_cost', sa.Float(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('failed_at', sa.DateTime(), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(), nullable=True),
    sa.Column('inventory_credited', sa.Boolean(), nullable=True),
    sa.Column('is_perishable', sa.Boolean(), nullable=True),
    sa.Column('shelf_life_days', sa.Integer(), nullable=True),
    sa.Column('expiration_date', sa.DateTime(), nullable=True),
    sa.Column('remaining_quantity', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipe.id'], ),
    sa.ForeignKeyConstraint(['sku_id'], ['product_sku.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('label_code')
    )
    op.create_table('organization',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('subscription_tier', sa.String(length=32), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=64), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('product_sku',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_name', sa.String(length=128), nullable=False),
    sa.Column('variant_name', sa.String(length=128), nullable=False),
    sa.Column('size_label', sa.String(length=64), nullable=False),
    sa.Column('sku_code', sa.String(length=64), nullable=False),
    sa.Column('sku_name', sa.String(length=128), nullable=True),
    sa.Column('current_quantity', sa.Float(), nullable=True),
    sa.Column('reserved_quantity', sa.Float(), nullable=True),
    sa.Column('unit', sa.String(length=32), nullable=False),
    sa.Column('low_stock_threshold', sa.Float(), nullable=True),
    sa.Column('fifo_id', sa.String(length=32), nullable=True),
    sa.Column('batch_id', sa.Integer(), nullable=True),
    sa.Column('container_id', sa.Integer(), nullable=True),
    sa.Column('unit_cost', sa.Float(), nullable=True),
    sa.Column('retail_price', sa.Float(), nullable=True),
    sa.Column('wholesale_price', sa.Float(), nullable=True),
    sa.Column('profit_margin_target', sa.Float(), nullable=True),
    sa.Column('category', sa.String(length=64), nullable=True),
    sa.Column('subcategory', sa.String(length=64), nullable=True),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_product_active', sa.Boolean(), nullable=True),
    sa.Column('is_discontinued', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('supplier_name', sa.String(length=128), nullable=True),
    sa.Column('supplier_sku', sa.String(length=64), nullable=True),
    sa.Column('supplier_cost', sa.Float(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('weight_unit', sa.String(length=16), nullable=True),
    sa.Column('dimensions', sa.String(length=64), nullable=True),
    sa.Column('barcode', sa.String(length=128), nullable=True),
    sa.Column('upc', sa.String(length=32), nullable=True),
    sa.Column('quality_status', sa.String(length=32), nullable=True),
    sa.Column('compliance_status', sa.String(length=32), nullable=True),
    sa.Column('quality_checked_by', sa.Integer(), nullable=True),
    sa.Column('quality_checked_at', sa.DateTime(), nullable=True),
    sa.Column('location_id', sa.String(length=128), nullable=True),
    sa.Column('location_name', sa.String(length=128), nullable=True),
    sa.Column('temperature_at_time', sa.Float(), nullable=True),
    sa.Column('shopify_product_id', sa.String(length=64), nullable=True),
    sa.Column('shopify_variant_id', sa.String(length=64), nullable=True),
    sa.Column('etsy_listing_id', sa.String(length=64), nullable=True),
    sa.Column('amazon_asin', sa.String(length=64), nullable=True),
    sa.Column('marketplace_sync_status', sa.String(length=32), nullable=True),
    sa.Column('marketplace_last_sync', sa.DateTime(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['batch_id'], ['batch.id'], ),
    sa.ForeignKeyConstraint(['container_id'], ['inventory_item.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['quality_checked_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('barcode'),
    sa.UniqueConstraint('barcode', name='unique_barcode'),
    sa.UniqueConstraint('product_name', 'variant_name', 'size_label', 'fifo_id', name='unique_sku_fifo_combination'),
    sa.UniqueConstraint('sku_code'),
    sa.UniqueConstraint('upc'),
    sa.UniqueConstraint('upc', name='unique_upc')
    )
    with op.batch_alter_table('product_sku', schema=None) as batch_op:
        batch_op.create_index('idx_active_skus', ['is_active', 'is_product_active'], unique=False)
        batch_op.create_index('idx_batch_fifo', ['batch_id', 'fifo_id'], unique=False)
        batch_op.create_index('idx_category', ['category', 'subcategory'], unique=False)
        batch_op.create_index('idx_compliance_status', ['compliance_status'], unique=False)
        batch_op.create_index('idx_current_reserved_qty', ['current_quantity', 'reserved_quantity'], unique=False)
        batch_op.create_index('idx_discontinued', ['is_discontinued'], unique=False)
        batch_op.create_index('idx_location', ['location_id'], unique=False)
        batch_op.create_index('idx_low_stock', ['current_quantity', 'low_stock_threshold'], unique=False)
        batch_op.create_index('idx_marketplace_sync', ['marketplace_sync_status'], unique=False)
        batch_op.create_index('idx_product_name', ['product_name'], unique=False)
        batch_op.create_index('idx_quality_status', ['quality_status'], unique=False)
        batch_op.create_index('idx_supplier', ['supplier_name'], unique=False)
        batch_op.create_index('idx_variant_name', ['variant_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_product_sku_organization_id'), ['organization_id'], unique=False)

    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('role_permission',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=True),
    sa.Column('last_name', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('subscription_class', sa.String(length=32), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('is_owner', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('batch_timer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('batch_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('duration_seconds', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], ['batch.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('conversion_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('from_unit', sa.String(length=32), nullable=False),
    sa.Column('to_unit', sa.String(length=32), nullable=False),
    sa.Column('result', sa.Float(), nullable=False),
    sa.Column('conversion_type', sa.String(length=64), nullable=False),
    sa.Column('ingredient_name', sa.String(length=128), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('conversion_log', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_conversion_log_organization_id'), ['organization_id'], unique=False)

    op.create_table('custom_unit_mapping',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unit_name', sa.String(length=64), nullable=False),
    sa.Column('conversion_factor', sa.Float(), nullable=False),
    sa.Column('base_unit', sa.String(length=64), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('custom_unit_mapping', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_custom_unit_mapping_organization_id'), ['organization_id'], unique=False)

    op.create_table('ingredient_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('color', sa.String(length=7), nullable=True),
    sa.Column('default_density', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('ingredient_category', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_ingredient_category_organization_id'), ['organization_id'], unique=False)

    op.create_table('recipe',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('instructions', sa.Text(), nullable=True),
    sa.Column('label_prefix', sa.String(length=8), nullable=True),
    sa.Column('qr_image', sa.String(length=128), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('is_locked', sa.Boolean(), nullable=True),
    sa.Column('predicted_yield', sa.Float(), nullable=True),
    sa.Column('predicted_yield_unit', sa.String(length=50), nullable=True),
    sa.Column('allowed_containers', sa.PickleType(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['recipe.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('recipe', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_recipe_organization_id'), ['organization_id'], unique=False)

    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('color', sa.String(length=7), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('unit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('symbol', sa.String(length=16), nullable=False),
    sa.Column('type', sa.String(length=32), nullable=False),
    sa.Column('base_unit', sa.String(length=64), nullable=True),
    sa.Column('conversion_factor', sa.Float(), nullable=True),
    sa.Column('multiplier_to_base', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_custom', sa.Boolean(), nullable=True),
    sa.Column('is_mapped', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('inventory_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Float(), nullable=True),
    sa.Column('unit', sa.String(length=32), nullable=False),
    sa.Column('cost_per_unit', sa.Float(), nullable=True),
    sa.Column('low_stock_threshold', sa.Float(), nullable=True),
    sa.Column('density', sa.Float(), nullable=True),
    sa.Column('type', sa.String(length=32), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=True),
    sa.Column('is_perishable', sa.Boolean(), nullable=True),
    sa.Column('shelf_life_days', sa.Integer(), nullable=True),
    sa.Column('expiration_date', sa.Date(), nullable=True),
    sa.Column('storage_amount', sa.Float(), nullable=True),
    sa.Column('storage_unit', sa.String(length=32), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('intermediate', sa.Boolean(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['ingredient_category.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('batch_container',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('batch_id', sa.Integer(), nullable=False),
    sa.Column('container_id', sa.Integer(), nullable=False),
    sa.Column('container_quantity', sa.Integer(), nullable=False),
    sa.Column('quantity_used', sa.Integer(), nullable=False),
    sa.Column('fill_quantity', sa.Float(), nullable=True),
    sa.Column('fill_unit', sa.String(length=32), nullable=True),
    sa.Column('cost_each', sa.Float(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['batch_id'], ['batch.id'], ),
    sa.ForeignKeyConstraint(['container_id'], ['inventory_item.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('batch_container', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_batch_container_organization_id'), ['organization_id'], unique=False)

    op.create_table('batch_ingredient',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('batch_id', sa.Integer(), nullable=False),
    sa.Column('inventory_item_id', sa.Integer(), nullable=False),
    sa.Column('quantity_used', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=32), nullable=False),
    sa.Column('cost_per_unit', sa.Float(), nullable=True),
    sa.Column('total_cost', sa.Float(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], ['batch.id'], ),
    sa.ForeignKeyConstraint(['inventory_item_id'], ['inventory_item.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('batch_inventory_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('batch_id', sa.Integer(), nullable=False),
    sa.Column('inventory_item_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=32), nullable=False),
    sa.Column('quantity_change', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=32), nullable=False),
    sa.Column('old_stock', sa.Float(), nullable=False),
    sa.Column('new_stock', sa.Float(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['batch_id'], ['batch.id'], ),
    sa.ForeignKeyConstraint(['inventory_item_id'], ['inventory_item.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('batch_inventory_log', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_batch_inventory_log_organization_id'), ['organization_id'], unique=False)

    op.create_table('extra_batch_container',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('batch_id', sa.Integer(), nullable=False),
    sa.Column('container_id', sa.Integer(), nullable=False),
    sa.Column('container_quantity', sa.Integer(), nullable=False),
    sa.Column('quantity_used', sa.Integer(), nullable=False),
    sa.Column('fill_quantity', sa.Float(), nullable=True),
    sa.Column('fill_unit', sa.String(length=32), nullable=True),
    sa.Column('cost_each', sa.Float(), nullable=True),
    sa.Column('reason', sa.String(length=20), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['batch_id'], ['batch.id'], ),
    sa.ForeignKeyConstraint(['container_id'], ['inventory_item.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('extra_batch_container', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_extra_batch_container_organization_id'), ['organization_id'], unique=False)

    op.create_table('extra_batch_ingredient',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('batch_id', sa.Integer(), nullable=False),
    sa.Column('inventory_item_id', sa.Integer(), nullable=False),
    sa.Column('quantity_used', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=32), nullable=False),
    sa.Column('cost_per_unit', sa.Float(), nullable=True),
    sa.Column('total_cost', sa.Float(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['batch_id'], ['batch.id'], ),
    sa.ForeignKeyConstraint(['inventory_item_id'], ['inventory_item.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('extra_batch_ingredient', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_extra_batch_ingredient_organization_id'), ['organization_id'], unique=False)

    op.create_table('inventory_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('inventory_item_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('change_type', sa.String(length=32), nullable=False),
    sa.Column('quantity_change', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=32), nullable=False),
    sa.Column('remaining_quantity', sa.Float(), nullable=True),
    sa.Column('unit_cost', sa.Float(), nullable=True),
    sa.Column('fifo_reference_id', sa.Integer(), nullable=True),
    sa.Column('fifo_code', sa.String(length=32), nullable=True),
    sa.Column('batch_id', sa.Integer(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('quantity_used', sa.Float(), nullable=True),
    sa.Column('used_for_batch_id', sa.Integer(), nullable=True),
    sa.Column('is_perishable', sa.Boolean(), nullable=True),
    sa.Column('shelf_life_days', sa.Integer(), nullable=True),
    sa.Column('expiration_date', sa.DateTime(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['batch_id'], ['batch.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['fifo_reference_id'], ['inventory_history.id'], ),
    sa.ForeignKeyConstraint(['inventory_item_id'], ['inventory_item.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['used_for_batch_id'], ['batch.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('inventory_history', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_inventory_history_organization_id'), ['organization_id'], unique=False)

    op.create_table('product_sku_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sku_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('change_type', sa.String(length=32), nullable=False),
    sa.Column('quantity_change', sa.Float(), nullable=False),
    sa.Column('remaining_quantity', sa.Float(), nullable=True),
    sa.Column('original_quantity', sa.Float(), nullable=True),
    sa.Column('unit', sa.String(length=32), nullable=False),
    sa.Column('unit_cost', sa.Float(), nullable=True),
    sa.Column('sale_price', sa.Float(), nullable=True),
    sa.Column('customer', sa.String(length=128), nullable=True),
    sa.Column('fifo_code', sa.String(length=64), nullable=True),
    sa.Column('fifo_reference_id', sa.Integer(), nullable=True),
    sa.Column('fifo_source', sa.String(length=128), nullable=True),
    sa.Column('container_id', sa.Integer(), nullable=True),
    sa.Column('is_perishable', sa.Boolean(), nullable=True),
    sa.Column('shelf_life_days', sa.Integer(), nullable=True),
    sa.Column('expiration_date', sa.DateTime(), nullable=True),
    sa.Column('batch_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('quantity_used', sa.Float(), nullable=True),
    sa.Column('order_id', sa.String(length=64), nullable=True),
    sa.Column('reservation_id', sa.String(length=64), nullable=True),
    sa.Column('is_reserved', sa.Boolean(), nullable=True),
    sa.Column('sale_location', sa.String(length=64), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('batch_number', sa.String(length=128), nullable=True),
    sa.Column('lot_number', sa.String(length=128), nullable=True),
    sa.Column('temperature_at_time', sa.Float(), nullable=True),
    sa.Column('location_id', sa.String(length=128), nullable=True),
    sa.Column('location_name', sa.String(length=128), nullable=True),
    sa.Column('quality_status', sa.String(length=32), nullable=True),
    sa.Column('compliance_status', sa.String(length=32), nullable=True),
    sa.Column('quality_checked_by', sa.Integer(), nullable=True),
    sa.Column('marketplace_order_id', sa.String(length=128), nullable=True),
    sa.Column('marketplace_source', sa.String(length=32), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['batch_id'], ['batch.id'], ),
    sa.ForeignKeyConstraint(['container_id'], ['inventory_item.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['fifo_reference_id'], ['product_sku_history.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['quality_checked_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['sku_id'], ['product_sku.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('product_sku_history', schema=None) as batch_op:
        batch_op.create_index('idx_batch_lot', ['batch_number', 'lot_number'], unique=False)
        batch_op.create_index('idx_change_type', ['change_type'], unique=False)
        batch_op.create_index('idx_fifo_code', ['fifo_code'], unique=False)
        batch_op.create_index('idx_fifo_reference', ['fifo_reference_id'], unique=False)
        batch_op.create_index('idx_fifo_source', ['fifo_source'], unique=False)
        batch_op.create_index('idx_location_time', ['location_id', 'timestamp'], unique=False)
        batch_op.create_index('idx_marketplace_order', ['marketplace_source', 'marketplace_order_id'], unique=False)
        batch_op.create_index('idx_order_reservation', ['order_id', 'reservation_id'], unique=False)
        batch_op.create_index('idx_quality_compliance', ['quality_status', 'compliance_status'], unique=False)
        batch_op.create_index('idx_sale_location', ['sale_location'], unique=False)
        batch_op.create_index('idx_sku_remaining', ['sku_id', 'remaining_quantity'], unique=False)
        batch_op.create_index('idx_sku_timestamp', ['sku_id', 'timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_product_sku_history_organization_id'), ['organization_id'], unique=False)

    op.create_table('recipe_ingredient',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('inventory_item_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=32), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('order_position', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['inventory_item_id'], ['inventory_item.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipe.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('recipe_ingredient', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_recipe_ingredient_organization_id'), ['organization_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('recipe_ingredient', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_recipe_ingredient_organization_id'))

    op.drop_table('recipe_ingredient')
    with op.batch_alter_table('product_sku_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_product_sku_history_organization_id'))
        batch_op.drop_index('idx_sku_timestamp')
        batch_op.drop_index('idx_sku_remaining')
        batch_op.drop_index('idx_sale_location')
        batch_op.drop_index('idx_quality_compliance')
        batch_op.drop_index('idx_order_reservation')
        batch_op.drop_index('idx_marketplace_order')
        batch_op.drop_index('idx_location_time')
        batch_op.drop_index('idx_fifo_source')
        batch_op.drop_index('idx_fifo_reference')
        batch_op.drop_index('idx_fifo_code')
        batch_op.drop_index('idx_change_type')
        batch_op.drop_index('idx_batch_lot')

    op.drop_table('product_sku_history')
    with op.batch_alter_table('inventory_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_inventory_history_organization_id'))

    op.drop_table('inventory_history')
    with op.batch_alter_table('extra_batch_ingredient', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_extra_batch_ingredient_organization_id'))

    op.drop_table('extra_batch_ingredient')
    with op.batch_alter_table('extra_batch_container', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_extra_batch_container_organization_id'))

    op.drop_table('extra_batch_container')
    with op.batch_alter_table('batch_inventory_log', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_batch_inventory_log_organization_id'))

    op.drop_table('batch_inventory_log')
    op.drop_table('batch_ingredient')
    with op.batch_alter_table('batch_container', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_batch_container_organization_id'))

    op.drop_table('batch_container')
    op.drop_table('inventory_item')
    op.drop_table('unit')
    op.drop_table('tag')
    with op.batch_alter_table('recipe', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_recipe_organization_id'))

    op.drop_table('recipe')
    with op.batch_alter_table('ingredient_category', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ingredient_category_organization_id'))

    op.drop_table('ingredient_category')
    with op.batch_alter_table('custom_unit_mapping', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_custom_unit_mapping_organization_id'))

    op.drop_table('custom_unit_mapping')
    with op.batch_alter_table('conversion_log', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_conversion_log_organization_id'))

    op.drop_table('conversion_log')
    op.drop_table('batch_timer')
    op.drop_table('user')
    op.drop_table('role_permission')
    op.drop_table('role')
    with op.batch_alter_table('product_sku', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_product_sku_organization_id'))
        batch_op.drop_index('idx_variant_name')
        batch_op.drop_index('idx_supplier')
        batch_op.drop_index('idx_quality_status')
        batch_op.drop_index('idx_product_name')
        batch_op.drop_index('idx_marketplace_sync')
        batch_op.drop_index('idx_low_stock')
        batch_op.drop_index('idx_location')
        batch_op.drop_index('idx_discontinued')
        batch_op.drop_index('idx_current_reserved_qty')
        batch_op.drop_index('idx_compliance_status')
        batch_op.drop_index('idx_category')
        batch_op.drop_index('idx_batch_fifo')
        batch_op.drop_index('idx_active_skus')

    op.drop_table('product_sku')
    op.drop_table('permission')
    op.drop_table('organization')
    op.drop_table('batch')
    # ### end Alembic commands ###
