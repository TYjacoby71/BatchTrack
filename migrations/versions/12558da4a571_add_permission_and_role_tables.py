"""Add permission and role tables

Revision ID: 12558da4a571
Revises: 
Create Date: 2025-07-04 00:51:21.549718

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '12558da4a571'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=64), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('role_permission',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_table('product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('base_unit', sa.String(length=32), nullable=False),
    sa.Column('category', sa.String(length=64), nullable=True),
    sa.Column('subcategory', sa.String(length=64), nullable=True),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('low_stock_threshold', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_discontinued', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('shopify_product_id', sa.String(length=64), nullable=True),
    sa.Column('etsy_shop_section_id', sa.String(length=64), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'organization_id', name='unique_product_name_per_org')
    )
    op.create_table('product_variant',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('color', sa.String(length=32), nullable=True),
    sa.Column('size', sa.String(length=32), nullable=True),
    sa.Column('material', sa.String(length=64), nullable=True),
    sa.Column('scent', sa.String(length=64), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('product_id', 'name', name='unique_product_variant')
    )
    op.create_table('product_sku',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('variant_id', sa.Integer(), nullable=False),
    sa.Column('size_label', sa.String(length=64), nullable=False),
    sa.Column('sku_code', sa.String(length=64), nullable=False),
    sa.Column('sku_name', sa.String(length=128), nullable=True),
    sa.Column('current_quantity', sa.Float(), nullable=True),
    sa.Column('reserved_quantity', sa.Float(), nullable=True),
    sa.Column('unit', sa.String(length=32), nullable=False),
    sa.Column('low_stock_threshold', sa.Float(), nullable=True),
    sa.Column('fifo_id', sa.String(length=32), nullable=True),
    sa.Column('batch_id', sa.Integer(), nullable=True),
    sa.Column('container_id', sa.Integer(), nullable=True),
    sa.Column('unit_cost', sa.Float(), nullable=True),
    sa.Column('retail_price', sa.Float(), nullable=True),
    sa.Column('wholesale_price', sa.Float(), nullable=True),
    sa.Column('profit_margin_target', sa.Float(), nullable=True),
    sa.Column('category', sa.String(length=64), nullable=True),
    sa.Column('subcategory', sa.String(length=64), nullable=True),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_product_active', sa.Boolean(), nullable=True),
    sa.Column('is_discontinued', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('supplier_name', sa.String(length=128), nullable=True),
    sa.Column('supplier_sku', sa.String(length=64), nullable=True),
    sa.Column('supplier_cost', sa.Float(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('weight_unit', sa.String(length=16), nullable=True),
    sa.Column('dimensions', sa.String(length=64), nullable=True),
    sa.Column('barcode', sa.String(length=128), nullable=True),
    sa.Column('upc', sa.String(length=32), nullable=True),
    sa.Column('quality_status', sa.String(length=32), nullable=True),
    sa.Column('compliance_status', sa.String(length=32), nullable=True),
    sa.Column('quality_checked_by', sa.Integer(), nullable=True),
    sa.Column('quality_checked_at', sa.DateTime(), nullable=True),
    sa.Column('location_id', sa.String(length=128), nullable=True),
    sa.Column('location_name', sa.String(length=128), nullable=True),
    sa.Column('temperature_at_time', sa.Float(), nullable=True),
    sa.Column('shopify_product_id', sa.String(length=64), nullable=True),
    sa.Column('shopify_variant_id', sa.String(length=64), nullable=True),
    sa.Column('etsy_listing_id', sa.String(length=64), nullable=True),
    sa.Column('amazon_asin', sa.String(length=64), nullable=True),
    sa.Column('marketplace_sync_status', sa.String(length=32), nullable=True),
    sa.Column('marketplace_last_sync', sa.DateTime(), nullable=True),
    sa.Column('expiration_date', sa.DateTime(), nullable=True),
    sa.Column('is_perishable', sa.Boolean(), nullable=True),
    sa.Column('shelf_life_days', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], ['batch.id'], ),
    sa.ForeignKeyConstraint(['container_id'], ['inventory_item.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['quality_checked_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['variant_id'], ['product_variant.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('barcode', name='unique_barcode'),
    sa.UniqueConstraint('product_id', 'variant_id', 'size_label', 'fifo_id', name='unique_sku_combination'),
    sa.UniqueConstraint('sku_code'),
    sa.UniqueConstraint('upc', name='unique_upc')
    )
    op.create_table('product_sku_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sku_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('change_type', sa.String(length=32), nullable=False),
    sa.Column('quantity_change', sa.Float(), nullable=False),
    sa.Column('remaining_quantity', sa.Float(), nullable=True),
    sa.Column('original_quantity', sa.Float(), nullable=True),
    sa.Column('unit', sa.String(length=32), nullable=False),
    sa.Column('unit_cost', sa.Float(), nullable=True),
    sa.Column('sale_price', sa.Float(), nullable=True),
    sa.Column('customer', sa.String(length=128), nullable=True),
    sa.Column('fifo_code', sa.String(length=64), nullable=True),
    sa.Column('fifo_reference_id', sa.Integer(), nullable=True),
    sa.Column('fifo_source', sa.String(length=128), nullable=True),
    sa.Column('is_perishable', sa.Boolean(), nullable=True),
    sa.Column('shelf_life_days', sa.Integer(), nullable=True),
    sa.Column('expiration_date', sa.DateTime(), nullable=True),
    sa.Column('batch_id', sa.Integer(), nullable=True),
    sa.Column('container_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('order_id', sa.String(length=64), nullable=True),
    sa.Column('reservation_id', sa.String(length=64), nullable=True),
    sa.Column('is_reserved', sa.Boolean(), nullable=True),
    sa.Column('sale_location', sa.String(length=64), nullable=True),
    sa.Column('quantity_used', sa.Float(), nullable=True),
    sa.Column('batch_number', sa.String(length=128), nullable=True),
    sa.Column('lot_number', sa.String(length=128), nullable=True),
    sa.Column('temperature_at_time', sa.Float(), nullable=True),
    sa.Column('location_id', sa.String(length=128), nullable=True),
    sa.Column('location_name', sa.String(length=128), nullable=True),
    sa.Column('quality_status', sa.String(length=32), nullable=True),
    sa.Column('compliance_status', sa.String(length=32), nullable=True),
    sa.Column('quality_checked_by', sa.Integer(), nullable=True),
    sa.Column('marketplace_order_id', sa.String(length=128), nullable=True),
    sa.Column('marketplace_source', sa.String(length=32), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], ['batch.id'], ),
    sa.ForeignKeyConstraint(['container_id'], ['inventory_item.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['fifo_reference_id'], ['product_sku_history.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['quality_checked_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['sku_id'], ['product_sku.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # Create indexes
    with op.batch_alter_table('product_sku') as batch_op:
        batch_op.create_index('idx_product_variant', ['product_id', 'variant_id'])
        batch_op.create_index('idx_active_skus', ['is_active', 'is_product_active'])
        batch_op.create_index('idx_low_stock', ['current_quantity', 'low_stock_threshold'])

    with op.batch_alter_table('product_sku_history') as batch_op:
        batch_op.create_index('idx_sku_remaining', ['sku_id', 'remaining_quantity'])
        batch_op.create_index('idx_sku_timestamp', ['sku_id', 'timestamp'])
        batch_op.create_index('idx_change_type', ['change_type'])
        batch_op.create_index('idx_fifo_code', ['fifo_code'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('product_sku_history')
    op.drop_table('product_sku')
    op.drop_table('product_variant')
    op.drop_table('product')
    op.drop_table('user')
    op.drop_table('organization')
    op.drop_table('role_permission')
    op.drop_table('role')
    op.drop_table('permission')
    # ### end Alembic commands ###