"""empty message

Revision ID: 6e407e81008c
Revises: fix_nullable_constraints
Create Date: 2025-08-01 19:47:25.835121

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6e407e81008c'
down_revision = 'fix_nullable_constraints'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # First, update any NULL values in unit.type to a default value
    from sqlalchemy import text
    connection = op.get_bind()
    connection.execute(text("UPDATE unit SET type = 'volume' WHERE type IS NULL"))

    with op.batch_alter_table('organization', schema=None) as batch_op:
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('unit', schema=None) as batch_op:
        # Rename the existing type column to unit_type
        batch_op.alter_column('type', new_column_name='unit_type')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_column('updated_at')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))

    with op.batch_alter_table('unit', schema=None) as batch_op:
        # Rename unit_type back to type
        batch_op.alter_column('unit_type', new_column_name='type')

    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))

    with op.batch_alter_table('organization', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))

    # ### end Alembic commands ###