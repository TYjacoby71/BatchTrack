"""empty message

Revision ID: d953779b55a3
Revises: 20250912_01
Create Date: 2025-09-16 21:08:49.172551

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd953779b55a3'
down_revision = '20250912_01'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('storage_addon_purchase',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('stripe_session_id', sa.String(length=255), nullable=True),
    sa.Column('stripe_price_lookup_key', sa.String(length=128), nullable=True),
    sa.Column('retention_extension_days', sa.Integer(), nullable=True),
    sa.Column('purchased_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('storage_addon_subscription',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('stripe_subscription_id', sa.String(length=255), nullable=False),
    sa.Column('price_lookup_key', sa.String(length=128), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=False),
    sa.Column('current_period_end', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_subscription_id')
    )
    op.create_table('retention_deletion_queue',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=16), nullable=False),
    sa.Column('acknowledged_at', sa.DateTime(), nullable=True),
    sa.Column('delete_after_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipe.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'recipe_id', name='uq_retention_queue_org_recipe')
    )
    with op.batch_alter_table('batch_stats', schema=None) as batch_op:
        batch_op.drop_index('idx_batch_stats_org')
        batch_op.drop_index('idx_batch_stats_recipe')

    with op.batch_alter_table('domain_event', schema=None) as batch_op:
        batch_op.drop_index('ix_domain_event_entity')
        batch_op.drop_index('ix_domain_event_org')
        batch_op.drop_index('ix_domain_event_user')
        batch_op.create_index(batch_op.f('ix_domain_event_entity_id'), ['entity_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_domain_event_entity_type'), ['entity_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_domain_event_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_domain_event_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('freshness_snapshot', schema=None) as batch_op:
        batch_op.drop_index('ix_freshness_snapshot_date')
        batch_op.drop_index('ix_freshness_snapshot_item')
        batch_op.drop_index('ix_freshness_snapshot_org')
        batch_op.create_index(batch_op.f('ix_freshness_snapshot_inventory_item_id'), ['inventory_item_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_freshness_snapshot_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_freshness_snapshot_snapshot_date'), ['snapshot_date'], unique=False)

    with op.batch_alter_table('global_item', schema=None) as batch_op:
        batch_op.drop_index('ix_global_item_is_archived')
        batch_op.create_foreign_key(None, 'user', ['archived_by'], ['id'])
        batch_op.drop_column('suggested_inventory_category_id')

    with op.batch_alter_table('inventory_change_log', schema=None) as batch_op:
        batch_op.drop_index('idx_change_log_item_date')
        batch_op.drop_index('idx_change_log_type_date')

    with op.batch_alter_table('inventory_efficiency_stats', schema=None) as batch_op:
        batch_op.drop_index('idx_inventory_efficiency_org')

    with op.batch_alter_table('inventory_item', schema=None) as batch_op:
        batch_op.drop_index('ix_inventory_item_inventory_category_id')

    with op.batch_alter_table('product_sku', schema=None) as batch_op:
        batch_op.alter_column('inventory_item_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('recipe', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))

    with op.batch_alter_table('recipe_consumable', schema=None) as batch_op:
        batch_op.drop_index('ix_recipe_consumable_organization_id')

    with op.batch_alter_table('recipe_stats', schema=None) as batch_op:
        batch_op.drop_index('idx_recipe_stats_org')

    with op.batch_alter_table('subscription_tier', schema=None) as batch_op:
        batch_op.add_column(sa.Column('data_retention_days', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('retention_notice_days', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('storage_addon_retention_days', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('stripe_storage_lookup_key', sa.String(length=128), nullable=True))
        batch_op.create_unique_constraint('uq_subscription_tier_stripe_storage_lookup_key', ['stripe_storage_lookup_key'])

    with op.batch_alter_table('unit', schema=None) as batch_op:
        batch_op.alter_column('conversion_factor',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index('ix_user_organization_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index('ix_user_organization_id', ['organization_id'], unique=False)

    with op.batch_alter_table('unit', schema=None) as batch_op:
        batch_op.alter_column('conversion_factor',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)

    with op.batch_alter_table('subscription_tier', schema=None) as batch_op:
        batch_op.drop_constraint('uq_subscription_tier_stripe_storage_lookup_key', type_='unique')
        batch_op.drop_column('stripe_storage_lookup_key')
        batch_op.drop_column('storage_addon_retention_days')
        batch_op.drop_column('retention_notice_days')
        batch_op.drop_column('data_retention_days')

    with op.batch_alter_table('recipe_stats', schema=None) as batch_op:
        batch_op.create_index('idx_recipe_stats_org', ['organization_id'], unique=False)

    with op.batch_alter_table('recipe_consumable', schema=None) as batch_op:
        batch_op.create_index('ix_recipe_consumable_organization_id', ['organization_id'], unique=False)

    with op.batch_alter_table('recipe', schema=None) as batch_op:
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('product_sku', schema=None) as batch_op:
        batch_op.alter_column('inventory_item_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('inventory_item', schema=None) as batch_op:
        batch_op.create_index('ix_inventory_item_inventory_category_id', ['inventory_category_id'], unique=False)

    with op.batch_alter_table('inventory_efficiency_stats', schema=None) as batch_op:
        batch_op.create_index('idx_inventory_efficiency_org', ['organization_id'], unique=False)

    with op.batch_alter_table('inventory_change_log', schema=None) as batch_op:
        batch_op.create_index('idx_change_log_type_date', ['change_type', 'change_date'], unique=False)
        batch_op.create_index('idx_change_log_item_date', ['inventory_item_id', 'change_date'], unique=False)

    with op.batch_alter_table('global_item', schema=None) as batch_op:
        batch_op.add_column(sa.Column('suggested_inventory_category_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_index('ix_global_item_is_archived', ['is_archived'], unique=False)

    with op.batch_alter_table('freshness_snapshot', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_freshness_snapshot_snapshot_date'))
        batch_op.drop_index(batch_op.f('ix_freshness_snapshot_organization_id'))
        batch_op.drop_index(batch_op.f('ix_freshness_snapshot_inventory_item_id'))
        batch_op.create_index('ix_freshness_snapshot_org', ['organization_id'], unique=False)
        batch_op.create_index('ix_freshness_snapshot_item', ['inventory_item_id'], unique=False)
        batch_op.create_index('ix_freshness_snapshot_date', ['snapshot_date'], unique=False)

    with op.batch_alter_table('domain_event', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_domain_event_user_id'))
        batch_op.drop_index(batch_op.f('ix_domain_event_organization_id'))
        batch_op.drop_index(batch_op.f('ix_domain_event_entity_type'))
        batch_op.drop_index(batch_op.f('ix_domain_event_entity_id'))
        batch_op.create_index('ix_domain_event_user', ['user_id'], unique=False)
        batch_op.create_index('ix_domain_event_org', ['organization_id'], unique=False)
        batch_op.create_index('ix_domain_event_entity', ['entity_type', 'entity_id'], unique=False)

    with op.batch_alter_table('batch_stats', schema=None) as batch_op:
        batch_op.create_index('idx_batch_stats_recipe', ['recipe_id'], unique=False)
        batch_op.create_index('idx_batch_stats_org', ['organization_id'], unique=False)

    op.drop_table('retention_deletion_queue')
    op.drop_table('storage_addon_subscription')
    op.drop_table('storage_addon_purchase')
    # ### end Alembic commands ###
