"""add_subscription_table_final

Revision ID: fd6ec9059553
Revises: consolidate_all_heads_final
Create Date: 2025-07-19 06:00:09.057257

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fd6ec9059553'
down_revision = 'consolidate_all_heads_final'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('subscription',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('tier', sa.String(length=32), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.Column('current_period_start', sa.DateTime(), nullable=True),
    sa.Column('current_period_end', sa.DateTime(), nullable=True),
    sa.Column('next_billing_date', sa.DateTime(), nullable=True),
    sa.Column('trial_start', sa.DateTime(), nullable=True),
    sa.Column('trial_end', sa.DateTime(), nullable=True),
    sa.Column('trial_days_remaining', sa.Integer(), nullable=True),
    sa.Column('stripe_subscription_id', sa.String(length=128), nullable=True),
    sa.Column('stripe_customer_id', sa.String(length=128), nullable=True),
    sa.Column('discount_percent', sa.Float(), nullable=True),
    sa.Column('discount_end_date', sa.DateTime(), nullable=True),
    sa.Column('comp_months_remaining', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('_alembic_tmp_role')
    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.create_unique_constraint('unique_role_name_org', ['name', 'organization_id'])
        batch_op.create_foreign_key('fk_role_created_by', 'user', ['created_by'], ['id'])
        batch_op.create_foreign_key('fk_role_organization', 'organization', ['organization_id'], ['id'])

    with op.batch_alter_table('tag', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.create_unique_constraint('_tag_name_org_uc', ['name', 'organization_id'])
        batch_op.create_index(batch_op.f('ix_tag_organization_id'), ['organization_id'], unique=False)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_column('is_owner')
        batch_op.drop_column('subscription_class')

    with op.batch_alter_table('user_preferences', schema=None) as batch_op:
        batch_op.alter_column('timezone',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=64),
               existing_nullable=True)
        batch_op.drop_index('ix_user_preferences_organization_id')
        batch_op.drop_column('expiration_warning_days')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_preferences', schema=None) as batch_op:
        batch_op.add_column(sa.Column('expiration_warning_days', sa.INTEGER(), server_default=sa.text('3'), nullable=True))
        batch_op.create_index('ix_user_preferences_organization_id', ['organization_id'], unique=False)
        batch_op.alter_column('timezone',
               existing_type=sa.String(length=64),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('subscription_class', sa.VARCHAR(length=32), nullable=True))
        batch_op.add_column(sa.Column('is_owner', sa.BOOLEAN(), nullable=True))

    with op.batch_alter_table('tag', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tag_organization_id'))
        batch_op.drop_constraint('_tag_name_org_uc', type_='unique')
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('created_at')

    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.drop_constraint('fk_role_organization', type_='foreignkey')
        batch_op.drop_constraint('fk_role_created_by', type_='foreignkey')
        batch_op.drop_constraint('unique_role_name_org', type_='unique')

    op.create_table('_alembic_tmp_role',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=64), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('is_system_role', sa.BOOLEAN(), nullable=True),
    sa.Column('created_by', sa.INTEGER(), nullable=True),
    sa.Column('organization_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], name='fk_role_created_by'),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], name='fk_role_organization'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('name', 'organization_id', name='uq_role_name_organization')
    )
    op.drop_table('subscription')
    # ### end Alembic commands ###
