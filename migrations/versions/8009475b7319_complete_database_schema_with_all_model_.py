"""Complete database schema with all model columns

Revision ID: 8009475b7319
Revises: 
Create Date: 2025-07-26 04:34:15.798561

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8009475b7319'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('batch',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('label_code', sa.String(length=32), nullable=True),
    sa.Column('batch_type', sa.String(length=32), nullable=False),
    sa.Column('projected_yield', sa.Float(), nullable=True),
    sa.Column('projected_yield_unit', sa.String(length=50), nullable=True),
    sa.Column('sku_id', sa.Integer(), nullable=True),
    sa.Column('final_quantity', sa.Float(), nullable=True),
    sa.Column('output_unit', sa.String(length=50), nullable=True),
    sa.Column('scale', sa.Float(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('status_reason', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('total_cost', sa.Float(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('failed_at', sa.DateTime(), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(), nullable=True),
    sa.Column('inventory_credited', sa.Boolean(), nullable=True),
    sa.Column('is_perishable', sa.Boolean(), nullable=True),
    sa.Column('shelf_life_days', sa.Integer(), nullable=True),
    sa.Column('expiration_date', sa.DateTime(), nullable=True),
    sa.Column('remaining_quantity', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipe.id'], ),
    sa.ForeignKeyConstraint(['sku_id'], ['product_sku.inventory_item_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('label_code')
    )
    op.create_table('developer_permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=64), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('developer_role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=32), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=64), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('product_sku',
    sa.Column('inventory_item_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('variant_id', sa.Integer(), nullable=False),
    sa.Column('size_label', sa.String(length=64), nullable=False),
    sa.Column('sku_code', sa.String(length=64), nullable=False),
    sa.Column('sku_name', sa.String(length=128), nullable=True),
    sa.Column('unit', sa.String(length=32), nullable=False),
    sa.Column('low_stock_threshold', sa.Float(), nullable=True),
    sa.Column('fifo_id', sa.String(length=32), nullable=True),
    sa.Column('batch_id', sa.Integer(), nullable=True),
    sa.Column('container_id', sa.Integer(), nullable=True),
    sa.Column('retail_price', sa.Float(), nullable=True),
    sa.Column('wholesale_price', sa.Float(), nullable=True),
    sa.Column('profit_margin_target', sa.Float(), nullable=True),
    sa.Column('category', sa.String(length=64), nullable=True),
    sa.Column('subcategory', sa.String(length=64), nullable=True),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_product_active', sa.Boolean(), nullable=True),
    sa.Column('is_discontinued', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('supplier_name', sa.String(length=128), nullable=True),
    sa.Column('supplier_sku', sa.String(length=64), nullable=True),
    sa.Column('supplier_cost', sa.Float(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('weight_unit', sa.String(length=16), nullable=True),
    sa.Column('dimensions', sa.String(length=64), nullable=True),
    sa.Column('barcode', sa.String(length=128), nullable=True),
    sa.Column('upc', sa.String(length=32), nullable=True),
    sa.Column('quality_status', sa.String(length=32), nullable=True),
    sa.Column('compliance_status', sa.String(length=32), nullable=True),
    sa.Column('quality_checked_by', sa.Integer(), nullable=True),
    sa.Column('quality_checked_at', sa.DateTime(), nullable=True),
    sa.Column('location_id', sa.String(length=128), nullable=True),
    sa.Column('location_name', sa.String(length=128), nullable=True),
    sa.Column('temperature_at_time', sa.Float(), nullable=True),
    sa.Column('shopify_product_id', sa.String(length=64), nullable=True),
    sa.Column('shopify_variant_id', sa.String(length=64), nullable=True),
    sa.Column('etsy_listing_id', sa.String(length=64), nullable=True),
    sa.Column('amazon_asin', sa.String(length=64), nullable=True),
    sa.Column('marketplace_sync_status', sa.String(length=32), nullable=True),
    sa.Column('marketplace_last_sync', sa.DateTime(), nullable=True),
    sa.Column('expiration_date', sa.DateTime(), nullable=True),
    sa.Column('is_perishable', sa.Boolean(), nullable=True),
    sa.Column('shelf_life_days', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['batch_id'], ['batch.id'], ),
    sa.ForeignKeyConstraint(['container_id'], ['inventory_item.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['inventory_item_id'], ['inventory_item.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['quality_checked_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['variant_id'], ['product_variant.id'], ),
    sa.PrimaryKeyConstraint('inventory_item_id'),
    sa.UniqueConstraint('barcode'),
    sa.UniqueConstraint('barcode', name='unique_barcode'),
    sa.UniqueConstraint('product_id', 'variant_id', 'size_label', 'fifo_id', name='unique_sku_combination'),
    sa.UniqueConstraint('sku_code'),
    sa.UniqueConstraint('upc'),
    sa.UniqueConstraint('upc', name='unique_upc')
    )
    with op.batch_alter_table('product_sku', schema=None) as batch_op:
        batch_op.create_index('idx_active_skus', ['is_active', 'is_product_active'], unique=False)
        batch_op.create_index('idx_inventory_item', ['inventory_item_id'], unique=False)
        batch_op.create_index('idx_product_variant', ['product_id', 'variant_id'], unique=False)

    op.create_table('subscription_tier',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('key', sa.String(length=32), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('user_limit', sa.Integer(), nullable=True),
    sa.Column('is_customer_facing', sa.Boolean(), nullable=True),
    sa.Column('is_available', sa.Boolean(), nullable=True),
    sa.Column('stripe_lookup_key', sa.String(length=128), nullable=True),
    sa.Column('stripe_customer_id', sa.String(length=128), nullable=True),
    sa.Column('stripe_subscription_id', sa.String(length=128), nullable=True),
    sa.Column('stripe_price_id_monthly', sa.String(length=128), nullable=True),
    sa.Column('stripe_price_id_yearly', sa.String(length=128), nullable=True),
    sa.Column('fallback_price_monthly', sa.String(length=32), nullable=True),
    sa.Column('fallback_price_yearly', sa.String(length=32), nullable=True),
    sa.Column('stripe_price_monthly', sa.String(length=32), nullable=True),
    sa.Column('stripe_price_yearly', sa.String(length=32), nullable=True),
    sa.Column('last_synced', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.Column('current_period_start', sa.DateTime(), nullable=True),
    sa.Column('current_period_end', sa.DateTime(), nullable=True),
    sa.Column('next_billing_date', sa.DateTime(), nullable=True),
    sa.Column('trial_start', sa.DateTime(), nullable=True),
    sa.Column('trial_end', sa.DateTime(), nullable=True),
    sa.Column('cancel_at_period_end', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )
    op.create_table('developer_role_permission',
    sa.Column('developer_role_id', sa.Integer(), nullable=False),
    sa.Column('developer_permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['developer_permission_id'], ['developer_permission.id'], ),
    sa.ForeignKeyConstraint(['developer_role_id'], ['developer_role.id'], ),
    sa.PrimaryKeyConstraint('developer_role_id', 'developer_permission_id')
    )
    op.create_table('organization',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('contact_email', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('signup_source', sa.String(length=64), nullable=True),
    sa.Column('promo_code', sa.String(length=32), nullable=True),
    sa.Column('referral_code', sa.String(length=32), nullable=True),
    sa.Column('subscription_tier_id', sa.Integer(), nullable=True),
    sa.Column('subscription_tier', sa.String(length=32), nullable=True),
    sa.ForeignKeyConstraint(['subscription_tier_id'], ['subscription_tier.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subscription_tier_permission',
    sa.Column('tier_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], ),
    sa.ForeignKeyConstraint(['tier_id'], ['subscription_tier.id'], ),
    sa.PrimaryKeyConstraint('tier_id', 'permission_id')
    )
    op.create_table('organization_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('total_batches', sa.Integer(), nullable=True),
    sa.Column('completed_batches', sa.Integer(), nullable=True),
    sa.Column('failed_batches', sa.Integer(), nullable=True),
    sa.Column('cancelled_batches', sa.Integer(), nullable=True),
    sa.Column('total_users', sa.Integer(), nullable=True),
    sa.Column('active_users', sa.Integer(), nullable=True),
    sa.Column('total_recipes', sa.Integer(), nullable=True),
    sa.Column('total_inventory_items', sa.Integer(), nullable=True),
    sa.Column('total_inventory_value', sa.Float(), nullable=True),
    sa.Column('total_products', sa.Integer(), nullable=True),
    sa.Column('total_products_made', sa.Float(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=True),
    sa.Column('last_name', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('user_type', sa.String(length=32), nullable=True),
    sa.Column('is_organization_owner', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('timezone', sa.String(length=64), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_by', sa.Integer(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['deleted_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('batch_timer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('batch_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('duration_seconds', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], ['batch.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('conversion_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('from_unit', sa.String(length=32), nullable=False),
    sa.Column('to_unit', sa.String(length=32), nullable=False),
    sa.Column('result', sa.Float(), nullable=False),
    sa.Column('conversion_type', sa.String(length=64), nullable=False),
    sa.Column('ingredient_name', sa.String(length=128), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('custom_unit_mapping',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('from_unit', sa.String(length=64), nullable=False),
    sa.Column('to_unit', sa.String(length=64), nullable=False),
    sa.Column('conversion_factor', sa.Float(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ingredient_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('color', sa.String(length=7), nullable=True),
    sa.Column('default_density', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('base_unit', sa.String(length=32), nullable=False),
    sa.Column('category', sa.String(length=64), nullable=True),
    sa.Column('subcategory', sa.String(length=64), nullable=True),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('low_stock_threshold', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_discontinued', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('shopify_product_id', sa.String(length=64), nullable=True),
    sa.Column('etsy_shop_section_id', sa.String(length=64), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'organization_id', name='unique_product_name_per_org')
    )
    op.create_table('recipe',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('instructions', sa.Text(), nullable=True),
    sa.Column('label_prefix', sa.String(length=8), nullable=True),
    sa.Column('qr_image', sa.String(length=128), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('is_locked', sa.Boolean(), nullable=True),
    sa.Column('predicted_yield', sa.Float(), nullable=True),
    sa.Column('predicted_yield_unit', sa.String(length=50), nullable=True),
    sa.Column('allowed_containers', sa.PickleType(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['recipe.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_system_role', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'organization_id', name='unique_role_name_org')
    )
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('color', sa.String(length=7), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'organization_id', name='_tag_name_org_uc')
    )
    op.create_table('unit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('symbol', sa.String(length=16), nullable=False),
    sa.Column('type', sa.String(length=32), nullable=False),
    sa.Column('base_unit', sa.String(length=64), nullable=True),
    sa.Column('conversion_factor', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_custom', sa.Boolean(), nullable=True),
    sa.Column('is_mapped', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'organization_id', name='_unit_name_org_uc')
    )
    with op.batch_alter_table('unit', schema=None) as batch_op:
        batch_op.create_index('ix_unit_standard_unique', ['name'], unique=True)

    op.create_table('user_preferences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('max_dashboard_alerts', sa.Integer(), nullable=True),
    sa.Column('show_expiration_alerts', sa.Boolean(), nullable=True),
    sa.Column('show_timer_alerts', sa.Boolean(), nullable=True),
    sa.Column('show_low_stock_alerts', sa.Boolean(), nullable=True),
    sa.Column('show_batch_alerts', sa.Boolean(), nullable=True),
    sa.Column('show_fault_alerts', sa.Boolean(), nullable=True),
    sa.Column('show_alert_badges', sa.Boolean(), nullable=True),
    sa.Column('dashboard_layout', sa.String(length=32), nullable=True),
    sa.Column('compact_view', sa.Boolean(), nullable=True),
    sa.Column('show_quick_actions', sa.Boolean(), nullable=True),
    sa.Column('timezone', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('user_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('total_batches', sa.Integer(), nullable=True),
    sa.Column('completed_batches', sa.Integer(), nullable=True),
    sa.Column('failed_batches', sa.Integer(), nullable=True),
    sa.Column('cancelled_batches', sa.Integer(), nullable=True),
    sa.Column('total_recipes', sa.Integer(), nullable=True),
    sa.Column('recipes_created', sa.Integer(), nullable=True),
    sa.Column('inventory_adjustments', sa.Integer(), nullable=True),
    sa.Column('inventory_items_created', sa.Integer(), nullable=True),
    sa.Column('products_created', sa.Integer(), nullable=True),
    sa.Column('total_products_made', sa.Float(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inventory_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Float(), nullable=True),
    sa.Column('unit', sa.String(length=32), nullable=False),
    sa.Column('cost_per_unit', sa.Float(), nullable=True),
    sa.Column('low_stock_threshold', sa.Float(), nullable=True),
    sa.Column('density', sa.Float(), nullable=True),
    sa.Column('type', sa.String(length=32), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=True),
    sa.Column('is_perishable', sa.Boolean(), nullable=True),
    sa.Column('shelf_life_days', sa.Integer(), nullable=True),
    sa.Column('expiration_date', sa.Date(), nullable=True),
    sa.Column('storage_amount', sa.Float(), nullable=True),
    sa.Column('storage_unit', sa.String(length=32), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('intermediate', sa.Boolean(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['ingredient_category.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('product_variant',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('color', sa.String(length=32), nullable=True),
    sa.Column('material', sa.String(length=64), nullable=True),
    sa.Column('scent', sa.String(length=64), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('product_id', 'name', name='unique_product_variant')
    )
    op.create_table('role_permission',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_table('user_role_assignment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('developer_role_id', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('assigned_at', sa.DateTime(), nullable=True),
    sa.Column('assigned_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['developer_role_id'], ['developer_role.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('batch_container',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('batch_id', sa.Integer(), nullable=False),
    sa.Column('container_id', sa.Integer(), nullable=False),
    sa.Column('container_quantity', sa.Integer(), nullable=False),
    sa.Column('quantity_used', sa.Integer(), nullable=False),
    sa.Column('fill_quantity', sa.Float(), nullable=True),
    sa.Column('fill_unit', sa.String(length=32), nullable=True),
    sa.Column('cost_each', sa.Float(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['batch_id'], ['batch.id'], ),
    sa.ForeignKeyConstraint(['container_id'], ['inventory_item.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('batch_ingredient',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('batch_id', sa.Integer(), nullable=False),
    sa.Column('inventory_item_id', sa.Integer(), nullable=False),
    sa.Column('quantity_used', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=32), nullable=False),
    sa.Column('cost_per_unit', sa.Float(), nullable=True),
    sa.Column('total_cost', sa.Float(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], ['batch.id'], ),
    sa.ForeignKeyConstraint(['inventory_item_id'], ['inventory_item.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('batch_inventory_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('batch_id', sa.Integer(), nullable=False),
    sa.Column('inventory_item_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=32), nullable=False),
    sa.Column('quantity_change', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=32), nullable=False),
    sa.Column('old_stock', sa.Float(), nullable=False),
    sa.Column('new_stock', sa.Float(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['batch_id'], ['batch.id'], ),
    sa.ForeignKeyConstraint(['inventory_item_id'], ['inventory_item.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('extra_batch_container',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('batch_id', sa.Integer(), nullable=False),
    sa.Column('container_id', sa.Integer(), nullable=False),
    sa.Column('container_quantity', sa.Integer(), nullable=False),
    sa.Column('quantity_used', sa.Integer(), nullable=False),
    sa.Column('fill_quantity', sa.Float(), nullable=True),
    sa.Column('fill_unit', sa.String(length=32), nullable=True),
    sa.Column('cost_each', sa.Float(), nullable=True),
    sa.Column('reason', sa.String(length=20), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['batch_id'], ['batch.id'], ),
    sa.ForeignKeyConstraint(['container_id'], ['inventory_item.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('extra_batch_ingredient',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('batch_id', sa.Integer(), nullable=False),
    sa.Column('inventory_item_id', sa.Integer(), nullable=False),
    sa.Column('quantity_used', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=32), nullable=False),
    sa.Column('cost_per_unit', sa.Float(), nullable=True),
    sa.Column('total_cost', sa.Float(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['batch_id'], ['batch.id'], ),
    sa.ForeignKeyConstraint(['inventory_item_id'], ['inventory_item.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inventory_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('inventory_item_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('change_type', sa.String(length=32), nullable=False),
    sa.Column('quantity_change', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=32), nullable=False),
    sa.Column('remaining_quantity', sa.Float(), nullable=True),
    sa.Column('unit_cost', sa.Float(), nullable=True),
    sa.Column('fifo_reference_id', sa.Integer(), nullable=True),
    sa.Column('fifo_code', sa.String(length=32), nullable=True),
    sa.Column('batch_id', sa.Integer(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('quantity_used', sa.Float(), nullable=True),
    sa.Column('used_for_batch_id', sa.Integer(), nullable=True),
    sa.Column('is_perishable', sa.Boolean(), nullable=True),
    sa.Column('shelf_life_days', sa.Integer(), nullable=True),
    sa.Column('expiration_date', sa.DateTime(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['batch_id'], ['batch.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['fifo_reference_id'], ['inventory_history.id'], ),
    sa.ForeignKeyConstraint(['inventory_item_id'], ['inventory_item.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['used_for_batch_id'], ['batch.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product_sku_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('inventory_item_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('change_type', sa.String(length=32), nullable=False),
    sa.Column('quantity_change', sa.Float(), nullable=False),
    sa.Column('remaining_quantity', sa.Float(), nullable=True),
    sa.Column('unit', sa.String(length=32), nullable=False),
    sa.Column('unit_cost', sa.Float(), nullable=True),
    sa.Column('sale_price', sa.Float(), nullable=True),
    sa.Column('customer', sa.String(length=128), nullable=True),
    sa.Column('fifo_code', sa.String(length=64), nullable=True),
    sa.Column('fifo_reference_id', sa.Integer(), nullable=True),
    sa.Column('fifo_source', sa.String(length=128), nullable=True),
    sa.Column('is_perishable', sa.Boolean(), nullable=True),
    sa.Column('shelf_life_days', sa.Integer(), nullable=True),
    sa.Column('expiration_date', sa.DateTime(), nullable=True),
    sa.Column('batch_id', sa.Integer(), nullable=True),
    sa.Column('container_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('order_id', sa.String(length=64), nullable=True),
    sa.Column('reservation_id', sa.String(length=64), nullable=True),
    sa.Column('is_reserved', sa.Boolean(), nullable=True),
    sa.Column('sale_location', sa.String(length=64), nullable=True),
    sa.Column('quantity_used', sa.Float(), nullable=True),
    sa.Column('batch_number', sa.String(length=128), nullable=True),
    sa.Column('lot_number', sa.String(length=128), nullable=True),
    sa.Column('temperature_at_time', sa.Float(), nullable=True),
    sa.Column('location_id', sa.String(length=128), nullable=True),
    sa.Column('location_name', sa.String(length=128), nullable=True),
    sa.Column('quality_status', sa.String(length=32), nullable=True),
    sa.Column('compliance_status', sa.String(length=32), nullable=True),
    sa.Column('quality_checked_by', sa.Integer(), nullable=True),
    sa.Column('marketplace_order_id', sa.String(length=128), nullable=True),
    sa.Column('marketplace_source', sa.String(length=32), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['batch_id'], ['batch.id'], ),
    sa.ForeignKeyConstraint(['container_id'], ['inventory_item.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['fifo_reference_id'], ['product_sku_history.id'], ),
    sa.ForeignKeyConstraint(['inventory_item_id'], ['inventory_item.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['quality_checked_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('product_sku_history', schema=None) as batch_op:
        batch_op.create_index('idx_change_type', ['change_type'], unique=False)
        batch_op.create_index('idx_fifo_code', ['fifo_code'], unique=False)
        batch_op.create_index('idx_inventory_item_remaining', ['inventory_item_id', 'remaining_quantity'], unique=False)
        batch_op.create_index('idx_inventory_item_timestamp', ['inventory_item_id', 'timestamp'], unique=False)

    op.create_table('recipe_ingredient',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('inventory_item_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=32), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('order_position', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['inventory_item_id'], ['inventory_item.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipe.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reservation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.String(length=128), nullable=False),
    sa.Column('reservation_id', sa.String(length=128), nullable=True),
    sa.Column('product_item_id', sa.Integer(), nullable=False),
    sa.Column('reserved_item_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=32), nullable=False),
    sa.Column('unit_cost', sa.Float(), nullable=True),
    sa.Column('sale_price', sa.Float(), nullable=True),
    sa.Column('customer', sa.String(length=128), nullable=True),
    sa.Column('source_fifo_id', sa.Integer(), nullable=True),
    sa.Column('source_batch_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.Column('source', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('released_at', sa.DateTime(), nullable=True),
    sa.Column('converted_at', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['product_item_id'], ['inventory_item.id'], ),
    sa.ForeignKeyConstraint(['reserved_item_id'], ['inventory_item.id'], ),
    sa.ForeignKeyConstraint(['source_batch_id'], ['batch.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('reservation', schema=None) as batch_op:
        batch_op.create_index('idx_expires_at', ['expires_at'], unique=False)
        batch_op.create_index('idx_order_status', ['order_id', 'status'], unique=False)
        batch_op.create_index('idx_reserved_item_status', ['reserved_item_id', 'status'], unique=False)
        batch_op.create_index(batch_op.f('ix_reservation_order_id'), ['order_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reservation', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_reservation_order_id'))
        batch_op.drop_index('idx_reserved_item_status')
        batch_op.drop_index('idx_order_status')
        batch_op.drop_index('idx_expires_at')

    op.drop_table('reservation')
    op.drop_table('recipe_ingredient')
    with op.batch_alter_table('product_sku_history', schema=None) as batch_op:
        batch_op.drop_index('idx_inventory_item_timestamp')
        batch_op.drop_index('idx_inventory_item_remaining')
        batch_op.drop_index('idx_fifo_code')
        batch_op.drop_index('idx_change_type')

    op.drop_table('product_sku_history')
    op.drop_table('inventory_history')
    op.drop_table('extra_batch_ingredient')
    op.drop_table('extra_batch_container')
    op.drop_table('batch_inventory_log')
    op.drop_table('batch_ingredient')
    op.drop_table('batch_container')
    op.drop_table('user_role_assignment')
    op.drop_table('role_permission')
    op.drop_table('product_variant')
    op.drop_table('inventory_item')
    op.drop_table('user_stats')
    op.drop_table('user_preferences')
    with op.batch_alter_table('unit', schema=None) as batch_op:
        batch_op.drop_index('ix_unit_standard_unique')

    op.drop_table('unit')
    op.drop_table('tag')
    op.drop_table('role')
    op.drop_table('recipe')
    op.drop_table('product')
    op.drop_table('ingredient_category')
    op.drop_table('custom_unit_mapping')
    op.drop_table('conversion_log')
    op.drop_table('batch_timer')
    op.drop_table('user')
    op.drop_table('organization_stats')
    op.drop_table('subscription_tier_permission')
    op.drop_table('organization')
    op.drop_table('developer_role_permission')
    op.drop_table('subscription_tier')
    with op.batch_alter_table('product_sku', schema=None) as batch_op:
        batch_op.drop_index('idx_product_variant')
        batch_op.drop_index('idx_inventory_item')
        batch_op.drop_index('idx_active_skus')

    op.drop_table('product_sku')
    op.drop_table('permission')
    op.drop_table('developer_role')
    op.drop_table('developer_permission')
    op.drop_table('batch')
    # ### end Alembic commands ###
