
"""add_user_type_column

Revision ID: f6a9b50d9a17
Revises: 6e0c5e2e1c48
Create Date: 2025-07-11 03:28:10.848583

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f6a9b50d9a17'
down_revision = '6e0c5e2e1c48'
branch_labels = None
depends_on = None


def upgrade():
    # Check if columns already exist before adding them
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    columns = [col['name'] for col in inspector.get_columns('user')]
    
    with op.batch_alter_table('user', schema=None) as batch_op:
        # Add user_type column if it doesn't exist
        if 'user_type' not in columns:
            batch_op.add_column(sa.Column('user_type', sa.String(length=32), nullable=True))
        else:
            print("user_type column already exists, skipping...")
        
        # Add is_active column if it doesn't exist
        if 'is_active' not in columns:
            batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))
        else:
            print("is_active column already exists, skipping...")

    # Check if user_preferences table and indexes exist
    user_prefs_tables = inspector.get_table_names()
    
    if 'user_preferences' in user_prefs_tables:
        # Get existing indexes for user_preferences table
        existing_indexes = [idx['name'] for idx in inspector.get_indexes('user_preferences')]
        
        with op.batch_alter_table('user_preferences', schema=None) as batch_op:
            batch_op.alter_column('id',
                   existing_type=sa.INTEGER(),
                   nullable=False,
                   autoincrement=True)
            
            # Only create index if it doesn't exist
            if 'ix_user_preferences_organization_id' not in existing_indexes:
                batch_op.create_index(batch_op.f('ix_user_preferences_organization_id'), ['organization_id'], unique=False)
            else:
                print("ix_user_preferences_organization_id index already exists, skipping...")
    else:
        print("user_preferences table doesn't exist, skipping index creation...")


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_preferences', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_preferences_organization_id'))
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_column('is_active')
        batch_op.drop_column('user_type')

    # ### end Alembic commands ###
