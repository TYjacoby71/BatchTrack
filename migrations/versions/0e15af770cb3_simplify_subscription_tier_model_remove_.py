"""simplify subscription tier model - remove billing fields

Revision ID: 0e15af770cb3
Revises: a1b2c3d4e5f6789012345678901234ab
Create Date: 2025-08-06 00:21:44.088211

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0e15af770cb3'
down_revision = 'a1b2c3d4e5f6789012345678901234ab'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('batch', schema=None) as batch_op:
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('batch_container', schema=None) as batch_op:
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('batch_ingredient', schema=None) as batch_op:
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('batch_inventory_log', schema=None) as batch_op:
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('batch_timer', schema=None) as batch_op:
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('developer_permission', schema=None) as batch_op:
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('developer_role', schema=None) as batch_op:
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('extra_batch_container', schema=None) as batch_op:
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('extra_batch_ingredient', schema=None) as batch_op:
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('inventory_history', schema=None) as batch_op:
        batch_op.drop_index('idx_inventory_history_fifo_code')
        batch_op.drop_index('idx_inventory_history_item_remaining')
        batch_op.drop_index('idx_inventory_history_timestamp')
        batch_op.drop_column('quantity_after')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('reason')
        batch_op.drop_column('quantity_before')
        batch_op.drop_column('order_id')
        batch_op.drop_column('created_at')
        batch_op.drop_column('source')

    with op.batch_alter_table('inventory_item', schema=None) as batch_op:
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('organization', schema=None) as batch_op:
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('organization_stats', schema=None) as batch_op:
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('permission', schema=None) as batch_op:
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('product_sku_history', schema=None) as batch_op:
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('product_variant', schema=None) as batch_op:
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('recipe', schema=None) as batch_op:
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('recipe_ingredient', schema=None) as batch_op:
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('reservation', schema=None) as batch_op:
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('subscription_tier', schema=None) as batch_op:
        batch_op.add_column(sa.Column('fallback_price', sa.String(length=32), nullable=True))
        batch_op.drop_column('stripe_price_yearly')
        batch_op.drop_column('trial_start')
        batch_op.drop_column('fallback_price_monthly')
        batch_op.drop_column('last_synced')
        batch_op.drop_column('stripe_customer_id')
        batch_op.drop_column('stripe_price_id_yearly')
        batch_op.drop_column('current_period_end')
        batch_op.drop_column('stripe_price_id_monthly')
        batch_op.drop_column('whop_last_synced')
        batch_op.drop_column('current_period_start')
        batch_op.drop_column('trial_end')
        batch_op.drop_column('stripe_price_monthly')
        batch_op.drop_column('status')
        batch_op.drop_column('next_billing_date')
        batch_op.drop_column('stripe_subscription_id')
        batch_op.drop_column('cancel_at_period_end')
        batch_op.drop_column('fallback_price_yearly')
        batch_op.drop_column('whop_product_name')

    with op.batch_alter_table('tag', schema=None) as batch_op:
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('user_role_assignment', schema=None) as batch_op:
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('user_stats', schema=None) as batch_op:
        batch_op.drop_column('updated_at')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_stats', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))

    with op.batch_alter_table('user_role_assignment', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))

    with op.batch_alter_table('tag', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))

    with op.batch_alter_table('subscription_tier', schema=None) as batch_op:
        batch_op.add_column(sa.Column('whop_product_name', sa.VARCHAR(length=256), nullable=True))
        batch_op.add_column(sa.Column('fallback_price_yearly', sa.VARCHAR(length=32), nullable=True))
        batch_op.add_column(sa.Column('cancel_at_period_end', sa.BOOLEAN(), nullable=True))
        batch_op.add_column(sa.Column('stripe_subscription_id', sa.VARCHAR(length=128), nullable=True))
        batch_op.add_column(sa.Column('next_billing_date', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('status', sa.VARCHAR(length=32), nullable=True))
        batch_op.add_column(sa.Column('stripe_price_monthly', sa.VARCHAR(length=32), nullable=True))
        batch_op.add_column(sa.Column('trial_end', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('current_period_start', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('whop_last_synced', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('stripe_price_id_monthly', sa.VARCHAR(length=128), nullable=True))
        batch_op.add_column(sa.Column('current_period_end', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('stripe_price_id_yearly', sa.VARCHAR(length=128), nullable=True))
        batch_op.add_column(sa.Column('stripe_customer_id', sa.VARCHAR(length=128), nullable=True))
        batch_op.add_column(sa.Column('last_synced', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('fallback_price_monthly', sa.VARCHAR(length=32), nullable=True))
        batch_op.add_column(sa.Column('trial_start', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('stripe_price_yearly', sa.VARCHAR(length=32), nullable=True))
        batch_op.drop_column('fallback_price')

    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))

    with op.batch_alter_table('reservation', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))

    with op.batch_alter_table('recipe_ingredient', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))

    with op.batch_alter_table('recipe', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))

    with op.batch_alter_table('product_variant', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))

    with op.batch_alter_table('product_sku_history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))

    with op.batch_alter_table('permission', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))

    with op.batch_alter_table('organization_stats', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))

    with op.batch_alter_table('organization', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))

    with op.batch_alter_table('inventory_item', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))

    with op.batch_alter_table('inventory_history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('source', sa.VARCHAR(length=100), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('order_id', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('quantity_before', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('reason', sa.TEXT(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('quantity_after', sa.FLOAT(), nullable=True))
        batch_op.create_index('idx_inventory_history_timestamp', ['timestamp'], unique=False)
        batch_op.create_index('idx_inventory_history_item_remaining', ['inventory_item_id', 'remaining_quantity'], unique=False)
        batch_op.create_index('idx_inventory_history_fifo_code', ['fifo_code'], unique=False)

    with op.batch_alter_table('extra_batch_ingredient', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))

    with op.batch_alter_table('extra_batch_container', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))

    with op.batch_alter_table('developer_role', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))

    with op.batch_alter_table('developer_permission', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))

    with op.batch_alter_table('batch_timer', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))

    with op.batch_alter_table('batch_inventory_log', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))

    with op.batch_alter_table('batch_ingredient', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))

    with op.batch_alter_table('batch_container', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))

    with op.batch_alter_table('batch', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))

    # ### end Alembic commands ###
