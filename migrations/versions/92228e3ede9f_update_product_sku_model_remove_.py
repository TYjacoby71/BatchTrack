"""update_product_sku_model_remove_quantity_columns

Revision ID: 92228e3ede9f
Revises: 45e872336209
Create Date: 2025-07-04 21:03:06.949659

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '92228e3ede9f'
down_revision = '45e872336209'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('product_sku', schema=None) as batch_op:
        # Add column as nullable first
        batch_op.add_column(sa.Column('inventory_item_id', sa.Integer(), nullable=True))
        batch_op.drop_index('idx_low_stock')
        batch_op.create_index('idx_inventory_item', ['inventory_item_id'], unique=False)
        batch_op.create_foreign_key('fk_product_sku_inventory_item', 'inventory_item', ['inventory_item_id'], ['id'])
        batch_op.drop_column('reserved_quantity')
        batch_op.drop_column('current_quantity')
    
    # Now populate the inventory_item_id values and make it NOT NULL
    # This would need to be done with data migration logic if you have existing data
    # For now, we'll leave it nullable until you can populate the values

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('product_sku', schema=None) as batch_op:
        batch_op.add_column(sa.Column('current_quantity', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('reserved_quantity', sa.FLOAT(), nullable=True))
        batch_op.drop_constraint('fk_product_sku_inventory_item', type_='foreignkey')
        batch_op.drop_index('idx_inventory_item')
        batch_op.create_index('idx_low_stock', ['current_quantity', 'low_stock_threshold'], unique=False)
        batch_op.drop_column('inventory_item_id')

    # ### end Alembic commands ###
