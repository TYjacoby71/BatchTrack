"""Add expiration tracking to batches and product inventory

Revision ID: 9cc730057642
Revises: 32d3570207b7
Create Date: 2025-04-22 21:03:54.422964

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9cc730057642'
down_revision = '32d3570207b7'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('product_inventory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('variant', sa.String(length=100), nullable=True),
    sa.Column('unit', sa.String(length=50), nullable=True),
    sa.Column('quantity', sa.Float(), nullable=True),
    sa.Column('batch_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], ['batch.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('inventory_item', schema=None) as batch_op:
        batch_op.add_column(sa.Column('low_stock_threshold', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('is_perishable', sa.Boolean(), nullable=True))

    with op.batch_alter_table('product', schema=None) as batch_op:
        batch_op.add_column(sa.Column('low_stock_threshold', sa.Float(), nullable=True))

    with op.batch_alter_table('recipe_ingredients', schema=None) as batch_op:
        batch_op.alter_column('amount',
               existing_type=sa.FLOAT(),
               nullable=False)
        batch_op.alter_column('unit',
               existing_type=sa.VARCHAR(length=32),
               nullable=False)
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'recipe', ['recipe_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'inventory_item', ['inventory_item_id'], ['id'], ondelete='CASCADE')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('recipe_ingredients', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'inventory_item', ['inventory_item_id'], ['id'])
        batch_op.create_foreign_key(None, 'recipe', ['recipe_id'], ['id'])
        batch_op.alter_column('unit',
               existing_type=sa.VARCHAR(length=32),
               nullable=True)
        batch_op.alter_column('amount',
               existing_type=sa.FLOAT(),
               nullable=True)

    with op.batch_alter_table('product', schema=None) as batch_op:
        batch_op.drop_column('low_stock_threshold')

    with op.batch_alter_table('inventory_item', schema=None) as batch_op:
        batch_op.drop_column('is_perishable')
        batch_op.drop_column('low_stock_threshold')

    op.drop_table('product_inventory')
    # ### end Alembic commands ###
