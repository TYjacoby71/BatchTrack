"""add_affected_lot_id_to_unified_inventory_history

Revision ID: ce43ce53da34
Revises: create_inventory_lot
Create Date: 2025-08-21 05:20:31.424600

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ce43ce53da34'
down_revision = 'create_inventory_lot'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('inventory_lot', schema=None) as batch_op:
        batch_op.drop_index('idx_inventory_lot_expiration')
        batch_op.drop_index('idx_inventory_lot_item_remaining')
        batch_op.drop_index('idx_inventory_lot_organization')
        batch_op.drop_index('idx_inventory_lot_received_date')

    with op.batch_alter_table('organization', schema=None) as batch_op:
        batch_op.alter_column('billing_status',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)

    with op.batch_alter_table('product_sku', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('size_label',
               existing_type=sa.VARCHAR(length=32),
               type_=sa.String(length=64),
               nullable=False)
        batch_op.alter_column('sku',
               existing_type=sa.VARCHAR(length=64),
               nullable=False)
        batch_op.alter_column('fifo_id',
               existing_type=sa.VARCHAR(length=64),
               type_=sa.String(length=32),
               existing_nullable=True)
        batch_op.alter_column('barcode',
               existing_type=sa.VARCHAR(length=64),
               type_=sa.String(length=128),
               existing_nullable=True)
        batch_op.alter_column('upc',
               existing_type=sa.VARCHAR(length=64),
               type_=sa.String(length=32),
               existing_nullable=True)
        batch_op.alter_column('location_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=128),
               existing_nullable=True)
        batch_op.create_index('idx_active_skus', ['is_active', 'is_product_active'], unique=False)
        batch_op.create_index('idx_inventory_item', ['inventory_item_id'], unique=False)
        batch_op.create_index('idx_product_variant', ['product_id', 'variant_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_product_sku_inventory_item_id'), ['inventory_item_id'], unique=False)
        batch_op.create_unique_constraint('unique_barcode', ['barcode'])
        batch_op.create_unique_constraint('unique_sku_combination', ['product_id', 'variant_id', 'size_label', 'fifo_id'])
        batch_op.create_unique_constraint('unique_upc', ['upc'])
        batch_op.create_unique_constraint(None, ['upc'])
        batch_op.create_unique_constraint(None, ['barcode'])
        batch_op.create_unique_constraint(None, ['sku'])
        batch_op.create_foreign_key(None, 'organization', ['organization_id'], ['id'])
        batch_op.create_foreign_key(None, 'inventory_item', ['container_id'], ['id'])
        batch_op.create_foreign_key(None, 'batch', ['batch_id'], ['id'])
        batch_op.create_foreign_key(None, 'inventory_item', ['inventory_item_id'], ['id'])
        batch_op.create_foreign_key(None, 'product', ['product_id'], ['id'])
        batch_op.create_foreign_key(None, 'user', ['quality_checked_by'], ['id'])
        batch_op.create_foreign_key(None, 'product_variant', ['variant_id'], ['id'])
        batch_op.create_foreign_key(None, 'user', ['created_by'], ['id'])

    with op.batch_alter_table('subscription_tier', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=64),
               nullable=False)
        batch_op.alter_column('user_limit',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('is_customer_facing',
               existing_type=sa.NUMERIC(),
               type_=sa.Boolean(),
               nullable=False)
        batch_op.alter_column('billing_provider',
               existing_type=sa.NullType(),
               nullable=False)
        batch_op.alter_column('stripe_lookup_key',
               existing_type=sa.TEXT(),
               type_=sa.String(length=128),
               existing_nullable=True)
        batch_op.alter_column('whop_product_key',
               existing_type=sa.TEXT(),
               type_=sa.String(length=128),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.NUMERIC(),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=sa.NUMERIC(),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.drop_index('ix_subscription_tier_key')
        batch_op.drop_index('uq_subscription_tier_name')
        batch_op.drop_index('uq_subscription_tier_stripe_lookup_key')
        batch_op.create_unique_constraint('uq_subscription_tier_stripe_lookup_key', ['stripe_lookup_key'])
        batch_op.create_unique_constraint('uq_subscription_tier_whop_product_key', ['whop_product_key'])
        batch_op.create_unique_constraint(None, ['name'])
        batch_op.drop_column('key')

    with op.batch_alter_table('unified_inventory_history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('affected_lot_id', sa.Integer(), nullable=True))
        batch_op.alter_column('fifo_code',
               existing_type=sa.VARCHAR(length=64),
               type_=sa.String(length=32),
               existing_nullable=True)
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_index('ix_unified_inventory_history_fifo_code')
        batch_op.create_foreign_key(None, 'inventory_lot', ['affected_lot_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('unified_inventory_history', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_index('ix_unified_inventory_history_fifo_code', ['fifo_code'], unique=False)
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('fifo_code',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=64),
               existing_nullable=True)
        batch_op.drop_column('affected_lot_id')

    with op.batch_alter_table('subscription_tier', schema=None) as batch_op:
        batch_op.add_column(sa.Column('key', sa.TEXT(), nullable=True))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint('uq_subscription_tier_whop_product_key', type_='unique')
        batch_op.drop_constraint('uq_subscription_tier_stripe_lookup_key', type_='unique')
        batch_op.create_index('uq_subscription_tier_stripe_lookup_key', ['stripe_lookup_key'], unique=1)
        batch_op.create_index('uq_subscription_tier_name', ['name'], unique=1)
        batch_op.create_index('ix_subscription_tier_key', ['key'], unique=1)
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(),
               type_=sa.NUMERIC(),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=sa.NUMERIC(),
               existing_nullable=True)
        batch_op.alter_column('whop_product_key',
               existing_type=sa.String(length=128),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('stripe_lookup_key',
               existing_type=sa.String(length=128),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('billing_provider',
               existing_type=sa.NullType(),
               nullable=True)
        batch_op.alter_column('is_customer_facing',
               existing_type=sa.Boolean(),
               type_=sa.NUMERIC(),
               nullable=True)
        batch_op.alter_column('user_limit',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.String(length=64),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('product_sku', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint('unique_upc', type_='unique')
        batch_op.drop_constraint('unique_sku_combination', type_='unique')
        batch_op.drop_constraint('unique_barcode', type_='unique')
        batch_op.drop_index(batch_op.f('ix_product_sku_inventory_item_id'))
        batch_op.drop_index('idx_product_variant')
        batch_op.drop_index('idx_inventory_item')
        batch_op.drop_index('idx_active_skus')
        batch_op.alter_column('location_id',
               existing_type=sa.String(length=128),
               type_=sa.INTEGER(),
               existing_nullable=True)
        batch_op.alter_column('upc',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=64),
               existing_nullable=True)
        batch_op.alter_column('barcode',
               existing_type=sa.String(length=128),
               type_=sa.VARCHAR(length=64),
               existing_nullable=True)
        batch_op.alter_column('fifo_id',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=64),
               existing_nullable=True)
        batch_op.alter_column('sku',
               existing_type=sa.VARCHAR(length=64),
               nullable=True)
        batch_op.alter_column('size_label',
               existing_type=sa.String(length=64),
               type_=sa.VARCHAR(length=32),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('organization', schema=None) as batch_op:
        batch_op.alter_column('billing_status',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)

    with op.batch_alter_table('inventory_lot', schema=None) as batch_op:
        batch_op.create_index('idx_inventory_lot_received_date', ['received_date'], unique=False)
        batch_op.create_index('idx_inventory_lot_organization', ['organization_id'], unique=False)
        batch_op.create_index('idx_inventory_lot_item_remaining', ['inventory_item_id', 'remaining_quantity'], unique=False)
        batch_op.create_index('idx_inventory_lot_expiration', ['expiration_date'], unique=False)

    # ### end Alembic commands ###
