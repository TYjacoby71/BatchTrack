"""sync user_stats model with database schema

Revision ID: a7c01b5be3dc
Revises: 6f9bc65166b3
Create Date: 2025-08-13 20:35:29.314842

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a7c01b5be3dc'
down_revision = '6f9bc65166b3'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('batch_container', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('batch_inventory_log', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('conversion_log', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('custom_unit_mapping', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('extra_batch_container', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('extra_batch_ingredient', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('ingredient_category', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('inventory_history', schema=None) as batch_op:
        batch_op.alter_column('change_type',
               existing_type=sa.VARCHAR(length=32),
               type_=sa.String(length=50),
               nullable=True)
        batch_op.alter_column('quantity_change',
               existing_type=sa.FLOAT(),
               nullable=True)
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('inventory_item', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('product', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('product_sku', schema=None) as batch_op:
        batch_op.add_column(sa.Column('id', sa.Integer(), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('sku', sa.String(length=64), nullable=False))
        batch_op.add_column(sa.Column('quantity_override', sa.Float(), nullable=True))
        batch_op.alter_column('inventory_item_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('product_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('variant_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('sku_code',
               existing_type=sa.VARCHAR(length=64),
               nullable=True)
        batch_op.alter_column('unit',
               existing_type=sa.VARCHAR(length=32),
               nullable=True)
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.create_index(batch_op.f('ix_product_sku_inventory_item_id'), ['inventory_item_id'], unique=False)
        batch_op.create_unique_constraint(None, ['sku'])

    with op.batch_alter_table('product_sku_history', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('product_variant', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('recipe', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('recipe_ingredient', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('reservation', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('stripe_event', schema=None) as batch_op:
        batch_op.drop_constraint('uq_stripe_event_event_id', type_='unique')
        batch_op.drop_index('ix_stripe_event_event_id')
        batch_op.create_index(batch_op.f('ix_stripe_event_event_id'), ['event_id'], unique=True)

    with op.batch_alter_table('subscription_tier', schema=None) as batch_op:
        batch_op.alter_column('tier_key',
               existing_type=sa.VARCHAR(length=64),
               nullable=True)
        batch_op.drop_constraint('uq_subscription_tier_tier_key', type_='unique')
        batch_op.drop_index('ix_subscription_tier_tier_key')
        batch_op.create_index(batch_op.f('ix_subscription_tier_tier_key'), ['tier_key'], unique=True)

    with op.batch_alter_table('tag', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('unified_inventory_history', schema=None) as batch_op:
        batch_op.alter_column('remaining_quantity',
               existing_type=sa.FLOAT(),
               nullable=True)
        batch_op.alter_column('quantity_used',
               existing_type=sa.FLOAT(),
               nullable=True)
        batch_op.alter_column('is_perishable',
               existing_type=sa.BOOLEAN(),
               nullable=True)
        batch_op.alter_column('is_reserved',
               existing_type=sa.BOOLEAN(),
               nullable=True)
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.create_index(batch_op.f('ix_unified_inventory_history_change_type'), ['change_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_unified_inventory_history_expiration_date'), ['expiration_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_unified_inventory_history_fifo_code'), ['fifo_code'], unique=False)
        batch_op.create_index(batch_op.f('ix_unified_inventory_history_inventory_item_id'), ['inventory_item_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_unified_inventory_history_timestamp'), ['timestamp'], unique=False)

    with op.batch_alter_table('unit', schema=None) as batch_op:
        batch_op.alter_column('symbol',
               existing_type=sa.VARCHAR(length=16),
               nullable=True)
        batch_op.drop_index('ix_unit_standard_unique')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('password_hash',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
        batch_op.drop_column('is_verified')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_verified', sa.BOOLEAN(), server_default=sa.text("'0'"), nullable=False))
        batch_op.alter_column('password_hash',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)

    with op.batch_alter_table('unit', schema=None) as batch_op:
        batch_op.create_index('ix_unit_standard_unique', ['name'], unique=1)
        batch_op.alter_column('symbol',
               existing_type=sa.VARCHAR(length=16),
               nullable=False)

    with op.batch_alter_table('unified_inventory_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_unified_inventory_history_timestamp'))
        batch_op.drop_index(batch_op.f('ix_unified_inventory_history_inventory_item_id'))
        batch_op.drop_index(batch_op.f('ix_unified_inventory_history_fifo_code'))
        batch_op.drop_index(batch_op.f('ix_unified_inventory_history_expiration_date'))
        batch_op.drop_index(batch_op.f('ix_unified_inventory_history_change_type'))
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('is_reserved',
               existing_type=sa.BOOLEAN(),
               nullable=False)
        batch_op.alter_column('is_perishable',
               existing_type=sa.BOOLEAN(),
               nullable=False)
        batch_op.alter_column('quantity_used',
               existing_type=sa.FLOAT(),
               nullable=False)
        batch_op.alter_column('remaining_quantity',
               existing_type=sa.FLOAT(),
               nullable=False)

    with op.batch_alter_table('tag', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('subscription_tier', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_subscription_tier_tier_key'))
        batch_op.create_index('ix_subscription_tier_tier_key', ['tier_key'], unique=False)
        batch_op.create_unique_constraint('uq_subscription_tier_tier_key', ['tier_key'])
        batch_op.alter_column('tier_key',
               existing_type=sa.VARCHAR(length=64),
               nullable=False)

    with op.batch_alter_table('stripe_event', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_stripe_event_event_id'))
        batch_op.create_index('ix_stripe_event_event_id', ['event_id'], unique=False)
        batch_op.create_unique_constraint('uq_stripe_event_event_id', ['event_id'])

    with op.batch_alter_table('reservation', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('recipe_ingredient', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('recipe', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('product_variant', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('product_sku_history', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('product_sku', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_index(batch_op.f('ix_product_sku_inventory_item_id'))
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('unit',
               existing_type=sa.VARCHAR(length=32),
               nullable=False)
        batch_op.alter_column('sku_code',
               existing_type=sa.VARCHAR(length=64),
               nullable=False)
        batch_op.alter_column('variant_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('product_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('inventory_item_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('quantity_override')
        batch_op.drop_column('sku')
        batch_op.drop_column('id')

    with op.batch_alter_table('product', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('inventory_item', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('inventory_history', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('quantity_change',
               existing_type=sa.FLOAT(),
               nullable=False)
        batch_op.alter_column('change_type',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=32),
               nullable=False)

    with op.batch_alter_table('ingredient_category', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('extra_batch_ingredient', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('extra_batch_container', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('custom_unit_mapping', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('conversion_log', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('batch_inventory_log', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('batch_container', schema=None) as batch_op:
        batch_op.alter_column('organization_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    # ### end Alembic commands ###
