
"""add multi-tenancy fields for proper organization separation

Revision ID: 8ae6cc579516
Revises: 1914edb5f281
Create Date: 2025-06-24 22:07:02.066620

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8ae6cc579516'
down_revision = '1914edb5f281'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('batch', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_by', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('organization_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key('fk_batch_organization_id', 'organization', ['organization_id'], ['id'])
        batch_op.create_foreign_key('fk_batch_created_by', 'user', ['created_by'], ['id'])

    with op.batch_alter_table('ingredient_category', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_by', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('organization_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.create_foreign_key('fk_ingredient_category_organization_id', 'organization', ['organization_id'], ['id'])
        batch_op.create_foreign_key('fk_ingredient_category_created_by', 'user', ['created_by'], ['id'])

    with op.batch_alter_table('inventory_item', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_by', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('organization_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key('fk_inventory_item_organization_id', 'organization', ['organization_id'], ['id'])
        batch_op.create_foreign_key('fk_inventory_item_created_by', 'user', ['created_by'], ['id'])

    with op.batch_alter_table('product', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_by', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('organization_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key('fk_product_created_by', 'user', ['created_by'], ['id'])
        batch_op.create_foreign_key('fk_product_organization_id', 'organization', ['organization_id'], ['id'])

    with op.batch_alter_table('product_variation', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_by', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('organization_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key('fk_product_variation_organization_id', 'organization', ['organization_id'], ['id'])
        batch_op.create_foreign_key('fk_product_variation_created_by', 'user', ['created_by'], ['id'])

    # For the unit table, we need to handle this more carefully
    # First, check if the user_id column exists and what constraints exist
    connection = op.get_bind()
    inspector = sa.inspect(connection)
    
    # Get existing columns
    columns = [col['name'] for col in inspector.get_columns('unit')]
    constraints = inspector.get_foreign_keys('unit')
    
    with op.batch_alter_table('unit', schema=None) as batch_op:
        # Add new columns
        batch_op.add_column(sa.Column('created_by', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('organization_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        
        # Drop the old constraint if it exists
        constraint_names = [fk['name'] for fk in constraints if fk.get('name')]
        if 'fk_unit_user_id' in constraint_names:
            batch_op.drop_constraint('fk_unit_user_id', type_='foreignkey')
        
        # Create new foreign keys
        batch_op.create_foreign_key('fk_unit_created_by', 'user', ['created_by'], ['id'])
        batch_op.create_foreign_key('fk_unit_organization_id', 'organization', ['organization_id'], ['id'])
        
        # Drop the old column if it exists
        if 'user_id' in columns:
            batch_op.drop_column('user_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('unit', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), nullable=True))
        batch_op.drop_constraint('fk_unit_created_by', type_='foreignkey')
        batch_op.drop_constraint('fk_unit_organization_id', type_='foreignkey')
        batch_op.create_foreign_key('fk_unit_user_id', 'user', ['user_id'], ['id'])
        batch_op.drop_column('created_at')
        batch_op.drop_column('organization_id')
        batch_op.drop_column('created_by')

    with op.batch_alter_table('product_variation', schema=None) as batch_op:
        batch_op.drop_constraint('fk_product_variation_organization_id', type_='foreignkey')
        batch_op.drop_constraint('fk_product_variation_created_by', type_='foreignkey')
        batch_op.drop_column('organization_id')
        batch_op.drop_column('created_by')

    with op.batch_alter_table('product', schema=None) as batch_op:
        batch_op.drop_constraint('fk_product_created_by', type_='foreignkey')
        batch_op.drop_constraint('fk_product_organization_id', type_='foreignkey')
        batch_op.drop_column('organization_id')
        batch_op.drop_column('created_by')

    with op.batch_alter_table('inventory_item', schema=None) as batch_op:
        batch_op.drop_constraint('fk_inventory_item_organization_id', type_='foreignkey')
        batch_op.drop_constraint('fk_inventory_item_created_by', type_='foreignkey')
        batch_op.drop_column('organization_id')
        batch_op.drop_column('created_by')

    with op.batch_alter_table('ingredient_category', schema=None) as batch_op:
        batch_op.drop_constraint('fk_ingredient_category_organization_id', type_='foreignkey')
        batch_op.drop_constraint('fk_ingredient_category_created_by', type_='foreignkey')
        batch_op.drop_column('created_at')
        batch_op.drop_column('organization_id')
        batch_op.drop_column('created_by')

    with op.batch_alter_table('batch', schema=None) as batch_op:
        batch_op.drop_constraint('fk_batch_organization_id', type_='foreignkey')
        batch_op.drop_constraint('fk_batch_created_by', type_='foreignkey')
        batch_op.drop_column('organization_id')
        batch_op.drop_column('created_by')

    # ### end Alembic commands ###
