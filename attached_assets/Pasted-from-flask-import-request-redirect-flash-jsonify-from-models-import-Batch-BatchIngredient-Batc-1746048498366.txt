from flask import request, redirect, flash, jsonify
from models import Batch, BatchIngredient, BatchContainer, InventoryItem
from app import db

@batch_bp.route('/batch/<int:batch_id>/save', methods=['POST'])
def save_batch(batch_id):
    batch = Batch.query.get_or_404(batch_id)
    if batch.status != 'in_progress':
        return jsonify({'error': 'Only in-progress batches can be saved.'}), 400

    # Example incoming JSON:
    # {
    #   "notes": "Updated notes",
    #   "tags": "test,lavender",
    #   "yield_amount": 500,
    #   "yield_unit": "ml",
    #   "ingredients": [{"id": 1, "amount": 250, "unit": "g"}],
    #   "containers": [{"id": 5, "qty": 12, "cost_each": 0.30}]
    # }
    
    data = request.get_json()

    # === Save Notes, Tags, Yield ===
    batch.notes = data.get("notes", batch.notes)
    batch.tags = data.get("tags", batch.tags)
    batch.yield_amount = data.get("yield_amount", batch.yield_amount)
    batch.yield_unit = data.get("yield_unit", batch.yield_unit)

    # === Save Ingredients (Delta Inventory Sync) ===
    existing_ingredients = {bi.ingredient_id: bi for bi in batch.ingredients}
    new_ingredients = data.get("ingredients", [])

    for item in new_ingredients:
        ing_id = item['id']
        new_amt = float(item['amount'])
        new_unit = item['unit']

        if ing_id in existing_ingredients:
            existing = existing_ingredients[ing_id]
            delta = new_amt - existing.amount_used
            existing.amount_used = new_amt
            existing.unit = new_unit
        else:
            delta = new_amt
            bi = BatchIngredient(batch_id=batch.id, ingredient_id=ing_id, amount_used=new_amt, unit=new_unit)
            db.session.add(bi)

        inventory = InventoryItem.query.get(ing_id)
        if inventory:
            inventory.quantity -= delta
            db.session.add(inventory)

    # === Save Containers ===
    existing_containers = {bc.container_id: bc for bc in batch.containers}
    new_containers = data.get("containers", [])

    for item in new_containers:
        cid = item['id']
        qty = int(item['qty'])
        cost_each = float(item.get('cost_each', 0.0))

        if cid in existing_containers:
            existing = existing_containers[cid]
            delta = qty - existing.quantity_used
            existing.quantity_used = qty
            existing.cost_each = cost_each
        else:
            delta = qty
            bc = BatchContainer(batch_id=batch.id, container_id=cid, quantity_used=qty, cost_each=cost_each)
            db.session.add(bc)

        container_item = InventoryItem.query.get(cid)
        if container_item:
            container_item.quantity -= delta
            db.session.add(container_item)

    db.session.commit()
    return jsonify({"message": "Batch saved successfully."})
