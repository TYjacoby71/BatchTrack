here are the current warnings..................................                                       [100%]
=============================== warnings summary ===============================
tests/test_audit_canonicalization.py: 2 warnings
tests/test_expiration_canonicalization.py: 3 warnings
tests/test_google_oauth.py: 7 warnings
tests/test_inventory_fifo.py: 3 warnings
tests/test_inventory_routes_canonicalization.py: 2 warnings
tests/test_pos_integration_canonicalization.py: 1 warning
tests/test_product_sku.py: 4 warnings
tests/test_reservation_canonicalization.py: 2 warnings
tests/test_signup_tiers.py: 5 warnings
tests/test_stripe_webhooks.py: 4 warnings
/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask_limiter/extension.py:333: UserWarning: Using the in-memory storage for tracking rate limits as no storage was explicitly specified. This is not recommended for production use. See: https://flask-limiter.readthedocs.io#configuring-a-storage-backend for documentation about configuring the storage backend.
warnings.warn(
tests/test_expiration_canonicalization.py::test_expiration_service_uses_canonical_adjustment
/home/runner/workspace/app/blueprints/expiration/services.py:545: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
entry = InventoryHistory.query.get(entry_id)
tests/test_inventory_fifo.py: 12 warnings
/home/runner/workspace/app/services/inventory_adjustment.py:101: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
item = InventoryItem.query.get(item_id)
tests/test_inventory_fifo.py::TestInventoryFIFOCharacterization::test_fifo_deduction_order
tests/test_inventory_fifo.py::TestInventoryFIFOCharacterization::test_fifo_deduction_order
tests/test_inventory_fifo.py::TestInventoryFIFOCharacterization::test_fifo_deduction_order
tests/test_inventory_fifo.py::TestInventoryFIFOCharacterization::test_inventory_adjustment_delegates_properly
/home/runner/workspace/app/services/inventory_adjustment.py:249: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
item = InventoryItem.query.get(item_id)
tests/test_inventory_fifo.py::TestInventoryFIFOCharacterization::test_fifo_deduction_order
tests/test_inventory_fifo.py::TestInventoryFIFOCharacterization::test_fifo_deduction_order
tests/test_inventory_fifo.py::TestInventoryFIFOCharacterization::test_inventory_adjustment_delegates_properly
/home/runner/workspace/app/blueprints/fifo/services.py:127: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
item = InventoryItem.query.get(inventory_item_id)
tests/test_inventory_fifo.py::TestInventoryFIFOCharacterization::test_fifo_deduction_order
/home/runner/workspace/app/blueprints/fifo/services.py:160: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
item = InventoryItem.query.get(inventory_item_id)
tests/test_inventory_fifo.py::TestInventoryFIFOCharacterization::test_fifo_deduction_order
/home/runner/workspace/app/blueprints/fifo/services.py:362: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
item = InventoryItem.query.get(inventory_item_id) if inventory_item_id else None
tests/test_inventory_fifo.py::TestInventoryFIFOCharacterization::test_fifo_deduction_order
/home/runner/workspace/app/blueprints/fifo/services.py:375: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
entry = InventoryHistory.query.get(entry_id)
tests/test_inventory_fifo.py::TestInventoryFIFOCharacterization::test_fifo_deduction_order
/home/runner/workspace/app/blueprints/fifo/services.py:449: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
item = InventoryItem.query.get(inventory_item_id)
tests/test_inventory_fifo.py::TestInventoryFIFOCharacterization::test_fifo_deduction_order
/home/runner/workspace/app/services/stock_check.py:26: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
item = InventoryItem.query.get(inventory_item_id)
tests/test_inventory_routes_canonicalization.py::test_recount_adjustment_uses_canonical_service
/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask_sqlalchemy/query.py:30: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
rv = self.get(ident)
-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
34 passed, 59 warnings in 26.30s
and this is the git file https://github.com/TYjacoby71/BatchTrack.git
moving on to pr3. the inventory rules are working ok, but only on some inventory. in the account admin, admin, the adpples are not tracking right. its like there are lots or entries that are not found durring the adjsutments rearch. it used to look at all the entries with the remaining quantity capacity >0. but now, its like the fifo is looking for any change type positive,
i think the fifo system needs to look at the fifo code assigned and possibley needs the lots to have a special process or tag to set them asside. They were defined by any fi fo event or inventory event where the event had capacity or remaining quantity. But now since we have the system fleshed out I really think that the lots should be defined as lots a special fi fo type where remaining quantity has capacity and is not NA and was an original addition event.
warning
ThinkingThoughts
(experimental)
Auto
Expand to view model thoughts

chevron_right
