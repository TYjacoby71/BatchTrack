‚úÖ Step 2: Update your edit_recipe route
This makes the recipe edit page recognize when:

A new ingredient was just added

It should preselect that ingredient

It should auto-add a row with that ingredient selected

üîß Modify your edit_recipe route:
You'll likely find this in:
üìÅ routes/recipe_routes.py (or wherever recipes_bp is registered)

Find this route:

python
Copy
Edit
@recipes_bp.route('/<int:recipe_id>/edit', methods=['GET', 'POST'])
@login_required
def edit_recipe(recipe_id):
Update it to include these lines:

python
Copy
Edit
@recipes_bp.route('/<int:recipe_id>/edit', methods=['GET', 'POST'])
@login_required
def edit_recipe(recipe_id):
    recipe = Recipe.query.get_or_404(recipe_id)
    all_ingredients = Ingredient.query.order_by(Ingredient.name).all()
    inventory_units = InventoryUnit.query.order_by(InventoryUnit.name).all()

    # Check if this is a POST to save the form
    if request.method == 'POST':
        recipe.name = request.form['name']
        recipe.instructions = request.form['instructions']
        recipe.label_prefix = request.form['label_prefix']

        # Clear existing recipe_ingredients and re-add them
        db.session.query(RecipeIngredient).filter_by(recipe_id=recipe.id).delete()

        ingredient_ids = request.form.getlist('ingredient_ids[]')
        amounts = request.form.getlist('amounts[]')
        units = request.form.getlist('units[]')

        for ing_id, amount, unit in zip(ingredient_ids, amounts, units):
            assoc = RecipeIngredient(
                recipe_id=recipe.id,
                ingredient_id=int(ing_id),
                amount=float(amount),
                unit=unit
            )
            db.session.add(assoc)

        db.session.commit()
        flash("Recipe updated.")
        return redirect(url_for('recipes.edit_recipe', recipe_id=recipe.id))

    # READ session variables for preselection logic
    preselect_ingredient_id = session.pop('last_added_ingredient_id', None)
    add_ingredient_line = session.pop('add_ingredient_line', False)

    return render_template('recipe_form.html',
        recipe=recipe,
        all_ingredients=all_ingredients,
        inventory_units=inventory_units,
        preselect_ingredient_id=preselect_ingredient_id,
        add_ingredient_line=add_ingredient_line
    )
‚úÖ What this does:
On GET: checks session for preselect flags

On POST: saves the full recipe edit form cleanly

On render: passes the flags to recipe_form.html (which you already set up earlier)

‚úÖ Once you finish this step, you're ready to test the full loop:

Open a recipe

Click "Quick Add Ingredient"

Enter name + unit ‚Üí save

Form reloads with one new row already inserted

New ingredient preselected