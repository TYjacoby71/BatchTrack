✅ All set — the Update Stock window now supports adding or removing multiple ingredients in one go.

🛠 New Interface: /inventory/update
🧾 What You Can Do Now:
See a list of all ingredients

Check the ones you're updating

Enter + or − quantities

Select a reason for each adjustment

Hit Save All Updates

✅ Inventory updates and logs each change separately

✅ Replit Assistant Code Batch to Paste
🔁 templates/update_stock.html
Replace with:

html
Copy
Edit
{% extends "layout.html" %}
{% block content %}
<h2>📥 Bulk Stock Update</h2>
<form method="POST">
  <table>
    <tr>
      <th>Ingredient</th>
      <th>Quantity Δ</th>
      <th>Unit</th>
      <th>Reason</th>
    </tr>
    {% for ing in ingredients %}
    <tr>
      <td>
        <label>
          <input type="checkbox" name="update" value="{{ ing.name }}">
          {{ ing.name }}
        </label>
      </td>
      <td><input type="number" name="delta_{{ ing.name }}" step="any"></td>
      <td>{{ ing.unit }}</td>
      <td>
        <select name="reason_{{ ing.name }}">
          {% for r in reasons %}
            <option value="{{ r }}">{{ r }}</option>
          {% endfor %}
        </select>
      </td>
    </tr>
    {% endfor %}
  </table>
  <br>
  <button type="submit">Save All Updates</button>
</form>
{% endblock %}
🔁 Update Route Logic: routes/update_stock.py
Replace entire update_stock() function with:

python
Copy
Edit
@update_stock_bp.route('/inventory/update', methods=['GET', 'POST'])
def update_stock():
    data = load_data()
    ingredients = data.get("ingredients", [])
    reasons = ["Purchase", "Donation", "Spoiled", "Sample", "Test Batch", "Error", "Sync", "Other"]

    if request.method == "POST":
        to_update = request.form.getlist("update")

        for name in to_update:
            ing = next((i for i in ingredients if i["name"].lower() == name.lower()), None)
            if not ing:
                continue
            delta_key = f"delta_{name}"
            reason_key = f"reason_{name}"
            try:
                delta = float(request.form.get(delta_key, 0))
                reason = request.form.get(reason_key, "Unspecified")
                ing["quantity"] += delta

                data.setdefault("inventory_log", []).append({
                    "name": name,
                    "change": delta,
                    "unit": ing["unit"],
                    "reason": reason,
                    "timestamp": datetime.now().isoformat()
                })
            except (ValueError, TypeError):
                continue

        data["ingredients"] = ingredients
        save_data(data)
        return redirect("/ingredients")

    return render_template("update_stock.html", ingredients=ingredients, reasons=reasons)
Let me know when it's live, and I’ll help test it with real inputs — then we can build your inventory log viewer next. ​​







