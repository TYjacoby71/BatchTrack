# ConversaFlow - AI-Powered Conversation Management Platform

## Overview

ConversaFlow is a comprehensive conversation management platform that combines AI-powered analysis, real-time collaboration, and intelligent topic detection. The application allows users to upload, analyze, and collaborate on conversations with advanced features like automated transcription, topic extraction, sentiment analysis, and billing management through Stripe integration.

## User Preferences

Preferred communication style: Simple, everyday language.

## System Architecture

### Frontend Architecture
- **Framework**: React with TypeScript, built using Vite for fast development and optimized builds
- **UI Library**: Shadcn/ui components built on Radix UI primitives for accessible, customizable interface components
- **Styling**: Tailwind CSS with CSS variables for theming support (light/dark modes)
- **State Management**: TanStack Query (React Query) for server state management and caching
- **Routing**: Wouter for lightweight client-side routing
- **Real-time Communication**: Custom WebSocket hook for live collaboration features

### Backend Architecture
- **Runtime**: Node.js with Express.js framework
- **Language**: TypeScript with ES modules
- **Database**: PostgreSQL with Drizzle ORM for type-safe database operations
- **Database Provider**: Neon serverless PostgreSQL with connection pooling
- **Authentication**: Replit Auth with OpenID Connect (OIDC) integration
- **Session Management**: Express sessions stored in PostgreSQL with connect-pg-simple

### Data Storage Solutions
- **Primary Database**: PostgreSQL for structured data (users, organizations, conversations, topics, analytics)
- **Object Storage**: Google Cloud Storage for file uploads and conversation media
- **Schema Design**: Multi-tenant architecture with organization-based data isolation
- **Migrations**: Drizzle Kit for database schema migrations and management

### Authentication and Authorization
- **Primary Auth**: Replit Auth using OpenID Connect with automatic user provisioning
- **Session Storage**: Server-side sessions in PostgreSQL with configurable TTL
- **Multi-tenancy**: Organization-based access control with role-based permissions
- **Object ACL**: Custom access control system for file permissions based on user groups

### External Dependencies
- **AI Processing**: OpenAI GPT-4o for conversation analysis, topic extraction, and sentiment analysis
- **Payment Processing**: Stripe for subscription billing, customer management, and payment workflows
- **File Upload**: Uppy.js with Google Cloud Storage for direct-to-cloud file uploads
- **Cloud Storage**: Google Cloud Storage with Replit sidecar authentication for object management
- **Real-time Features**: WebSocket integration for live collaboration and conversation updates

### Key Design Patterns
- **Repository Pattern**: Centralized data access through storage interface abstraction
- **Service Layer**: Dedicated services for AI processing, billing, and analytics operations
- **Multi-tenant SaaS**: Organization-scoped data access with subscription-based billing tiers
- **Event-driven Analytics**: Comprehensive event tracking for user behavior and system metrics
- **Component Architecture**: Modular React components with consistent design system integration