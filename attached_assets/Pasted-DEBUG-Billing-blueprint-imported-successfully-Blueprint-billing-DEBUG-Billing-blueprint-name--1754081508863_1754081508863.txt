DEBUG: Billing blueprint imported successfully: <Blueprint 'billing'>
DEBUG: Billing blueprint name: billing
DEBUG: Billing blueprint url_prefix: /billing
DEBUG: Billing blueprint registered successfully
Registered API routes: ['/api/reservations/create', '/api/reservations/release/<int:reservation_id>', '/api/reservations/convert-to-sale/<int:reservation_id>', '/api/reservations/expire-old', '/api/products/<int:product_id>/variants', '/api/dismiss-alert', '/api/dashboard-alerts', '/api/server-time', '/api/server-time', '/api/dismiss-alert', '/api/dashboard-alerts', '/api/check-stock', '/api/categories', '/api/ingredient/<int:id>/density', '/api/debug-containers', '/api/available-containers/<int:recipe_id>', '/api/containers/available', '/api/batches/<int:batch_id>/containers', '/api/batches/<int:batch_id>/containers/<int:container_id>', '/api/batches/<int:batch_id>/containers/<int:container_id>/adjust', '/api/api/fifo-details/<int:inventory_id>', '/api/api/batch-inventory-summary/<int:batch_id>', '/api/api/reservations/create', '/api/api/reservations/release/<int:reservation_id>', '/api/api/reservations/convert-to-sale/<int:reservation_id>', '/api/api/reservations/expire-old', '/api/dashboard-alerts', '/api/dismiss-alert', '/api/units', '/api/convert-units']
Container routes found: ['/settings/bulk-update-containers', '/api/debug-containers', '/api/available-containers/<int:recipe_id>', '/api/containers/available', '/api/batches/<int:batch_id>/containers', '/api/batches/<int:batch_id>/containers/<int:container_id>', '/api/batches/<int:batch_id>/containers/<int:container_id>/adjust', '/debug-containers', '/available-containers/<int:recipe_id>', '/containers/available', '/batches/<int:batch_id>/containers', '/batches/<int:batch_id>/containers/<int:container_id>', '/batches/<int:batch_id>/containers/<int:container_id>/adjust']
Billing routes found: ['/billing/reconciliation-needed', '/billing/reconcile-to-free', '/billing/upgrade', '/billing/checkout/<tier>/<billing_cycle>', '/billing/checkout/<tier>', '/billing/customer-portal', '/billing/cancel-subscription', '/billing/webhooks/stripe', '/billing/complete-signup-from-stripe', '/billing/debug']
Billing endpoints: [('/billing/reconciliation-needed', 'billing.reconciliation_needed'), ('/billing/reconcile-to-free', 'billing.reconcile_to_free'), ('/billing/upgrade', 'billing.upgrade'), ('/billing/checkout/<tier>/<billing_cycle>', 'billing.checkout'), ('/billing/checkout/<tier>', 'billing.checkout'), ('/billing/customer-portal', 'billing.customer_portal'), ('/billing/cancel-subscription', 'billing.cancel_subscription'), ('/billing/webhooks/stripe', 'billing.stripe_webhook'), ('/billing/complete-signup-from-stripe', 'billing.complete_signup_from_stripe'), ('/billing/debug', 'billing.debug_billing')]
[2025-08-01 20:51:31,082] INFO in unit_utils: BatchTrack startup
üöÄ BatchTrack Production Seeding Starting...
‚ö†Ô∏è  Assumes database schema is already migrated (flask db upgrade)
=== Step 1: System foundations ===
=== Seeding Consolidated Permissions System ===
Seeding organization permissions...
Processing category: Main dashboard and overview features
  Updated: dashboard.view
Processing category: All inventory tracking, adjustments, and stock management
  Updated: inventory.view
  Updated: inventory.edit
  Updated: inventory.adjust
  Updated: inventory.reserve
  Updated: inventory.delete
  Updated: inventory.view_costs
Processing category: Recipe creation, editing, and production planning
  Updated: recipes.view
  Updated: recipes.create
  Updated: recipes.edit
  Updated: recipes.delete
  Updated: recipes.scale
  Updated: recipes.plan_production
Processing category: Production batch tracking from start to finish
  Updated: batches.view
  Updated: batches.create
  Updated: batches.edit
  Updated: batches.finish
  Updated: batches.cancel
  Updated: batches.view_costs
Processing category: Product catalog, SKUs, and sales tracking
  Updated: products.view
  Updated: products.create
  Updated: products.edit
  Updated: products.delete
  Updated: products.manage_variants
  Updated: products.sales_tracking
Processing category: Organization settings, users, and roles management
  Updated: organization.view
  Updated: organization.edit
  Updated: organization.manage_users
  Updated: organization.manage_roles
  Updated: organization.manage_billing
  Updated: organization.view_audit_logs
Processing category: Alert management and notification preferences
  Updated: alerts.view
  Updated: alerts.manage
  Updated: alerts.dismiss
Processing category: Reporting, analytics, and business insights
  Updated: reports.view
  Updated: reports.export
  Updated: reports.advanced
  Updated: reports.custom
Processing category: Third-party integrations and marketplace connections
  Updated: integrations.shopify
  Updated: integrations.marketplace
  Updated: integrations.api_access
Processing category: AI-powered features and automation
  Updated: ai.recipe_optimization
  Updated: ai.demand_forecasting
  Updated: ai.quality_insights
‚úÖ Organization permissions seeded successfully!
Seeding developer permissions...
Processing category: Core system administration and management
  Updated: dev.system_admin
  Updated: dev.dashboard
  Updated: dev.debug_mode
  Updated: dev.access_logs
  Updated: dev.system_settings
Processing category: Database management and migration operations
  Updated: dev.run_migrations
  Updated: dev.seed_data
  Updated: dev.backup_restore
Processing category: Cross-organization management and oversight
  Updated: dev.all_organizations
  Updated: dev.create_organizations
  Updated: dev.modify_any_organization
  Updated: dev.delete_organizations
Processing category: Global user and permission management
  Updated: dev.manage_users
  Updated: dev.manage_roles
  Updated: dev.assign_permissions
Processing category: Subscription tiers and billing oversight
  Updated: dev.manage_tiers
  Updated: dev.billing_override
  Updated: dev.view_all_billing
Processing category: All organization-level permissions available to developers
  Updated: app.dashboard.view
  Updated: app.inventory.view
  Updated: app.inventory.edit
  Updated: app.inventory.adjust
  Updated: app.inventory.reserve
  Updated: app.inventory.delete
  Updated: app.inventory.view_costs
  Updated: app.recipes.view
  Updated: app.recipes.create
  Updated: app.recipes.edit
  Updated: app.recipes.delete
  Updated: app.recipes.scale
  Updated: app.recipes.plan_production
  Updated: app.batches.view
  Updated: app.batches.create
  Updated: app.batches.edit
  Updated: app.batches.finish
  Updated: app.batches.cancel
  Updated: app.batches.view_costs
  Updated: app.products.view
  Updated: app.products.create
  Updated: app.products.edit
  Updated: app.products.delete
  Updated: app.products.manage_variants
  Updated: app.products.sales_tracking
  Updated: app.organization.view
  Updated: app.organization.edit
  Updated: app.organization.manage_users
  Updated: app.organization.manage_roles
  Updated: app.organization.manage_billing
  Updated: app.organization.view_audit_logs
  Updated: app.alerts.view
  Updated: app.alerts.manage
  Updated: app.alerts.dismiss
  Updated: app.reports.view
  Updated: app.reports.export
  Updated: app.reports.advanced
  Updated: app.reports.custom
  Updated: app.integrations.shopify
  Updated: app.integrations.marketplace
  Updated: app.integrations.api_access
  Updated: app.ai.recipe_optimization
  Updated: app.ai.demand_forecasting
  Updated: app.ai.quality_insights
‚úÖ Developer permissions seeded successfully!
Seeding developer roles...
‚úÖ Created/updated system_admin role with 62 permissions
‚úÖ Created/updated developer role with 7 permissions
‚úÖ Created/updated support role with 8 permissions
‚úÖ Developer roles seeded successfully!
=== Seeding Organization System Roles ===
‚ÑπÔ∏è  organization_owner system role already exists
‚úÖ Organization system roles seeded successfully!
‚ÑπÔ∏è  Organization owner role already has 44 permissions - preserving existing configuration
‚úÖ Cleaned up old permissions
‚úÖ Consolidated permissions system seeded successfully!

üìä Summary:
Organization permissions: 44
Developer permissions: 62
‚úÖ Permissions seeded
=== Seeding Subscription Tiers Only ===
=== Seeding Subscription Tiers (Create Only Mode) ===
‚ÑπÔ∏è  Exempt tier already exists
‚ÑπÔ∏è  Tier 'free' already exists - PRESERVING existing configuration
‚ÑπÔ∏è  Tier 'solo' already exists - PRESERVING existing configuration
‚ÑπÔ∏è  Tier 'team' already exists - PRESERVING existing configuration
‚ÑπÔ∏è  Tier 'enterprise' already exists - PRESERVING existing configuration
‚úÖ Subscription tiers seeded successfully!
   - Existing tiers were PRESERVED and not modified
   - Only new tiers were created from JSON configuration
=== Migrating Organizations to Tier IDs ===
‚úÖ Organization migration completed!
‚úÖ Subscription tiers seeding completed!
   - Exempt tier created with unlimited permissions
   - New tiers created from JSON configuration
   - Existing tier configurations were PRESERVED
   - Ready for user seeder to create organizations
‚úÖ Subscription tiers seeded
‚úÖ Units seeded
=== Step 2: Initial admin setup ===
=== Creating Default Organization with Essential Users ===
‚ÑπÔ∏è  Found 1 existing organizations - using first organization
‚ÑπÔ∏è  Using organization: BatchTrack Organization (ID: 1)
   - Subscription tier: exempt (Exempt Plan)
‚ÑπÔ∏è  Developer user 'dev' already exists
‚ÑπÔ∏è  Admin user 'admin' already exists
‚ÑπÔ∏è  Manager user 'manager' already exists
‚ÑπÔ∏è  Operator user 'operator' already exists
‚úÖ Default organization and essential users created successfully
   - Organization: BatchTrack Organization (Exempt tier)
   - 1 System developer (dev/dev123)
   - 3 Organization users (admin, manager, operator)
‚úÖ Users and organization seeded
=== Step 3: Organization setup ===
‚ùå Production seeding failed: (sqlite3.OperationalError) no such column: inventory_item.updated_at
[SQL: SELECT inventory_item.id AS inventory_item_id, inventory_item.name AS inventory_item_name, inventory_item.category_id AS inventory_item_category_id, inventory_item.quantity AS inventory_item_quantity, inventory_item.unit AS inventory_item_unit, inventory_item.cost_per_unit AS inventory_item_cost_per_unit, inventory_item.low_stock_threshold AS inventory_item_low_stock_threshold, inventory_item.density AS inventory_item_density, inventory_item.type AS inventory_item_type, inventory_item.is_active AS inventory_item_is_active, inventory_item.is_archived AS inventory_item_is_archived, inventory_item.is_perishable AS inventory_item_is_perishable, inventory_item.shelf_life_days AS inventory_item_shelf_life_days, inventory_item.expiration_date AS inventory_item_expiration_date, inventory_item.storage_amount AS inventory_item_storage_amount, inventory_item.storage_unit AS inventory_item_storage_unit, inventory_item.created_by AS inventory_item_created_by, inventory_item.created_at AS inventory_item_created_at, inventory_item.intermediate AS inventory_item_intermediate, inventory_item.organization_id AS inventory_item_organization_id, inventory_item.updated_at AS inventory_item_updated_at 
FROM inventory_item 
WHERE inventory_item.category_id = ? AND inventory_item.organization_id = ?]
[parameters: (14, 1)]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 945, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such column: inventory_item.updated_at

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/runner/workspace/.pythonlibs/bin/flask", line 8, in <module>
    sys.exit(main())
             ^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/cli.py", line 1129, in main
    cli.main()
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
         ^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/click/core.py", line 1697, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/cli.py", line 400, in decorator
    return ctx.invoke(f, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app/management.py", line 73, in init_production_command
    seed_categories(organization_id=org.id)
  File "/home/runner/workspace/app/seeders/ingredient_category_seeder.py", line 58, in seed_categories
    ).all()
      ^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2704, in all
    return self._iter().all()  # type: ignore
           ^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2858, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2251, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 306, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1416, in execute
    return meth(
           ^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 945, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: inventory_item.updated_at
[SQL: SELECT inventory_item.id AS inventory_item_id, inventory_item.name AS inventory_item_name, inventory_item.category_id AS inventory_item_category_id, inventory_item.quantity AS inventory_item_quantity, inventory_item.unit AS inventory_item_unit, inventory_item.cost_per_unit AS inventory_item_cost_per_unit, inventory_item.low_stock_threshold AS inventory_item_low_stock_threshold, inventory_item.density AS inventory_item_density, inventory_item.type AS inventory_item_type, inventory_item.is_active AS inventory_item_is_active, inventory_item.is_archived AS inventory_item_is_archived, inventory_item.is_perishable AS inventory_item_is_perishable, inventory_item.shelf_life_days AS inventory_item_shelf_life_days, inventory_item.expiration_date AS inventory_item_expiration_date, inventory_item.storage_amount AS inventory_item_storage_amount, inventory_item.storage_unit AS inventory_item_storage_unit, inventory_item.created_by AS inventory_item_created_by, inventory_item.created_at AS inventory_item_created_at, inventory_item.intermediate AS inventory_item_intermediate, inventory_item.organization_id AS inventory_item_organization_id, inventory_item.updated_at AS inventory_item_updated_at 
FROM inventory_item 
WHERE inventory_item.category_id = ? AND inventory_item.organization_id = ?]
[parameters: (14, 1)]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
