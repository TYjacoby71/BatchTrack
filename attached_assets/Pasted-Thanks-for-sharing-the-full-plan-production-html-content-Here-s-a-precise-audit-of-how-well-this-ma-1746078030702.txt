Thanks for sharing the full plan_production.html content. Here's a precise audit of how well this matches the structure we've built across the API and USCS logic.

✅ WHAT’S WORKING (ALIGNED)
Feature	Status	Notes
@click="checkStockOrWarn()" on Check Stock button	✅	Button is wired correctly
checkStock() sends correct payload (recipe_id, scale)	✅	Matches backend API expectations
data.ingredients → this.stockResults = data.ingredients	✅	Matches universal_stock_check() return
stockCheckPassed from data.all_ok	✅	Used to render alerts and gate start button
Table shows x-for="item in stockResults"	⚠	Needs to be x-for="item in stockResults.stock_check"
Field names in table	❌ Mismatch	You're using item.ingredient, item.recipe_unit, item.inventory_unit, and item.unit — but those do not exist in USCS response

🔥 WHAT NEEDS TO CHANGE
❗ 1. Fix the table data loop:
From:

html
Copy
Edit
<template x-for="item in stockResults" :key="item.ingredient">
To:

html
Copy
Edit
<template x-for="item in stockResults.stock_check" :key="item.name">
❗ 2. Fix field references:
From:

html
Copy
Edit
<td x-text="item.ingredient"></td>
<td x-text="`${item.needed} ${item.recipe_unit}`"></td>
<td x-text="`${item.available} ${item.inventory_unit}`"></td>
To match your USCS return:

html
Copy
Edit
<td x-text="item.name"></td>
<td x-text="item.needed + ' ' + item.needed_unit"></td>
<td x-text="item.available + ' ' + item.available_unit"></td>
✅ OTHER MINOR IMPROVEMENTS
Optional: update canStartBatch() to include flexMode:
You’re missing this, but we’ve used it before:

js
Copy
Edit
get canStartBatch() {
  return (this.flexMode || this.containmentPercent >= 100) && this.stockChecked && this.stockCheckPassed;
}
✅ FINAL CHECKLIST TO FIX
Area	Action
Table x-for	Change to item in stockResults.stock_check
Table field names	Use: item.name, item.needed_unit, item.available_unit, item.status
Optional: Add flexMode to data()	Add: flexMode: false
Optional: Update canStartBatch()	Add flex logic for override

Would you like me to paste the fixed section of the table and computed property for quick replacement?






You said:
did we change them to the wrong thing, or is this html wrong?


ChatGPT said:
Excellent question — and this is the crucial point:

✅ Your HTML is wrong. ❌ You did not change the backend or the USCS response incorrectly.

🔍 What's the Misalignment?
❌ HTML currently expects:
js
Copy
Edit
item.ingredient
item.recipe_unit
item.inventory_unit
item.unit
✅ But your uscs.py returns:
js
Copy
Edit
item.name               // not `ingredient`
item.needed_unit        // not `recipe_unit`
item.available_unit     // not `inventory_unit`
item.available          // not missing, just wrong label
So you didn’t change the backend structure incorrectly — you simply didn’t update the HTML partial after finalizing the API response shape.

✅ Why This Happened
You originally had an older table partial or plan production version that used:

js
Copy
Edit
item.ingredient
item.unit
Which was aligned to a previous, simpler format.

But now, after switching to the properly detailed structure from universal_stock_check(), the field names changed — and the table wasn't updated to match.

✅ Final Fix — Use These Labels in the HTML:
Column	Use this field
Ingredient	item.name
Needed	item.needed + ' ' + item.needed_unit
Available	item.available + ' ' + item.available_unit
Status	item.status

