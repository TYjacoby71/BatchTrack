from datetime import datetime
from app import db

class Batch(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    recipe_id = db.Column(db.Integer, db.ForeignKey('recipe.id'), nullable=False)
    batch_type = db.Column(db.String(32), nullable=False)  # 'ingredient' or 'product'

    # For ingredient-type batches
    yield_amount = db.Column(db.Float)
    yield_unit = db.Column(db.String(50))

    # For product-type batches
    product_id = db.Column(db.Integer, db.ForeignKey('product.id'))
    variant_id = db.Column(db.Integer, db.ForeignKey('product_variation.id'))
    final_quantity = db.Column(db.Float)  # jars, bottles, etc.
    output_unit = db.Column(db.String(50))  # e.g. "jar"

    # Shared fields
    scale = db.Column(db.Float, default=1.0)
    status = db.Column(db.String(50), default='in_progress')
    notes = db.Column(db.Text)
    tags = db.Column(db.Text)
    total_cost = db.Column(db.Float)
    started_at = db.Column(db.DateTime, default=datetime.utcnow)
    completed_at = db.Column(db.DateTime)

    ingredients = db.relationship('BatchIngredient', backref='batch', cascade="all, delete-orphan")
    containers = db.relationship('BatchContainer', backref='batch', cascade="all, delete-orphan")
    timers = db.relationship('BatchTimer', backref='batch', cascade="all, delete-orphan")


class BatchIngredient(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    batch_id = db.Column(db.Integer, db.ForeignKey('batch.id'), nullable=False)
    ingredient_id = db.Column(db.Integer, db.ForeignKey('inventory_item.id'), nullable=False)
    amount_used = db.Column(db.Float, nullable=False)
    unit = db.Column(db.String(32), nullable=False)


class BatchContainer(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    batch_id = db.Column(db.Integer, db.ForeignKey('batch.id'), nullable=False)
    container_id = db.Column(db.Integer, db.ForeignKey('inventory_item.id'), nullable=False)
    quantity_used = db.Column(db.Integer, nullable=False)
    cost_each = db.Column(db.Float)


class BatchTimer(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    batch_id = db.Column(db.Integer, db.ForeignKey('batch.id'), nullable=False)
    name = db.Column(db.String(64))
    duration_seconds = db.Column(db.Integer)
    start_time = db.Column(db.DateTime)
    end_time = db.Column(db.DateTime)
    status = db.Column(db.String(32), default='pending')
