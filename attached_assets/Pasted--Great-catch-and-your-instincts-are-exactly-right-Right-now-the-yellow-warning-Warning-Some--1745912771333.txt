✅ Great catch — and your instincts are exactly right.

Right now, the yellow warning (Warning: Some containers will be partially filled. You need 47 more containers...) always shows, even if there’s a weird leftover selection like that blank "Select Container" row.

We should only show that warning when a real problem is detected:

The total available containers cannot fully hold the projected yield.

📋 Simple Corrected Plan for the Warning
Right now you have something like:

html
Copy
Edit
<div class="alert alert-warning mt-2" x-show="containmentIssue">
  <span x-text="containmentIssue"></span>
</div>
The problem:
🔴 containmentIssue is always populated a little during fetchContainerPlan, so the div shows no matter what.

🛠 Better Approach:
✅ Change containmentIssue into two things:

Leftover Message (leftoverMessage) – for minor warnings

Critical Container Shortage Message (containerShortageWarning) – for when truly impossible to fit the batch

✅ Then conditionally render only if critical.

✏️ Here's the code to paste:
In your Alpine data() inside planProduction():
Add two fields:

javascript
Copy
Edit
leftoverMessage: '',
containerShortageWarning: '',
Update fetchContainerPlan() like this:
javascript
Copy
Edit
fetchContainerPlan() {
  fetch(`/api/available-containers/${this.recipeId}?scale=${this.scale}`)
    .then(res => res.json())
    .then(data => {
      this.allowedContainers = data.available || [];
      if (this.autoFill) {
        this.containersSelected = data.plan || [];
        this.updateProgress();

        const projected = this.baseYield * this.scale;
        const totalAvailable = this.allowedContainers.reduce((sum, c) => sum + (c.storage_amount * c.stock_qty), 0);

        if (totalAvailable < projected) {
          const smallestContainer = this.allowedContainers.reduce((min, c) => Math.min(min, c.storage_amount), Infinity) || 1;
          const missingUnits = Math.ceil((projected - totalAvailable) / smallestContainer);
          this.containerShortageWarning = `You need ${missingUnits} more containers to make this batch.`;
        } else {
          this.containerShortageWarning = '';
        }

        if (this.containmentPercent < 100) {
          this.leftoverMessage = `There will be ${this.remainingToContain.toFixed(2)} ${this.unit} left uncontained.`;
        } else {
          this.leftoverMessage = '';
        }
      } else {
        this.updateProgress();
      }
    });
},
In your HTML:
Change the warning section like this:

html
Copy
Edit
<div class="mt-3">
  <label>Containment Progress:</label>
  <div class="progress" style="height: 20px;">
    <div class="progress-bar" role="progressbar" :style="'width: ' + containmentPercent + '%'" x-text="containmentPercent + '%'"></div>
  </div>
  <small class="form-text text-muted" x-text="liveContainmentMessage"></small>
</div>

<!-- Show leftover units -->
<div class="alert alert-info mt-2" x-show="leftoverMessage">
  <span x-text="leftoverMessage"></span>
</div>

<!-- Show serious container shortage -->
<div class="alert alert-warning mt-2" x-show="containerShortageWarning">
  <span x-text="containerShortageWarning"></span>
</div>

<!-- Show if no containers selected -->
<div class="alert alert-danger mt-2" x-show="containersSelected.length === 0">
  No containers selected. Please add containers or enable Auto-Fill.
</div>
📦 Summary of What This Fix Does:

Warning	When It Shows
ℹ️ "There will be X left over"	When batch is slightly underfilled but solvable
⚠️ "You need X more containers"	When inventory is truly insufficient to hold batch
🔴 "No containers selected"	When user clears all containers
✅ Much cleaner UX.
✅ No random warnings when batch is okay.
✅ Looks fully professional!