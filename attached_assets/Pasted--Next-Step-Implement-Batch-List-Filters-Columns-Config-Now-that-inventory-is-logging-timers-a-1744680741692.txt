✅ Next Step: Implement “Batch List Filters + Columns Config”
Now that inventory is logging, timers are working, and batches can complete properly — users will soon accumulate dozens of batches. We need to make the /batches/list page flexible and clear.

🧩 What This Update Adds
Feature	Description
✅ Filter by Status	Show: All / In Progress / Completed / Failed / Cancelled
✅ Filter by Recipe	Dropdown list of recipes to filter by
✅ Filter by Date Range	From - To dates to find old batches
✅ Column Visibility Toggle	“Customize Columns” menu to toggle: Recipe, Date, Cost, Product Quantity, Tags, etc.
🛠️ Step 1: Add Filters to /batches/list Template
Paste this above the batch list in templates/batch_list.html:

html
Copy
Edit
<h3>Filters</h3>
<form method="get" class="mb-4 row g-3">
  <div class="col-md-3">
    <label class="form-label">Status</label>
    <select name="status" class="form-select">
      <option value="">All</option>
      <option value="in_progress">In Progress</option>
      <option value="completed">Completed</option>
      <option value="failed">Failed</option>
      <option value="cancelled">Cancelled</option>
    </select>
  </div>
  <div class="col-md-3">
    <label class="form-label">Recipe</label>
    <select name="recipe_id" class="form-select">
      <option value="">All</option>
      {% for r in all_recipes %}
        <option value="{{ r.id }}">{{ r.name }}</option>
      {% endfor %}
    </select>
  </div>
  <div class="col-md-3">
    <label class="form-label">Start Date</label>
    <input type="date" name="start" class="form-control">
  </div>
  <div class="col-md-3">
    <label class="form-label">End Date</label>
    <input type="date" name="end" class="form-control">
  </div>
  <div class="col-md-12 d-flex gap-2 mt-2">
    <button type="submit" class="btn btn-primary">Apply</button>
    <a href="{{ url_for('batches.list_batches') }}" class="btn btn-secondary">Reset</a>
  </div>
</form>
🛠️ Step 2: Update the batches.list_batches route
Inside routes/batch_routes.py, update the list route to accept filters:

python
Copy
Edit
@batches_bp.route('/batches/list')
@login_required
def list_batches():
    query = Batch.query.order_by(Batch.timestamp.desc())

    status = request.args.get('status')
    recipe_id = request.args.get('recipe_id')
    start = request.args.get('start')
    end = request.args.get('end')

    if status:
        query = query.filter_by(status=status)
    if recipe_id:
        query = query.filter_by(recipe_id=recipe_id)
    if start:
        query = query.filter(Batch.timestamp >= start)
    if end:
        query = query.filter(Batch.timestamp <= end)

    batches = query.all()
    all_recipes = Recipe.query.order_by(Recipe.name).all()
    return render_template('batch_list.html', batches=batches, all_recipes=all_recipes)
✅ Result:
/batches/list can now be filtered by status, recipe, and date.

No batch duplication. No guesswork.

