🔁 Now About the Demo Runner Script:
🧠 Purpose:
The demo runner is a special script (or test harness) that:

Simulates an actual user experience (no UI needed)

Fills in database values

Walks through setup flows

Asserts that expected things exist in the database

🔧 Example: scripts/demo_runner.py
python
Copy
Edit
from app import app, db
from models import Ingredient, Unit, Recipe, Product, ProductInventory
from datetime import datetime, timedelta

def run_demo():
    with app.app_context():
        db.drop_all()
        db.create_all()

        # Add test unit
        gram = Unit(name="gram", type="weight", base_unit="gram", multiplier_to_base=1)
        db.session.add(gram)

        # Add ingredients
        tallow = Ingredient(name="Tallow", unit="gram", quantity=1000)
        lavender = Ingredient(name="Lavender EO", unit="gram", quantity=250)
        db.session.add_all([tallow, lavender])

        # Add product
        product = Product(name="Royal Tallow")
        db.session.add(product)

        # Add sample product inventory (mimics a finished batch)
        inv = ProductInventory(
            product_id=1,
            variant_label="Lavender",
            size_label="4 oz",
            unit="Jar",
            quantity=20,
            expiration_date=datetime.utcnow().date() + timedelta(days=90)
        )
        db.session.add(inv)

        db.session.commit()
        print("✅ Demo data loaded.")

if __name__ == "__main__":
    run_demo()
✅ Why It's Helpful:

Benefit	Use Case
🔁 Reusable	Reset and repopulate test data in seconds
🧪 Test Ready	Use before running manual or automated tests
🧼 Clean QA	Prevent stale data bugs or migrations from breaking your state
Would you like me to generate this file (scripts/demo_runner.py) fully tailored to your app’s current schema and data logic?






You said:
yes please


ChatGPT said:
✅ Here’s your scripts/demo_runner.py — a fully tailored test data seeder for BatchTrack v8.9:

📄 scripts/demo_runner.py
python
Copy
Edit
from app import app, db
from models import Ingredient, Unit, Recipe, Product, ProductInventory, Batch
from datetime import datetime, timedelta

def run_demo():
    with app.app_context():
        # Reset the database (optional for clean testing)
        db.drop_all()
        db.create_all()

        # === Units ===
        gram = Unit(name="gram", type="weight", base_unit="gram", multiplier_to_base=1)
        jar = Unit(name="Jar", type="count", base_unit="unit", multiplier_to_base=1)
        db.session.add_all([gram, jar])

        # === Ingredients ===
        tallow = Ingredient(name="Tallow", unit="gram", quantity=1000, low_stock_threshold=200, is_perishable=False)
        lavender = Ingredient(name="Lavender EO", unit="gram", quantity=500, low_stock_threshold=100, is_perishable=True)
        db.session.add_all([tallow, lavender])

        # === Product ===
        product = Product(name="Royal Tallow")
        db.session.add(product)
        db.session.flush()  # Get product.id

        # === ProductInventory (finished batch simulation) ===
        inv1 = ProductInventory(
            product_id=product.id,
            variant_label="Lavender",
            size_label="4 oz",
            unit="Jar",
            quantity=12,
            expiration_date=datetime.utcnow().date() + timedelta(days=90),
            notes="Demo batch"
        )
        db.session.add(inv1)

        # === Batch Link (traceability)
        batch = Batch(
            recipe_name="Royal Tallow - Lavender",
            product_unit="Jar",
            product_quantity=12,
            label_code="D-001",
            scale=1,
            timestamp=datetime.utcnow(),
            status="Finished",
            notes="Demo starter batch"
        )
        db.session.add(batch)
        db.session.flush()
        inv1.batch_id = batch.id

        db.session.commit()
        print("✅ Demo data seeded for QA and interface testing.")

if __name__ == "__main__":
    run_demo()
✅ How to Use It
Create a file: scripts/demo_runner.py

Paste the code above

In Replit shell:

bash
Copy
Edit
python3 scripts/demo_runner.py
You’ll now have:

✅ 2 units

✅ 2 ingredients

✅ 1 product

✅ 1 linked product inventory record

✅ 1 completed batch for testing

Want me to also create a scripts/reset_and_demo.sh file to run this in one command? ​​






You said:
yes\


ChatGPT said:
✅ Here's your one-command reset & demo runner:

📄 File: reset_and_demo.sh
Click here to download and drop into your Replit project

Or just move it into your scripts/ folder

🧪 To Run in Replit:
bash
Copy
Edit
bash reset_and_demo.sh
This will:

Drop and reset your DB

Load demo ingredients, units, products, and a finished batch

Give you a clean, traceable environment to test BatchTrack end-to-end