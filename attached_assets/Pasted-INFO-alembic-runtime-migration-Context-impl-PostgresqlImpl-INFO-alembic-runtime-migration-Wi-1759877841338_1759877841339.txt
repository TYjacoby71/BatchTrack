INFO  [alembic.runtime.migration] Context impl PostgresqlImpl.
INFO  [alembic.runtime.migration] Will assume transactional DDL.
INFO  [alembic.runtime.migration] Running upgrade 9a2b8c4d5e6f -> b5c7d8e9f1a2, replace billing provider booleans with enum fields
=== Replacing billing provider booleans with enum fields ===
   ✅ tier_type column already exists
   ✅ billing_provider column already exists
   Found 1 existing subscription_tier rows - migrating data from legacy boolean columns...
   ⚠️  Data migration failed: (psycopg2.errors.UndefinedColumn) column "requires_stripe_billing" does not exist
LINE 5: ...(requires_whop_billing, false) = true OR COALESCE(requires_s...
                                                             ^

[SQL: 
                        UPDATE subscription_tier
                        SET
                          tier_type = CASE
                            WHEN COALESCE(requires_whop_billing, false) = true OR COALESCE(requires_stripe_billing, false) = true
                            THEN 'paid' ELSE 'free' END,
                          billing_provider = CASE
                            WHEN COALESCE(requires_whop_billing, false) = true THEN 'whop'
                            WHEN COALESCE(requires_stripe_billing, false) = true THEN 'stripe'
                            ELSE 'exempt' END
                    ]
(Background on this error at: https://sqlalche.me/e/20/f405)
   ℹ️  Rolling back transaction and continuing without data migration...
   Dropping legacy boolean columns...
   ⚠️  Could not drop requires_whop_billing: 'Connection' object has no attribute 'has_table'
✅ Billing provider enum migration completed
INFO  [alembic.runtime.migration] Running upgrade b5c7d8e9f1a2 -> fix_unit_symbol_nullable, make unit symbol nullable for custom units
=== Making unit symbol nullable ===
   ℹ️  Index ix_unit_standard_unique doesn't exist, skipping
   ✅ Made symbol column nullable
   ✅ Created new ix_unit_symbol index
✅ Migration completed: Unit symbol is now nullable
INFO  [alembic.runtime.migration] Running upgrade fix_unit_symbol_nullable -> c8f2e5a9b1d4, fix fallback_price column type from Numeric to String
=== Fixing fallback_price column type ===
   Converting fallback_price from Numeric to String...
✅ fallback_price column type fixed
INFO  [alembic.runtime.migration] Running upgrade c8f2e5a9b1d4 -> fix_product_sku_name_column, fix product_sku name column mismatch
=== Fixing product_sku name/sku_name column mismatch ===
   name column exists: False
   sku_name column exists: True
   ✅ Already correct - only sku_name column exists
INFO  [alembic.runtime.migration] Running upgrade fix_product_sku_name_column -> add_unique_constraint_stripe, add unique constraint on stripe event id
INFO  [alembic.runtime.migration] Running upgrade add_unique_constraint_stripe -> add_tier_key_column, add tier_key column to subscription_tier
=== Adding missing columns to subscription_tier ===
   Adding tier_key column...
✅ tier_key column added successfully
   ⚠️  max_users column already exists, skipping
   ⚠️  max_monthly_batches column already exists, skipping
   Populating tier_key values from key column...
=== Migration completed ===
INFO  [alembic.runtime.migration] Running upgrade add_tier_key_column -> add_legacy_compatibility_fields, add legacy compatibility fields to subscription tier
=== No-op migration: add_legacy_compatibility_fields ===
✅ This is a placeholder migration with no changes
INFO  [alembic.runtime.migration] Running upgrade add_legacy_compatibility_fields -> 39e309ff02d1, add legacy compatibility fields to subscription tier
=== Adding legacy compatibility fields to subscription_tier ===
   Adding stripe_product_id column...
✅ stripe_product_id column added successfully
   Adding stripe_price_id column...
✅ stripe_price_id column added successfully
   Adding stripe_price_id_monthly column...
✅ stripe_price_id_monthly column added successfully
   Adding stripe_price_id_yearly column...
✅ stripe_price_id_yearly column added successfully
=== Legacy compatibility fields migration completed ===
INFO  [alembic.runtime.migration] Running upgrade 39e309ff02d1 -> add_is_verified_to_user, add is_verified field to user table
=== Adding is_verified field to user table ===
   Adding is_verified column...
✅ is_verified column added successfully
=== Migration completed ===
INFO  [alembic.runtime.migration] Running upgrade add_is_verified_to_user -> add_email_verified_at_column, add email_verified_at column
=== Adding email_verified_at column (no-op) ===
   Column already exists in current schema
✅ Migration completed
INFO  [alembic.runtime.migration] Running upgrade add_email_verified_at_column -> 6f9bc65166b3, Create unified inventory history and merge data
=== Creating UnifiedInventoryHistory and migrating data ===
   Creating unified_inventory_history table...
Traceback (most recent call last):
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 945, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
psycopg2.errors.DuplicateTable: relation "unified_inventory_history" already exists


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/render/project/src/.venv/bin/flask", line 8, in <module>
    sys.exit(main())
             ~~~~^^
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/flask/cli.py", line 1129, in main
    cli.main()
    ~~~~~~~~^^
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/click/core.py", line 1697, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
                           ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/click/core.py", line 1697, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
                           ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/flask/cli.py", line 400, in decorator
    return ctx.invoke(f, *args, **kwargs)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/flask_migrate/cli.py", line 150, in upgrade
    _upgrade(directory, revision, sql, tag, x_arg)
    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/flask_migrate/__init__.py", line 111, in wrapped
    f(*args, **kwargs)
    ~^^^^^^^^^^^^^^^^^
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/flask_migrate/__init__.py", line 200, in upgrade
    command.upgrade(config, revision, sql=sql, tag=tag)
    ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/alembic/command.py", line 408, in upgrade
    script.run_env()
    ~~~~~~~~~~~~~~^^
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/alembic/script/base.py", line 586, in run_env
    util.load_python_file(self.dir, "env.py")
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/alembic/util/pyfiles.py", line 95, in load_python_file
    module = load_module_py(module_id, path)
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/alembic/util/pyfiles.py", line 113, in load_module_py
    spec.loader.exec_module(module)  # type: ignore
    ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^
  File "<frozen importlib._bootstrap_external>", line 1026, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/opt/render/project/src/migrations/env.py", line 147, in <module>
    run_migrations_online()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/render/project/src/migrations/env.py", line 141, in run_migrations_online
    context.run_migrations()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 8, in run_migrations
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/alembic/runtime/environment.py", line 946, in run_migrations
    self.get_context().run_migrations(**kw)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/alembic/runtime/migration.py", line 623, in run_migrations
    step.migration_fn(**kw)
    ~~~~~~~~~~~~~~~~~^^^^^^
  File "/opt/render/project/src/migrations/versions/6f9bc65166b3_create_unified_inventory_history_and_.py", line 35, in upgrade
    op.create_table('unified_inventory_history',
    ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        sa.Column('id', sa.Integer(), nullable=False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<58 lines>...
        sa.ForeignKeyConstraint(['fifo_reference_id'], ['unified_inventory_history.id'])
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "<string>", line 8, in create_table
  File "<string>", line 3, in create_table
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/alembic/operations/ops.py", line 1317, in create_table
    return operations.invoke(op)
           ~~~~~~~~~~~~~~~~~^^^^
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/alembic/operations/base.py", line 441, in invoke
    return fn(self, operation)
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/alembic/operations/toimpl.py", line 130, in create_table
    operations.impl.create_table(table, **kw)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/alembic/ddl/impl.py", line 405, in create_table
    self._exec(schema.CreateTable(table, **kw))
    ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/alembic/ddl/impl.py", line 246, in _exec
    return conn.execute(construct, params)
           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/sqlalchemy/sql/ddl.py", line 187, in _execute_on_connection
    return connection._execute_ddl(
           ~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1527, in _execute_ddl
    ret = self._execute_context(
        dialect,
    ...<4 lines>...
        compiled,
    )
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/opt/render/project/src/.venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py", line 945, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.DuplicateTable) relation "unified_inventory_history" already exists

[SQL: 
CREATE TABLE unified_inventory_history (
        id SERIAL NOT NULL, 
        inventory_item_id INTEGER NOT NULL, 
        timestamp TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
        change_type VARCHAR(50) NOT NULL, 
        quantity_change FLOAT NOT NULL, 
        unit VARCHAR(50) NOT NULL, 
        unit_cost FLOAT, 
        remaining_quantity FLOAT NOT NULL, 
        fifo_reference_id INTEGER, 
        fifo_code VARCHAR(64), 
        batch_id INTEGER, 
        created_by INTEGER, 
        notes TEXT, 
        quantity_used FLOAT NOT NULL, 
        used_for_batch_id INTEGER, 
        is_perishable BOOLEAN NOT NULL, 
        shelf_life_days INTEGER, 
        expiration_date TIMESTAMP WITHOUT TIME ZONE, 
        location_id VARCHAR(128), 
        location_name VARCHAR(128), 
        temperature_at_time FLOAT, 
        quality_status VARCHAR(32), 
        compliance_status VARCHAR(32), 
        quality_checked_by INTEGER, 
        customer VARCHAR(255), 
        sale_price FLOAT, 
        order_id VARCHAR(255), 
        reservation_id VARCHAR(64), 
        is_reserved BOOLEAN NOT NULL, 
        sale_location VARCHAR(64), 
        marketplace_order_id VARCHAR(128), 
        marketplace_source VARCHAR(32), 
        batch_number VARCHAR(128), 
        lot_number VARCHAR(128), 
        container_id INTEGER, 
        fifo_source VARCHAR(128), 
        organization_id INTEGER NOT NULL, 
        PRIMARY KEY (id), 
        FOREIGN KEY(inventory_item_id) REFERENCES inventory_item (id), 
        FOREIGN KEY(batch_id) REFERENCES batch (id), 
        FOREIGN KEY(used_for_batch_id) REFERENCES batch (id), 
        FOREIGN KEY(created_by) REFERENCES "user" (id), 
        FOREIGN KEY(quality_checked_by) REFERENCES "user" (id), 
        FOREIGN KEY(container_id) REFERENCES inventory_item (id), 
        FOREIGN KEY(organization_id) REFERENCES organization (id), 
        FOREIGN KEY(fifo_reference_id) REFERENCES unified_inventory_history (id)
)

]
(Background on this error at: https://sqlalche.me/e/20/f405)
render@srv-d21alungi27c73dn1440-5796bdfbd6-qlkpn:~/project/src$ 