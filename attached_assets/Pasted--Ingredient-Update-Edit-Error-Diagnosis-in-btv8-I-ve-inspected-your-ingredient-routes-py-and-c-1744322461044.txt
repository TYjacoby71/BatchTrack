🔧 Ingredient Update (Edit) – Error Diagnosis in btv8
I’ve inspected your ingredient_routes.py and confirmed that your update flow is this:

✅ Confirmed Route in ingredient_routes.py
python
Copy
Edit
@ingredients_bp.route('/edit/<int:ingredient_id>', methods=['GET', 'POST'])
def edit_ingredient(ingredient_id):
    ...
This route:

Loads the edit form on GET

Accepts form data on POST

Updates the ingredient in-place

Redirects to... uh-oh 👇

❌ Problem: Incorrect Redirect
Currently it ends with:

python
Copy
Edit
return redirect(url_for('batches.view'))
But again — just like delete — that endpoint does not exist and is crashing with:

rust
Copy
Edit
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'batches.view'.
✅ The Fix for Ingredient Edit
Update this line:

python
Copy
Edit
return redirect(url_for('batches.view'))
✅ To:
python
Copy
Edit
return redirect(url_for('ingredients.list_ingredients'))
Same as delete.

✅ Optional: Add Confirmation Message
Right before the redirect:

python
Copy
Edit
flash(f"Ingredient '{ingredient.name}' updated.", "success")
And ensure your template supports flash rendering like we mentioned earlier.

✅ Final Edit Route Code (Copy-Paste Safe)
python
Copy
Edit
@ingredients_bp.route('/edit/<int:ingredient_id>', methods=['GET', 'POST'])
def edit_ingredient(ingredient_id):
    data = load_data()
    ingredient = next((i for i in data['ingredients'] if i['id'] == ingredient_id), None)

    if not ingredient:
        flash("Ingredient not found.", "danger")
        return redirect(url_for('ingredients.list_ingredients'))

    if request.method == 'POST':
        ingredient['name'] = request.form['name']
        ingredient['quantity'] = float(request.form['quantity'])
        ingredient['unit'] = request.form['unit']

        save_data(data)
        flash(f"Ingredient '{ingredient['name']}' updated.", "success")
        return redirect(url_for('ingredients.list_ingredients'))

    return render_template('edit_ingredient.html', ingredient=ingredient)
