============================= test session starts ==============================
platform linux -- Python 3.11.13, pytest-8.3.5, pluggy-1.5.0 -- /home/runner/workspace/.pythonlibs/bin/python
cachedir: .pytest_cache
rootdir: /home/runner/workspace
collected 50 items                                                             

tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_create_ingredient_with_initial_stock PASSED [  2%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_create_product_zero_initial_stock PASSED [  4%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_create_container_with_storage_specs PASSED [  6%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_restock_operation FAILED [  8%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_manual_addition FAILED [ 10%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_finished_batch_addition FAILED [ 12%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_returned_refunded_inventory FAILED [ 14%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_fifo_deduction_order PASSED [ 16%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_batch_consumption PASSED [ 18%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_spoilage_tracking PASSED [ 20%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_sales_tracking PASSED [ 22%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_quality_control_deductions PASSED [ 24%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_sampling_and_testing PASSED [ 26%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_recount_increase PASSED [ 28%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_recount_decrease 
FAILED [ 30%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_recount_to_zero FAILED [ 32%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_cost_override FAILED [ 34%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_weighted_average_cost_tracking PASSED [ 36%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_perishable_item_expiration_tracking PASSED [ 38%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_expired_inventory_handling PASSED [ 40%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_inventory_reservation FAILED [ 42%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_inventory_fifo_sync_validation PASSED [ 44%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_audit_trail_completeness FAILED [ 46%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_insufficient_inventory_handling PASSED [ 48%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_canonical_service_dispatch FAILED [ 50%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_unit_conversion_edge_cases FAILED [ 52%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_overdraft_protection PASSED [ 54%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_invalid_quantity_handling FAILED [ 56%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_nonexistent_item_handling FAILED [ 58%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[restock-100.0-50.0-150.0] FAILED [ 60%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[manual_addition-100.0-25.0-125.0] FAILED [ 62%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[returned-50.0-10.0-60.0] FAILED [ 64%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[refunded-50.0-5.0-55.0] FAILED [ 66%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[finished_batch-0.0-48.0-48.0] FAILED [ 68%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[use-100.0-30.0-70.0] FAILED [ 70%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[batch-100.0-25.0-75.0] FAILED [ 72%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[sale-100.0-10.0-90.0] FAILED [ 74%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[spoil-100.0-5.0-95.0] FAILED [ 76%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[trash-100.0-20.0-80.0] FAILED [ 78%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[expired-100.0-15.0-85.0] FAILED [ 80%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[damaged-100.0-2.5-97.5] FAILED [ 82%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[quality_fail-100.0-3.0-97.0] FAILED [ 84%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[sample-100.0-0.5-99.5] FAILED [ 86%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[tester-100.0-1.0-99.0] FAILED [ 88%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[gift-100.0-2.0-98.0] FAILED [ 90%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[reserved-100.0-25.0-75.0] FAILED [ 92%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_complex_multi_operation_scenario 



FAILED [ 94%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_high_volume_operations PASSED [ 96%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_item_update_with_quantity_change FAILED [ 98%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_perishable_status_change PASSED [100%]

======================================= FAILURES =======================================
_______________ TestInventorySystemComprehensive.test_restock_operation ________________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd9985161d0>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_restock_operation(self, app, db_session, setup_test_data):
        """Test restocking existing inventory"""
        data = setup_test_data
        item = data['ingredient']
    
        # Add initial stock
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=100.0,
            change_type='restock',
            notes='Initial restock',
            created_by=data['user'].id
        )
>       assert success is True
E       AssertionError: assert (True, 'Initial stock added: 100.0 g') is True

tests/test_inventory_comprehensive.py:200: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_restock_operation
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 1 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 100.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 1: initial_stock
________________ TestInventorySystemComprehensive.test_manual_addition _________________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd998516910>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_manual_addition(self, app, db_session, setup_test_data):
        """Test manual inventory addition"""
        data = setup_test_data
        item = data['product']
    
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=25.0,
            change_type='manual_addition',
            notes='Found extra inventory',
            created_by=data['user'].id
        )
>       assert success is True
E       AssertionError: assert (True, 'Initial stock added: 25.0 ml') is True

tests/test_inventory_comprehensive.py:237: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=2, quantity=25.0, change_type=manual_addition, caller=tests/test_inventory_comprehensive.py:test_manual_addition
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 2 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 2 quantity: 0.0 â†’ 25.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 2: initial_stock
____________ TestInventorySystemComprehensive.test_finished_batch_addition _____________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd998517050>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_finished_batch_addition(self, app, db_session, setup_test_data):
        """Test adding inventory from finished batch"""
        data = setup_test_data
        item = data['product']
    
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=48.0,
            change_type='finished_batch',
            notes='Batch #123 completed',
            created_by=data['user'].id,
            batch_id=123
        )
>       assert success is True
E       AssertionError: assert (True, 'Initial stock added: 48.0 ml') is True

tests/test_inventory_comprehensive.py:255: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=2, quantity=48.0, change_type=finished_batch, caller=tests/test_inventory_comprehensive.py:test_finished_batch_addition
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 2 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 2 quantity: 0.0 â†’ 48.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 2: initial_stock
__________ TestInventorySystemComprehensive.test_returned_refunded_inventory ___________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd998515190>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_returned_refunded_inventory(self, app, db_session, setup_test_data):
        """Test returned and refunded inventory operations"""
        data = setup_test_data
        item = data['product']
    
        # Test returned
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=5.0,
            change_type='returned',
            notes='Customer return',
            created_by=data['user'].id
        )
>       assert success is True
E       AssertionError: assert (True, 'Initial stock added: 5.0 ml') is True

tests/test_inventory_comprehensive.py:280: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=2, quantity=5.0, change_type=returned, caller=tests/test_inventory_comprehensive.py:test_returned_refunded_inventory
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 2 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 2 quantity: 0.0 â†’ 5.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 2: initial_stock
________________ TestInventorySystemComprehensive.test_recount_decrease ________________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd9985262d0>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_recount_decrease(self, app, db_session, setup_test_data):
        """Test recount that decreases inventory"""
        data = setup_test_data
        item = data['ingredient']
    
        # Add initial stock
        process_inventory_adjustment(
            item_id=item.id,
            quantity=100.0,
            change_type='restock',
            created_by=data['user'].id
        )
    
        # Recount to lower amount
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=85.0,  # Target quantity, not delta
            change_type='recount',
            notes='Physical count found less',
            created_by=data['user'].id
        )
>       assert success is True
E       assert False is True

tests/test_inventory_comprehensive.py:573: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
--------------------------------- Captured stdout call ---------------------------------
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 85.0, delta: -15.0
RECOUNT: Test Ingredient - FIFO total: 100.0, target: 15.0, delta: -85.0
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_recount_decrease
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 1 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 100.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 1: initial_stock
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=tests/test_inventory_comprehensive.py:test_recount_decrease
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 85.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 100.0 to 15.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=85.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
ERROR    app.services.inventory_adjustment._core:_core.py:91 Error in process_inventory_adjustment: maximum recursion depth exceeded while calling a Python object
________________ TestInventorySystemComprehensive.test_recount_to_zero _________________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd998526a10>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_recount_to_zero(self, app, db_session, setup_test_data):
        """Test recount to zero inventory"""
        data = setup_test_data
        item = data['ingredient']
    
        # Add initial stock
        process_inventory_adjustment(
            item_id=item.id,
            quantity=50.0,
            change_type='restock',
            created_by=data['user'].id
        )
    
        # Recount to zero
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=0.0,
            change_type='recount',
            notes='All inventory missing',
            created_by=data['user'].id
        )
        assert success is True
    
        db_session.refresh(item)
>       assert item.quantity == 0.0
E       assert 50.0 == 0.0
E        +  where 50.0 = <InventoryItem 1>.quantity

tests/test_inventory_comprehensive.py:602: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
--------------------------------- Captured stdout call ---------------------------------
RECOUNT: Test Ingredient - FIFO total: 50.0, target: 0.0, delta: -50.0
RECOUNT: Test Ingredient - FIFO total: 50.0, target: 50.0, delta: 0.0
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=50.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_recount_to_zero
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 1 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 50.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 1: initial_stock
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=0.0, change_type=recount, caller=tests/test_inventory_comprehensive.py:test_recount_to_zero
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 50.0 to 0.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=50.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 50.0 to 50.0
_________________ TestInventorySystemComprehensive.test_cost_override __________________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd998527150>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_cost_override(self, app, db_session, setup_test_data):
        """Test cost override functionality"""
        data = setup_test_data
        item = data['ingredient']
    
        original_cost = item.cost_per_unit
        new_cost = 2.75
    
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=0,  # No quantity change
            change_type='cost_override',
            cost_override=new_cost,
            notes='Updated supplier pricing',
            created_by=data['user'].id
        )
>       assert success is True
E       AssertionError: assert (True, 'Item initialized with zero stock') is True

tests/test_inventory_comprehensive.py:622: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=0, change_type=cost_override, caller=tests/test_inventory_comprehensive.py:test_cost_override
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 1 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 1: initial_stock
_____________ TestInventorySystemComprehensive.test_inventory_reservation ______________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd99852ce90>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_inventory_reservation(self, app, db_session, setup_test_data):
        """Test inventory reservation functionality"""
        data = setup_test_data
        item = data['product']
    
        # Add stock
        process_inventory_adjustment(
            item_id=item.id,
            quantity=100.0,
            change_type='finished_batch',
            created_by=data['user'].id
        )
    
        # Reserve inventory
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=25.0,
            change_type='reserved',
            notes='Reserved for order #456',
            order_id='ORD-456',
            created_by=data['user'].id
        )
        assert success is True
    
        # Unreserve inventory
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=5.0,
            change_type='unreserved',
            notes='Partial order cancellation',
            created_by=data['user'].id
        )
        assert success is True
    
        db_session.refresh(item)
>       assert item.quantity == 80.0  # 100 - 25 + 5
E       assert 70.0 == 80.0
E        +  where 70.0 = <InventoryItem 2>.quantity

tests/test_inventory_comprehensive.py:755: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=2, quantity=100.0, change_type=finished_batch, caller=tests/test_inventory_comprehensive.py:test_inventory_reservation
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 2 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 2 quantity: 0.0 â†’ 100.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 2: initial_stock
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=2, quantity=25.0, change_type=reserved, caller=tests/test_inventory_comprehensive.py:test_inventory_reservation
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 2: (builtins.ValueError) could not convert string to float: 'Reserved for order #456'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'organization_id': 2, 'timestamp': datetime.datetime(2025, 8, 21, 2, 9, 57, 49707), 'change_type': 'reserved', 'inventory_item_id': 2, 'quantity_chan ... (523 characters truncated) ...  'batch_number': None, 'created_by': None, 'used_for_batch_id': None, 'sale_location': None, 'fifo_source': None, 'batch_id': None, 'unit_cost': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=2, quantity=5.0, change_type=unreserved, caller=tests/test_inventory_comprehensive.py:test_inventory_reservation
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 2: (builtins.ValueError) could not convert string to float: 'Partial order cancellation'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'organization_id': 2, 'timestamp': datetime.datetime(2025, 8, 21, 2, 9, 57, 111104), 'change_type': 'unreserved', 'inventory_item_id': 2, 'quantity_c ... (528 characters truncated) ...  'batch_number': None, 'created_by': None, 'used_for_batch_id': None, 'sale_location': None, 'fifo_source': None, 'batch_id': None, 'unit_cost': None}]]
____________ TestInventorySystemComprehensive.test_audit_trail_completeness ____________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd99852dd10>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_audit_trail_completeness(self, app, db_session, setup_test_data):
        """Test that all operations create proper audit trails"""
        data = setup_test_data
        item = data['ingredient']
    
        # Perform operation
        process_inventory_adjustment(
            item_id=item.id,
            quantity=75.0,
            change_type='restock',
            notes='Audit trail test',
            created_by=data['user'].id
        )
    
        # Verify audit trail
        history_entries = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).all()
    
        assert len(history_entries) > 0
        entry = history_entries[0]
>       assert entry.change_type == 'restock'
E       AssertionError: assert 'initial_stock' == 'restock'
E         
E         - restock
E         + initial_stock

tests/test_inventory_comprehensive.py:813: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=75.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_audit_trail_completeness
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 1 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 75.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 1: initial_stock
___________ TestInventorySystemComprehensive.test_canonical_service_dispatch ___________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd99852ebd0>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_canonical_service_dispatch(self, app, db_session, setup_test_data):
        """Test that process_inventory_adjustment correctly dispatches to sub-services"""
        data = setup_test_data
        item = data['ingredient']
    
        # Test that each change type creates exactly one history entry
        change_types_to_test = [
            ('restock', 50.0),
            ('use', 25.0),
            ('spoil', 10.0),
            ('recount', 100.0),  # Target quantity for recount
        ]
    
        for change_type, quantity in change_types_to_test:
            initial_history_count = UnifiedInventoryHistory.query.filter_by(
                inventory_item_id=item.id
            ).count()
    
            success = process_inventory_adjustment(
                item_id=item.id,
                quantity=quantity,
                change_type=change_type,
                created_by=data['user'].id
            )
>           assert success is True
E           AssertionError: assert (True, 'Initial stock added: 50.0 g') is True

tests/test_inventory_comprehensive.py:868: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=50.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_canonical_service_dispatch
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 1 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 50.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 1: initial_stock
___________ TestInventorySystemComprehensive.test_unit_conversion_edge_cases ___________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd998525190>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_unit_conversion_edge_cases(self, app, db_session, setup_test_data):
        """Test unit conversion failures and edge cases"""
        data = setup_test_data
    
        # Create item without density
        item_no_density = InventoryItem(
            name="No Density Item",
            type="ingredient",
            unit="g",
            quantity=1000.0,
            cost_per_unit=1.0,
            organization_id=data['org'].id
        )
        db_session.add(item_no_density)
        db_session.commit()
    
        # Add initial stock
        process_inventory_adjustment(
            item_id=item_no_density.id,
            quantity=1000.0,
            change_type='restock',
            created_by=data['user'].id
        )
    
        # Try weight-to-volume conversion without density (should fail)
        success = process_inventory_adjustment(
            item_id=item_no_density.id,
            quantity=50.0,
            change_type='use',
            unit='ml',  # Converting from g to ml without density
            created_by=data['user'].id
        )
>       assert success is False
E       assert True is False

tests/test_inventory_comprehensive.py:913: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=4, quantity=1000.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_unit_conversion_edge_cases
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 4 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 4 quantity: 1000.0 â†’ 2000.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 4: initial_stock
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=4, quantity=50.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_unit_conversion_edge_cases
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 4: (builtins.ValueError) could not convert string to float: 'Deducted 50.0 ml'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'organization_id': 2, 'timestamp': datetime.datetime(2025, 8, 21, 2, 10, 4, 817499), 'change_type': 'use', 'inventory_item_id': 4, 'quantity_change': ... (512 characters truncated) ...  'batch_number': None, 'created_by': None, 'used_for_batch_id': None, 'sale_location': None, 'fifo_source': None, 'batch_id': None, 'unit_cost': None}]]
___________ TestInventorySystemComprehensive.test_invalid_quantity_handling ____________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd99852df50>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_invalid_quantity_handling(self, app, db_session, setup_test_data):
        """Test handling of invalid quantity values"""
        data = setup_test_data
        item = data['ingredient']
    
        # Try negative quantity for additive operation
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=-10.0,
            change_type='restock',
            created_by=data['user'].id
        )
>       assert success is True  # Should handle gracefully
E       AssertionError: assert (True, 'Initial stock added: -10.0 g') is True

tests/test_inventory_comprehensive.py:996: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=-10.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_invalid_quantity_handling
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 1 has no FIFO history, delegating to creation logic
WARNING  app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:207 Ignoring zero or negative quantity adjustment for item 1: -10.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 1: initial_stock
___________ TestInventorySystemComprehensive.test_nonexistent_item_handling ____________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd99852ef90>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_nonexistent_item_handling(self, app, db_session, setup_test_data):
        """Test handling of operations on nonexistent items"""
        data = setup_test_data
    
        success = process_inventory_adjustment(
            item_id=99999,  # Non-existent ID
            quantity=10.0,
            change_type='restock',
            created_by=data['user'].id
        )
>       assert success is False
E       AssertionError: assert (False, 'Inventory item not found') is False

tests/test_inventory_comprehensive.py:1008: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=99999, quantity=10.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_nonexistent_item_handling
ERROR    app.services.inventory_adjustment._core:_core.py:39 Inventory item not found: 99999
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[restock-100.0-50.0-150.0] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd998538ed0>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'restock', initial_qty = 100.0, adjustment_qty = 50.0
expected_final_qty = 150.0

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
        assert success is True, f"Adjustment {change_type} failed"
    
        # Check final quantity
        db_session.refresh(item)
>       assert item.quantity == expected_final_qty, f"Expected {expected_final_qty}, got {item.quantity}"
E       AssertionError: Expected 150.0, got 250.0
E       assert 250.0 == 150.0
E        +  where 250.0 = <InventoryItem 1>.quantity

tests/test_inventory_comprehensive.py:1071: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 1 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 200.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 1: initial_stock
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=50.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 200.0 â†’ 250.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Added 50.0 g'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'organization_id': 2, 'timestamp': datetime.datetime(2025, 8, 21, 2, 10, 10, 715303), 'change_type': 'restock', 'inventory_item_id': 1, 'quantity_cha ... (513 characters truncated) ...  'batch_number': None, 'created_by': None, 'used_for_batch_id': None, 'sale_location': None, 'fifo_source': None, 'batch_id': None, 'unit_cost': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[manual_addition-100.0-25.0-125.0] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd998539150>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'manual_addition', initial_qty = 100.0, adjustment_qty = 25.0
expected_final_qty = 125.0

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
        assert success is True, f"Adjustment {change_type} failed"
    
        # Check final quantity
        db_session.refresh(item)
>       assert item.quantity == expected_final_qty, f"Expected {expected_final_qty}, got {item.quantity}"
E       AssertionError: Expected 125.0, got 225.0
E       assert 225.0 == 125.0
E        +  where 225.0 = <InventoryItem 1>.quantity

tests/test_inventory_comprehensive.py:1071: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 1 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 200.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 1: initial_stock
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=25.0, change_type=manual_addition, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 200.0 â†’ 225.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Added 25.0 g'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'organization_id': 2, 'timestamp': datetime.datetime(2025, 8, 21, 2, 10, 12, 507257), 'change_type': 'manual_addition', 'inventory_item_id': 1, 'quan ... (521 characters truncated) ...  'batch_number': None, 'created_by': None, 'used_for_batch_id': None, 'sale_location': None, 'fifo_source': None, 'batch_id': None, 'unit_cost': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[returned-50.0-10.0-60.0] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd9985393d0>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'returned', initial_qty = 50.0, adjustment_qty = 10.0
expected_final_qty = 60.0

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
        assert success is True, f"Adjustment {change_type} failed"
    
        # Check final quantity
        db_session.refresh(item)
>       assert item.quantity == expected_final_qty, f"Expected {expected_final_qty}, got {item.quantity}"
E       AssertionError: Expected 60.0, got 110.0
E       assert 110.0 == 60.0
E        +  where 110.0 = <InventoryItem 1>.quantity

tests/test_inventory_comprehensive.py:1071: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=50.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 1 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 50.0 â†’ 100.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 1: initial_stock
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=returned, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 110.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Added 10.0 g'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'organization_id': 2, 'timestamp': datetime.datetime(2025, 8, 21, 2, 10, 13, 998539), 'change_type': 'returned', 'inventory_item_id': 1, 'quantity_ch ... (514 characters truncated) ...  'batch_number': None, 'created_by': None, 'used_for_batch_id': None, 'sale_location': None, 'fifo_source': None, 'batch_id': None, 'unit_cost': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[refunded-50.0-5.0-55.0] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd998539650>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'refunded', initial_qty = 50.0, adjustment_qty = 5.0
expected_final_qty = 55.0

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
        assert success is True, f"Adjustment {change_type} failed"
    
        # Check final quantity
        db_session.refresh(item)
>       assert item.quantity == expected_final_qty, f"Expected {expected_final_qty}, got {item.quantity}"
E       AssertionError: Expected 55.0, got 105.0
E       assert 105.0 == 55.0
E        +  where 105.0 = <InventoryItem 1>.quantity

tests/test_inventory_comprehensive.py:1071: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=50.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 1 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 50.0 â†’ 100.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 1: initial_stock
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=5.0, change_type=refunded, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 105.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Added 5.0 g'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'organization_id': 2, 'timestamp': datetime.datetime(2025, 8, 21, 2, 10, 15, 758649), 'change_type': 'refunded', 'inventory_item_id': 1, 'quantity_ch ... (512 characters truncated) ...  'batch_number': None, 'created_by': None, 'used_for_batch_id': None, 'sale_location': None, 'fifo_source': None, 'batch_id': None, 'unit_cost': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[finished_batch-0.0-48.0-48.0] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd9985398d0>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'finished_batch', initial_qty = 0.0, adjustment_qty = 48.0
expected_final_qty = 48.0

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
>       assert success is True, f"Adjustment {change_type} failed"
E       AssertionError: Adjustment finished_batch failed
E       assert (True, 'Initial stock added: 48.0 g') is True

tests/test_inventory_comprehensive.py:1067: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=48.0, change_type=finished_batch, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 1 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 48.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 1: initial_stock
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[use-100.0-30.0-70.0] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd998539b50>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'use', initial_qty = 100.0, adjustment_qty = 30.0
expected_final_qty = 70.0

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
        assert success is True, f"Adjustment {change_type} failed"
    
        # Check final quantity
        db_session.refresh(item)
        assert item.quantity == expected_final_qty, f"Expected {expected_final_qty}, got {item.quantity}"
    
        # Check exactly one new history entry was created
        final_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
        assert final_history_count == initial_history_count + 1
    
        # Check the history entry has correct change type
        new_history = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id,
            change_type=change_type
        ).first()
        assert new_history is not None
>       assert new_history.quantity_change == adjustment_qty
E       assert -30.0 == 30.0
E        +  where -30.0 = <UnifiedInventoryHistory 3 | Item 1 | use: -30.0>.quantity_change

tests/test_inventory_comprehensive.py:1085: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 1 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 200.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 1: initial_stock
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=30.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Deducted 30.0 g'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'organization_id': 2, 'timestamp': datetime.datetime(2025, 8, 21, 2, 10, 18, 705610), 'change_type': 'use', 'inventory_item_id': 1, 'quantity_change' ... (510 characters truncated) ...  'batch_number': None, 'created_by': None, 'used_for_batch_id': None, 'sale_location': None, 'fifo_source': None, 'batch_id': None, 'unit_cost': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[batch-100.0-25.0-75.0] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd998539dd0>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'batch', initial_qty = 100.0, adjustment_qty = 25.0
expected_final_qty = 75.0

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
        assert success is True, f"Adjustment {change_type} failed"
    
        # Check final quantity
        db_session.refresh(item)
        assert item.quantity == expected_final_qty, f"Expected {expected_final_qty}, got {item.quantity}"
    
        # Check exactly one new history entry was created
        final_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
        assert final_history_count == initial_history_count + 1
    
        # Check the history entry has correct change type
        new_history = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id,
            change_type=change_type
        ).first()
        assert new_history is not None
>       assert new_history.quantity_change == adjustment_qty
E       assert -25.0 == 25.0
E        +  where -25.0 = <UnifiedInventoryHistory 3 | Item 1 | batch: -25.0>.quantity_change

tests/test_inventory_comprehensive.py:1085: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 1 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 200.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 1: initial_stock
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=25.0, change_type=batch, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Deducted 25.0 g'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'organization_id': 2, 'timestamp': datetime.datetime(2025, 8, 21, 2, 10, 20, 427210), 'change_type': 'batch', 'inventory_item_id': 1, 'quantity_chang ... (513 characters truncated) ...  'batch_number': None, 'created_by': None, 'used_for_batch_id': None, 'sale_location': None, 'fifo_source': None, 'batch_id': None, 'unit_cost': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[sale-100.0-10.0-90.0] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd99853a050>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'sale', initial_qty = 100.0, adjustment_qty = 10.0
expected_final_qty = 90.0

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
        assert success is True, f"Adjustment {change_type} failed"
    
        # Check final quantity
        db_session.refresh(item)
        assert item.quantity == expected_final_qty, f"Expected {expected_final_qty}, got {item.quantity}"
    
        # Check exactly one new history entry was created
        final_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
        assert final_history_count == initial_history_count + 1
    
        # Check the history entry has correct change type
        new_history = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id,
            change_type=change_type
        ).first()
        assert new_history is not None
>       assert new_history.quantity_change == adjustment_qty
E       assert -10.0 == 10.0
E        +  where -10.0 = <UnifiedInventoryHistory 3 | Item 1 | sale: -10.0>.quantity_change

tests/test_inventory_comprehensive.py:1085: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 1 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 200.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 1: initial_stock
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=sale, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Deducted 10.0 g'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'organization_id': 2, 'timestamp': datetime.datetime(2025, 8, 21, 2, 10, 22, 69852), 'change_type': 'sale', 'inventory_item_id': 1, 'quantity_change' ... (511 characters truncated) ...  'batch_number': None, 'created_by': None, 'used_for_batch_id': None, 'sale_location': None, 'fifo_source': None, 'batch_id': None, 'unit_cost': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[spoil-100.0-5.0-95.0] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd99853a2d0>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'spoil', initial_qty = 100.0, adjustment_qty = 5.0
expected_final_qty = 95.0

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
        assert success is True, f"Adjustment {change_type} failed"
    
        # Check final quantity
        db_session.refresh(item)
        assert item.quantity == expected_final_qty, f"Expected {expected_final_qty}, got {item.quantity}"
    
        # Check exactly one new history entry was created
        final_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
        assert final_history_count == initial_history_count + 1
    
        # Check the history entry has correct change type
        new_history = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id,
            change_type=change_type
        ).first()
        assert new_history is not None
>       assert new_history.quantity_change == adjustment_qty
E       assert -5.0 == 5.0
E        +  where -5.0 = <UnifiedInventoryHistory 3 | Item 1 | spoil: -5.0>.quantity_change

tests/test_inventory_comprehensive.py:1085: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 1 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 200.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 1: initial_stock
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=5.0, change_type=spoil, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Deducted 5.0 g'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'organization_id': 2, 'timestamp': datetime.datetime(2025, 8, 21, 2, 10, 23, 529829), 'change_type': 'spoil', 'inventory_item_id': 1, 'quantity_chang ... (512 characters truncated) ...  'batch_number': None, 'created_by': None, 'used_for_batch_id': None, 'sale_location': None, 'fifo_source': None, 'batch_id': None, 'unit_cost': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[trash-100.0-20.0-80.0] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd99853a510>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'trash', initial_qty = 100.0, adjustment_qty = 20.0
expected_final_qty = 80.0

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
        assert success is True, f"Adjustment {change_type} failed"
    
        # Check final quantity
        db_session.refresh(item)
        assert item.quantity == expected_final_qty, f"Expected {expected_final_qty}, got {item.quantity}"
    
        # Check exactly one new history entry was created
        final_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
        assert final_history_count == initial_history_count + 1
    
        # Check the history entry has correct change type
        new_history = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id,
            change_type=change_type
        ).first()
        assert new_history is not None
>       assert new_history.quantity_change == adjustment_qty
E       assert -20.0 == 20.0
E        +  where -20.0 = <UnifiedInventoryHistory 3 | Item 1 | trash: -20.0>.quantity_change

tests/test_inventory_comprehensive.py:1085: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 1 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 200.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 1: initial_stock
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=20.0, change_type=trash, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Deducted 20.0 g'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'organization_id': 2, 'timestamp': datetime.datetime(2025, 8, 21, 2, 10, 25, 111780), 'change_type': 'trash', 'inventory_item_id': 1, 'quantity_chang ... (514 characters truncated) ...  'batch_number': None, 'created_by': None, 'used_for_batch_id': None, 'sale_location': None, 'fifo_source': None, 'batch_id': None, 'unit_cost': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[expired-100.0-15.0-85.0] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd99853a790>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'expired', initial_qty = 100.0, adjustment_qty = 15.0
expected_final_qty = 85.0

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
        assert success is True, f"Adjustment {change_type} failed"
    
        # Check final quantity
        db_session.refresh(item)
        assert item.quantity == expected_final_qty, f"Expected {expected_final_qty}, got {item.quantity}"
    
        # Check exactly one new history entry was created
        final_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
        assert final_history_count == initial_history_count + 1
    
        # Check the history entry has correct change type
        new_history = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id,
            change_type=change_type
        ).first()
        assert new_history is not None
>       assert new_history.quantity_change == adjustment_qty
E       assert -15.0 == 15.0
E        +  where -15.0 = <UnifiedInventoryHistory 3 | Item 1 | expired: -15.0>.quantity_change

tests/test_inventory_comprehensive.py:1085: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 1 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 200.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 1: initial_stock
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=15.0, change_type=expired, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Deducted 15.0 g'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'organization_id': 2, 'timestamp': datetime.datetime(2025, 8, 21, 2, 10, 26, 850006), 'change_type': 'expired', 'inventory_item_id': 1, 'quantity_cha ... (515 characters truncated) ...  'batch_number': None, 'created_by': None, 'used_for_batch_id': None, 'sale_location': None, 'fifo_source': None, 'batch_id': None, 'unit_cost': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[damaged-100.0-2.5-97.5] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd99853aa10>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'damaged', initial_qty = 100.0, adjustment_qty = 2.5
expected_final_qty = 97.5

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
        assert success is True, f"Adjustment {change_type} failed"
    
        # Check final quantity
        db_session.refresh(item)
        assert item.quantity == expected_final_qty, f"Expected {expected_final_qty}, got {item.quantity}"
    
        # Check exactly one new history entry was created
        final_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
        assert final_history_count == initial_history_count + 1
    
        # Check the history entry has correct change type
        new_history = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id,
            change_type=change_type
        ).first()
        assert new_history is not None
>       assert new_history.quantity_change == adjustment_qty
E       assert -2.5 == 2.5
E        +  where -2.5 = <UnifiedInventoryHistory 3 | Item 1 | damaged: -2.5>.quantity_change

tests/test_inventory_comprehensive.py:1085: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 1 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 200.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 1: initial_stock
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=2.5, change_type=damaged, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Deducted 2.5 g'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'organization_id': 2, 'timestamp': datetime.datetime(2025, 8, 21, 2, 10, 28, 618015), 'change_type': 'damaged', 'inventory_item_id': 1, 'quantity_cha ... (515 characters truncated) ...  'batch_number': None, 'created_by': None, 'used_for_batch_id': None, 'sale_location': None, 'fifo_source': None, 'batch_id': None, 'unit_cost': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[quality_fail-100.0-3.0-97.0] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd99853ac90>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'quality_fail', initial_qty = 100.0, adjustment_qty = 3.0
expected_final_qty = 97.0

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
        assert success is True, f"Adjustment {change_type} failed"
    
        # Check final quantity
        db_session.refresh(item)
        assert item.quantity == expected_final_qty, f"Expected {expected_final_qty}, got {item.quantity}"
    
        # Check exactly one new history entry was created
        final_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
        assert final_history_count == initial_history_count + 1
    
        # Check the history entry has correct change type
        new_history = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id,
            change_type=change_type
        ).first()
        assert new_history is not None
>       assert new_history.quantity_change == adjustment_qty
E       assert -3.0 == 3.0
E        +  where -3.0 = <UnifiedInventoryHistory 3 | Item 1 | quality_fail: -3.0>.quantity_change

tests/test_inventory_comprehensive.py:1085: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 1 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 200.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 1: initial_stock
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=3.0, change_type=quality_fail, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Deducted 3.0 g'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'organization_id': 2, 'timestamp': datetime.datetime(2025, 8, 21, 2, 10, 30, 174107), 'change_type': 'quality_fail', 'inventory_item_id': 1, 'quantit ... (519 characters truncated) ...  'batch_number': None, 'created_by': None, 'used_for_batch_id': None, 'sale_location': None, 'fifo_source': None, 'batch_id': None, 'unit_cost': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[sample-100.0-0.5-99.5] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd99853af90>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'sample', initial_qty = 100.0, adjustment_qty = 0.5
expected_final_qty = 99.5

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
        assert success is True, f"Adjustment {change_type} failed"
    
        # Check final quantity
        db_session.refresh(item)
        assert item.quantity == expected_final_qty, f"Expected {expected_final_qty}, got {item.quantity}"
    
        # Check exactly one new history entry was created
        final_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
        assert final_history_count == initial_history_count + 1
    
        # Check the history entry has correct change type
        new_history = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id,
            change_type=change_type
        ).first()
        assert new_history is not None
>       assert new_history.quantity_change == adjustment_qty
E       assert -0.5 == 0.5
E        +  where -0.5 = <UnifiedInventoryHistory 3 | Item 1 | sample: -0.5>.quantity_change

tests/test_inventory_comprehensive.py:1085: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 1 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 200.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 1: initial_stock
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=0.5, change_type=sample, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Deducted 0.5 g'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'organization_id': 2, 'timestamp': datetime.datetime(2025, 8, 21, 2, 10, 31, 771131), 'change_type': 'sample', 'inventory_item_id': 1, 'quantity_chan ... (513 characters truncated) ...  'batch_number': None, 'created_by': None, 'used_for_batch_id': None, 'sale_location': None, 'fifo_source': None, 'batch_id': None, 'unit_cost': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[tester-100.0-1.0-99.0] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd99853b290>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'tester', initial_qty = 100.0, adjustment_qty = 1.0
expected_final_qty = 99.0

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
        assert success is True, f"Adjustment {change_type} failed"
    
        # Check final quantity
        db_session.refresh(item)
        assert item.quantity == expected_final_qty, f"Expected {expected_final_qty}, got {item.quantity}"
    
        # Check exactly one new history entry was created
        final_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
        assert final_history_count == initial_history_count + 1
    
        # Check the history entry has correct change type
        new_history = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id,
            change_type=change_type
        ).first()
        assert new_history is not None
>       assert new_history.quantity_change == adjustment_qty
E       assert -1.0 == 1.0
E        +  where -1.0 = <UnifiedInventoryHistory 3 | Item 1 | tester: -1.0>.quantity_change

tests/test_inventory_comprehensive.py:1085: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 1 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 200.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 1: initial_stock
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=1.0, change_type=tester, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Deducted 1.0 g'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'organization_id': 2, 'timestamp': datetime.datetime(2025, 8, 21, 2, 10, 33, 245614), 'change_type': 'tester', 'inventory_item_id': 1, 'quantity_chan ... (513 characters truncated) ...  'batch_number': None, 'created_by': None, 'used_for_batch_id': None, 'sale_location': None, 'fifo_source': None, 'batch_id': None, 'unit_cost': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[gift-100.0-2.0-98.0] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd99853b590>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'gift', initial_qty = 100.0, adjustment_qty = 2.0
expected_final_qty = 98.0

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
        assert success is True, f"Adjustment {change_type} failed"
    
        # Check final quantity
        db_session.refresh(item)
        assert item.quantity == expected_final_qty, f"Expected {expected_final_qty}, got {item.quantity}"
    
        # Check exactly one new history entry was created
        final_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
        assert final_history_count == initial_history_count + 1
    
        # Check the history entry has correct change type
        new_history = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id,
            change_type=change_type
        ).first()
        assert new_history is not None
>       assert new_history.quantity_change == adjustment_qty
E       assert -2.0 == 2.0
E        +  where -2.0 = <UnifiedInventoryHistory 3 | Item 1 | gift: -2.0>.quantity_change

tests/test_inventory_comprehensive.py:1085: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 1 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 200.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 1: initial_stock
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=2.0, change_type=gift, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Deducted 2.0 g'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'organization_id': 2, 'timestamp': datetime.datetime(2025, 8, 21, 2, 10, 34, 737843), 'change_type': 'gift', 'inventory_item_id': 1, 'quantity_change ... (511 characters truncated) ...  'batch_number': None, 'created_by': None, 'used_for_batch_id': None, 'sale_location': None, 'fifo_source': None, 'batch_id': None, 'unit_cost': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[reserved-100.0-25.0-75.0] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd99853b890>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'reserved', initial_qty = 100.0, adjustment_qty = 25.0
expected_final_qty = 75.0

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
        assert success is True, f"Adjustment {change_type} failed"
    
        # Check final quantity
        db_session.refresh(item)
        assert item.quantity == expected_final_qty, f"Expected {expected_final_qty}, got {item.quantity}"
    
        # Check exactly one new history entry was created
        final_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
        assert final_history_count == initial_history_count + 1
    
        # Check the history entry has correct change type
        new_history = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id,
            change_type=change_type
        ).first()
        assert new_history is not None
>       assert new_history.quantity_change == adjustment_qty
E       assert -25.0 == 25.0
E        +  where -25.0 = <UnifiedInventoryHistory 3 | Item 1 | reserved: -25.0>.quantity_change

tests/test_inventory_comprehensive.py:1085: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 1 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 200.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 1: initial_stock
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=25.0, change_type=reserved, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Deducted 25.0 g'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'organization_id': 2, 'timestamp': datetime.datetime(2025, 8, 21, 2, 10, 36, 483048), 'change_type': 'reserved', 'inventory_item_id': 1, 'quantity_ch ... (516 characters truncated) ...  'batch_number': None, 'created_by': None, 'used_for_batch_id': None, 'sale_location': None, 'fifo_source': None, 'batch_id': None, 'unit_cost': None}]]
________ TestInventorySystemComprehensive.test_complex_multi_operation_scenario ________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd99853bfd0>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_complex_multi_operation_scenario(self, app, db_session, setup_test_data):
        """Test complex scenario with multiple operation types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Initial restock
        process_inventory_adjustment(
            item_id=item.id,
            quantity=1000.0,
            change_type='restock',
            cost_override=1.0,
            created_by=data['user'].id
        )
    
        # Use in batches
        process_inventory_adjustment(
            item_id=item.id,
            quantity=250.0,
            change_type='batch',
            batch_id=1,
            created_by=data['user'].id
        )
    
        # Record spoilage
        process_inventory_adjustment(
            item_id=item.id,
            quantity=50.0,
            change_type='spoil',
            created_by=data['user'].id
        )
    
        # Add more stock at different cost
        process_inventory_adjustment(
            item_id=item.id,
            quantity=200.0,
            change_type='restock',
            cost_override=1.25,
            created_by=data['user'].id
        )
    
        # Recount adjustment
        process_inventory_adjustment(
            item_id=item.id,
            quantity=890.0,  # Target quantity
            change_type='recount',
            created_by=data['user'].id
        )
    
        # Final validation
        db_session.refresh(item)
        is_valid, error, inventory_qty, fifo_total = validate_inventory_fifo_sync(item.id)
        assert is_valid is True
>       assert inventory_qty == 890.0
E       assert 900.0 == 890.0

tests/test_inventory_comprehensive.py:1141: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
--------------------------------- Captured stdout call ---------------------------------
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 890.0, delta: -10.0
RECOUNT: Test Ingredient - FIFO total: 900.0, target: 10.0, delta: -890.0
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=1000.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_complex_multi_operation_scenario
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 1 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 1000.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 1: initial_stock
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=250.0, change_type=batch, caller=tests/test_inventory_comprehensive.py:test_complex_multi_operation_scenario
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Deducted 250.0 g'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'organization_id': 2, 'timestamp': datetime.datetime(2025, 8, 21, 2, 10, 38, 31547), 'change_type': 'batch', 'inventory_item_id': 1, 'quantity_change ... (514 characters truncated) ...  'batch_number': None, 'created_by': None, 'used_for_batch_id': None, 'sale_location': None, 'fifo_source': None, 'batch_id': None, 'unit_cost': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=50.0, change_type=spoil, caller=tests/test_inventory_comprehensive.py:test_complex_multi_operation_scenario
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Deducted 50.0 g'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'organization_id': 2, 'timestamp': datetime.datetime(2025, 8, 21, 2, 10, 38, 114537), 'change_type': 'spoil', 'inventory_item_id': 1, 'quantity_chang ... (513 characters truncated) ...  'batch_number': None, 'created_by': None, 'used_for_batch_id': None, 'sale_location': None, 'fifo_source': None, 'batch_id': None, 'unit_cost': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=200.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_complex_multi_operation_scenario
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 700.0 â†’ 900.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Added 200.0 g'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'organization_id': 2, 'timestamp': datetime.datetime(2025, 8, 21, 2, 10, 38, 216335), 'change_type': 'restock', 'inventory_item_id': 1, 'quantity_cha ... (513 characters truncated) ...  'batch_number': None, 'created_by': None, 'used_for_batch_id': None, 'sale_location': None, 'fifo_source': None, 'batch_id': None, 'unit_cost': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=tests/test_inventory_comprehensive.py:test_complex_multi_operation_scenario
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 890.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=10.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
INFO     app.services.inventory_adjustment._core:_core.py:53 RECOUNT: Processing recount from 900.0 to 10.0
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=890.0, change_type=recount, caller=app/services/inventory_adjustment/_recount_logic.py:handle_recount_adjustment
ERROR    app.services.inventory_adjustment._core:_core.py:91 Error in process_inventory_adjustment: maximum recursion depth exceeded while calling a Python object
________ TestInventorySystemComprehensive.test_item_update_with_quantity_change ________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fd998544e90>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fd998cb8f10>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_item_update_with_quantity_change(self, app, db_session, setup_test_data):
        """Test updating item details with quantity changes"""
        data = setup_test_data
        item = data['ingredient']
    
        # Add initial stock
        process_inventory_adjustment(
            item_id=item.id,
            quantity=100.0,
            change_type='restock',
            created_by=data['user'].id
        )
    
        # Update item with quantity change
        form_data = {
            'name': 'Updated Ingredient Name',
            'unit': 'kg',
            'quantity': 150.0,  # Increase quantity
            'cost_per_unit': 1.75
        }
    
        success, message = update_inventory_item(item.id, form_data)
>       assert success is True
E       assert False is True

tests/test_inventory_comprehensive.py:1198: AssertionError
-------------------------------- Captured stdout setup ---------------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
---------------------------------- Captured log setup ----------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_item_update_with_quantity_change
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 1 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 100.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 1: initial_stock
ERROR    root:_edit_logic.py:145 Error updating inventory item 1: 'NoneType' object has no attribute 'is_authenticated'
=================================== warnings summary ===================================
tests/test_inventory_comprehensive.py: 50 warnings
  /home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask_limiter/extension.py:333: UserWarning: Using the in-memory storage for tracking rate limits as no storage was explicitly specified. This is not recommended for production use. See: https://flask-limiter.readthedocs.io#configuring-a-storage-backend for documentation about configuring the storage backend.
    warnings.warn(

tests/test_inventory_comprehensive.py: 140 warnings
  /home/runner/workspace/app/services/inventory_adjustment/_audit.py:77: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    item = InventoryItem.query.get(item_id)

tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_create_ingredient_with_initial_stock
  /home/runner/workspace/tests/test_inventory_comprehensive.py:130: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    item = InventoryItem.query.get(item_id)

tests/test_inventory_comprehensive.py: 50 warnings
  /home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask_sqlalchemy/extension.py:881: SAWarning: Can't sort tables for DROP; an unresolvable foreign key dependency exists between tables: batch, product_sku; and backend does not support ALTER.  To restore at least a partial sort, apply use_alter=True to ForeignKey and ForeignKeyConstraint objects involved in the cycle to mark these as known cycles that will be ignored.
    getattr(metadata, op_name)(bind=engine)

tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_create_product_zero_initial_stock
  /home/runner/workspace/tests/test_inventory_comprehensive.py:160: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    item = InventoryItem.query.get(item_id)

tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_create_container_with_storage_specs
  /home/runner/workspace/tests/test_inventory_comprehensive.py:181: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    item = InventoryItem.query.get(item_id)

tests/test_inventory_comprehensive.py: 935 warnings
  /home/runner/workspace/app/services/inventory_adjustment/_recount_logic.py:20: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    item = InventoryItem.query.get(item_id)

tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_perishable_item_expiration_tracking
  /home/runner/workspace/tests/test_inventory_comprehensive.py:680: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    item = InventoryItem.query.get(item_id)

tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_inventory_fifo_sync_validation
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_complex_multi_operation_scenario
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_high_volume_operations
  /home/runner/workspace/app/services/inventory_adjustment/_validation.py:8: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    item = InventoryItem.query.get(item_id)

tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_item_update_with_quantity_change
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_perishable_status_change
  /home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask_sqlalchemy/query.py:30: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    rv = self.get(ident)

tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_perishable_status_change
  /home/runner/workspace/app/blueprints/expiration/services.py:384: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    item = InventoryItem.query.get(inventory_item_id)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=============================== short test summary info ================================
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_restock_operation - AssertionError: assert (True, 'Initial stock added: 100.0 g') is True
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_manual_addition - AssertionError: assert (True, 'Initial stock added: 25.0 ml') is True
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_finished_batch_addition - AssertionError: assert (True, 'Initial stock added: 48.0 ml') is True
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_returned_refunded_inventory - AssertionError: assert (True, 'Initial stock added: 5.0 ml') is True
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_recount_decrease - assert False is True
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_recount_to_zero - assert 50.0 == 0.0
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_cost_override - AssertionError: assert (True, 'Item initialized with zero stock') is True
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_inventory_reservation - assert 70.0 == 80.0
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_audit_trail_completeness - AssertionError: assert 'initial_stock' == 'restock'
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_canonical_service_dispatch - AssertionError: assert (True, 'Initial stock added: 50.0 g') is True
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_unit_conversion_edge_cases - assert True is False
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_invalid_quantity_handling - AssertionError: assert (True, 'Initial stock added: -10.0 g') is True
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_nonexistent_item_handling - AssertionError: assert (False, 'Inventory item not found') is False
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[restock-100.0-50.0-150.0] - AssertionError: Expected 150.0, got 250.0
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[manual_addition-100.0-25.0-125.0] - AssertionError: Expected 125.0, got 225.0
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[returned-50.0-10.0-60.0] - AssertionError: Expected 60.0, got 110.0
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[refunded-50.0-5.0-55.0] - AssertionError: Expected 55.0, got 105.0
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[finished_batch-0.0-48.0-48.0] - AssertionError: Adjustment finished_batch failed
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[use-100.0-30.0-70.0] - assert -30.0 == 30.0
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[batch-100.0-25.0-75.0] - assert -25.0 == 25.0
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[sale-100.0-10.0-90.0] - assert -10.0 == 10.0
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[spoil-100.0-5.0-95.0] - assert -5.0 == 5.0
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[trash-100.0-20.0-80.0] - assert -20.0 == 20.0
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[expired-100.0-15.0-85.0] - assert -15.0 == 15.0
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[damaged-100.0-2.5-97.5] - assert -2.5 == 2.5
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[quality_fail-100.0-3.0-97.0] - assert -3.0 == 3.0
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[sample-100.0-0.5-99.5] - assert -0.5 == 0.5
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[tester-100.0-1.0-99.0] - assert -1.0 == 1.0
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[gift-100.0-2.0-98.0] - assert -2.0 == 2.0
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[reserved-100.0-25.0-75.0] - assert -25.0 == 25.0
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_complex_multi_operation_scenario - assert 900.0 == 890.0
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_item_update_with_quantity_change - assert False is True
=============== 32 failed, 18 passed, 1185 warnings in 238.66s (0:03:58) ===============
