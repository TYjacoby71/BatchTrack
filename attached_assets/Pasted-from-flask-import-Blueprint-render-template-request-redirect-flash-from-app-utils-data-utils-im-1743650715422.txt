from flask import Blueprint, render_template, request, redirect, flash
from app.utils.data_utils import load_data, save_data
from datetime import datetime

batch_bp = Blueprint('batch_bp', __name__)

@batch_bp.route('/batches/finish/<batch_id>', methods=['GET', 'POST'])
def finish_batch(batch_id):
    data = load_data()
    batches = data.get("batches", [])
    ingredients = data.get("ingredients", [])

    batch = next((b for b in batches if b["id"] == batch_id), None)
    if not batch:
        flash("Batch not found.")
        return redirect("/batches")

    if request.method == 'POST':
        used_ingredients = request.form.getlist("ingredient_name[]")
        used_quantities = request.form.getlist("quantity_used[]")

        updates = []
        for name, qty_str in zip(used_ingredients, used_quantities):
            try:
                qty = float(qty_str)
            except ValueError:
                flash(f"Invalid quantity for {name}.")
                continue

            ingredient = next((i for i in ingredients if i["name"] == name), None)
            if ingredient:
                original_qty = float(ingredient.get("quantity", 0))
                new_qty = original_qty - qty
                ingredient["quantity"] = new_qty
                updates.append({
                    "name": name,
                    "change": -qty,
                    "unit": ingredient.get("unit", ""),
                    "reason": "Batch Finish Adjustment",
                    "timestamp": datetime.now().isoformat()
                })

        data.setdefault("inventory_log", []).extend(updates)
        save_data(data)

        batch["status"] = "Finished"
        batch["finished_at"] = datetime.now().isoformat()
        save_data(data)

        flash("Batch marked as finished and inventory updated.")
        return redirect("/batches")

    # For GET: Show batch details and editable ingredient usage
    recipe_ingredients = batch.get("ingredients", [])
    return render_template("finish_batch.html", batch=batch, recipe_ingredients=recipe_ingredients)
