{% extends 'layout.html' %}
{% block content %}
<h2>Batch In Progress: {{ batch.recipe_name }}</h2>

<form id="batchForm">
  <input type="hidden" name="batch_id" value="{{ batch.id }}">

  <div class="mb-3">
    <label>Notes</label>
    <textarea name="notes" class="form-control">{{ batch.notes }}</textarea>
  </div>

  <div class="mb-3">
    <label>Tags (comma separated)</label>
    <input name="tags" class="form-control" value="{{ batch.tags }}">
  </div>

  {% if batch.batch_type == 'ingredient' %}
  <div class="mb-3">
    <label>Yield</label>
    <input name="yield_amount" type="number" step="0.01" value="{{ batch.yield_amount }}">
    <input name="yield_unit" value="{{ batch.yield_unit }}">
  </div>
  {% elif batch.batch_type == 'product' %}
  <div class="mb-3">
    <label>Final Quantity</label>
    <input name="final_quantity" type="number" value="{{ batch.final_quantity }}">
    <input name="output_unit" value="{{ batch.output_unit }}">
  </div>
  {% endif %}

  <div class="mt-4">
    <button type="button" class="btn btn-success" onclick="saveBatch()">Save & Exit</button>
    <form method="POST" action="/batch/{{ batch.id }}/finish" class="d-inline">
      <button class="btn btn-primary">Finish Batch</button>
    </form>
    <form method="POST" action="/batch/{{ batch.id }}/cancel" class="d-inline" onsubmit="return confirm('Cancel this batch? Ingredients will be restored.')">
      <button class="btn btn-warning">Cancel Batch</button>
    </form>
    <form method="POST" action="/batch/{{ batch.id }}/fail" class="d-inline" onsubmit="return confirm('Mark this batch as failed? Ingredients will stay deducted.')">
      <button class="btn btn-danger">Mark as Failed</button>
    </form>
  </div>
</form>

<script>
function saveBatch() {
  const form = document.getElementById("batchForm")
  const formData = new FormData(form);

  const data = {
    notes: formData.get("notes"),
    tags: formData.get("tags"),
    yield_amount: formData.get("yield_amount"),
    yield_unit: formData.get("yield_unit"),
    final_quantity: formData.get("final_quantity"),
    output_unit: formData.get("output_unit"),
    ingredients: [],
    containers: []
  };

  // TODO: Gather actual ingredient and container data if on page

  fetch(`/batch/${formData.get("batch_id")}/save`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify(data)
  }).then(resp => resp.json()).then(json => {
    alert(json.message || 'Saved.');
    window.location.href = '/batches';
  });
}
</script>
{% endblock %}
