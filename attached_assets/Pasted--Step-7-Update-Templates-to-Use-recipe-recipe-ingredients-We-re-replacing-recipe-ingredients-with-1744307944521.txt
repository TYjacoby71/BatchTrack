✅ Step 7 — Update Templates to Use recipe.recipe_ingredients
We’re replacing recipe.ingredients with recipe.recipe_ingredients throughout the app. This step updates the view_recipe.html and plan_production.html templates.

📢 Replit, do exactly this. Keep all formatting and layout the same. Only change the loops to use the new association model.

📄 7.1 — templates/view_recipe.html
🔁 Replace the old loop:
Before:

html
Copy
Edit
<ul>
    {% for ing in recipe.ingredients %}
    <li>{{ ing.name }}</li>
    {% endfor %}
</ul>
After:

html
Copy
Edit
<ul>
    {% for assoc in recipe.recipe_ingredients %}
    <li>{{ assoc.ingredient.name }}: {{ assoc.amount }} {{ assoc.unit }}</li>
    {% endfor %}
</ul>
📄 7.2 — templates/plan_production.html
🔁 Update the start batch form to use JSON, not POST:
Before:

html
Copy
Edit
<form action="{{ url_for('batches.start_batch_api') }}" method="POST" id="startBatchForm">
    <input type="hidden" name="recipe_id" value="{{ recipe.id }}">
    <input type="hidden" name="scale" value="{{ scale }}">
    <button type="submit" class="btn btn-success">Start Batch</button>
</form>
After:

html
Copy
Edit
<form id="startBatchForm">
    <button type="submit" class="btn btn-success">Start Batch</button>
</form>
<script>
    document.getElementById('startBatchForm').addEventListener('submit', function(e) {
        e.preventDefault();
        fetch('{{ url_for("batches.start_batch_api") }}', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                recipe_id: {{ recipe.id }},
                scale: {{ scale }}
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.error) {
                alert('Error: ' + data.error);
            } else {
                window.location.href = '{{ url_for("batches.view_batch_in_progress") }}/' + data.batch_id;
            }
        });
    });
</script>
✅ Let me know when this is done, and I’ll hand you Step 8,