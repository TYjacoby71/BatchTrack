============================= test session starts ==============================
platform linux -- Python 3.11.13, pytest-8.3.5, pluggy-1.5.0 -- /home/runner/workspace/.pythonlibs/bin/python
cachedir: .pytest_cache
rootdir: /home/runner/workspace
collected 49 items                                                                     

tests/test_audit_canonicalization.py::test_api_reservation_routes_uses_canonical_audit FAILED [  2%]
tests/test_audit_canonicalization.py::test_products_routes_uses_canonical_audit PASSED [  4%]
tests/test_auth_permissions.py::TestAuthPermissions::test_permission_required_decorator_allows_with_permission PASSED [  6%]
tests/test_auth_permissions.py::TestAuthPermissions::test_permission_required_returns_json_for_api PASSED [  8%]
tests/test_auth_permissions.py::TestAuthPermissions::test_any_permission_required_decorator PASSED [ 10%]
tests/test_auth_permissions.py::TestAuthPermissions::test_tier_required_decorator PASSED [ 12%]
tests/test_auth_permissions.py::TestAuthPermissions::test_user_has_any_permission_method PASSED [ 14%]
tests/test_auth_permissions.py::TestAuthPermissions::test_api_unauth_returns_json_401 PASSED [ 16%]
tests/test_auth_permissions.py::TestAuthPermissions::test_web_unauth_redirects_to_login PASSED [ 18%]
tests/test_auth_permissions.py::TestAuthPermissions::test_csrf_token_available_in_templates PASSED [ 20%]
tests/test_billing_and_tier_enforcement.py::TestBillingAndTierEnforcement::test_tier_permission_is_the_hard_ceiling PASSED [ 22%]
tests/test_billing_and_tier_enforcement.py::TestBillingAndTierEnforcement::test_billing_status_enforcement[active-200] PASSED [ 24%]
tests/test_billing_and_tier_enforcement.py::TestBillingAndTierEnforcement::test_billing_status_enforcement[past_due-302] PASSED [ 26%]
tests/test_billing_and_tier_enforcement.py::TestBillingAndTierEnforcement::test_billing_status_enforcement[suspended-302] PASSED [ 28%]
tests/test_billing_and_tier_enforcement.py::TestBillingAndTierEnforcement::test_billing_status_enforcement[canceled-302] PASSED [ 30%]
tests/test_billing_and_tier_enforcement.py::TestBillingAndTierEnforcement::test_developer_can_masquerade_regardless_of_billing PASSED [ 32%]
tests/test_billing_and_tier_enforcement.py::TestBillingAndTierEnforcement::test_complete_security_cascade PASSED [ 34%]
tests/test_expiration_canonicalization.py::test_expiration_service_uses_canonical_adjustment PASSED [ 36%]
tests/test_expiration_canonicalization.py::TestExpirationCanonicalService::test_mark_fifo_expired_calls_canonical_service PASSED [ 38%]
tests/test_expiration_canonicalization.py::TestExpirationCanonicalService::test_mark_product_expired_calls_canonical_service PASSED [ 40%]
tests/test_google_oauth.py::TestGoogleOAuthCharacterization::test_oauth_service_exists PASSED [ 42%]
tests/test_google_oauth.py::TestGoogleOAuthCharacterization::test_auth_login_endpoint_exists PASSED [ 44%]
tests/test_google_oauth.py::TestGoogleOAuthCharacterization::test_auth_callback_endpoint_exists PASSED [ 46%]
tests/test_google_oauth.py::TestGoogleOAuthCharacterization::test_oauth_state_validation_path PASSED [ 48%]
tests/test_google_oauth.py::TestGoogleOAuthCharacterization::test_oauth_service_methods_exist PASSED [ 51%]
tests/test_google_oauth.py::TestGoogleOAuthCharacterization::test_oauth_configuration_status PASSED [ 53%]
tests/test_google_oauth.py::TestGoogleOAuthCharacterization::test_oauth_callback_invalid_state PASSED [ 55%]
tests/test_inventory_fifo.py::TestInventoryFIFOCharacterization::test_single_entry_point_exists PASSED [ 57%]
tests/test_inventory_fifo.py::TestInventoryFIFOCharacterization::test_fifo_deduction_order FAILED [ 59%]
tests/test_inventory_fifo.py::TestInventoryFIFOCharacterization::test_inventory_adjustment_delegates_properly PASSED [ 61%]
tests/test_inventory_routes_canonicalization.py::TestInventoryRoutesCanonicalService::test_adjust_inventory_initial_stock_calls_canonical_service PASSED [ 63%]
tests/test_inventory_routes_canonicalization.py::test_recount_adjustment_uses_canonical_service PASSED [ 65%]
tests/test_pos_integration_canonicalization.py::test_pos_sale_uses_canonical_service PASSED [ 67%]
tests/test_pos_integration_canonicalization.py::TestPOSIntegrationCanonicalService::test_reserve_inventory_calls_canonical_service PASSED [ 69%]
tests/test_product_sku.py::TestProductSKUCharacterization::test_product_creation_flow PASSED [ 71%]
tests/test_product_sku.py::TestProductSKUCharacterization::test_sku_generation_constraints PASSED [ 73%]
tests/test_product_sku.py::TestProductSKUCharacterization::test_product_service_exists PASSED [ 75%]
tests/test_product_sku.py::TestProductSKUCharacterization::test_sku_creation_validation PASSED [ 77%]
tests/test_reservation_canonicalization.py::test_credit_specific_lot_called_on_reservation_release PASSED [ 79%]
tests/test_reservation_canonicalization.py::test_record_audit_entry_called_for_unreserved_audit PASSED [ 81%]
tests/test_signup_tiers.py::TestSignupTierCharacterization::test_signup_endpoint_exists PASSED [ 83%]
tests/test_signup_tiers.py::TestSignupTierCharacterization::test_tier_bypass_behavior PASSED [ 85%]
tests/test_signup_tiers.py::TestSignupTierCharacterization::test_organization_tier_assignment PASSED [ 87%]
tests/test_signup_tiers.py::TestSignupTierCharacterization::test_permission_gating_exists PASSED [ 89%]
tests/test_signup_tiers.py::TestSignupTierCharacterization::test_signup_service_delegation PASSED [ 91%]
tests/test_stripe_webhooks.py::TestStripeWebhookCharacterization::test_stripe_service_exists PASSED [ 93%]
tests/test_stripe_webhooks.py::TestStripeWebhookCharacterization::test_webhook_signature_verification_path_exists PASSED [ 95%]
tests/test_stripe_webhooks.py::TestStripeWebhookCharacterization::test_webhook_idempotency_behavior PASSED [ 97%]
tests/test_stripe_webhooks.py::TestStripeWebhookCharacterization::test_stripe_service_methods_exist PASSED [100%]

======================================= FAILURES =======================================
___________________ test_api_reservation_routes_uses_canonical_audit ___________________

app = <Flask 'app'>

    def test_api_reservation_routes_uses_canonical_audit(app):
        """Test that API reservation routes use canonical audit helper"""
        with app.app_context():
            with patch('app.services.inventory_adjustment.record_audit_entry') as mock_audit:
    
                # Mock the route function that writes audit entries
>               from app.blueprints.api.reservation_routes import _write_unreserved_audit

tests/test_audit_canonicalization.py:12: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
app/blueprints/api/__init__.py:2: in <module>
    from .routes import api_bp
app/blueprints/api/routes.py:69: in <module>
    from .stock_routes import stock_api_bp
app/blueprints/api/stock_routes.py:3: in <module>
    from ...services.stock_check.core import UniversalStockCheckService
app/services/stock_check/__init__.py:9: in <module>
    from .core import UniversalStockCheckService
app/services/stock_check/core.py:13: in <module>
    from .handlers import IngredientHandler, ContainerHandler, ProductHandler
app/services/stock_check/handlers/__init__.py:6: in <module>
    from .ingredient_handler import IngredientHandler
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """
    Ingredient-specific stock checking handler
    """
    
    import logging
    from typing import Optional
    
    from ...models import InventoryItem
E   ModuleNotFoundError: No module named 'app.services.models'

app/services/stock_check/handlers/ingredient_handler.py:9: ModuleNotFoundError
---------------------------------- Captured log setup ----------------------------------
WARNING  app.blueprints_registry:blueprints_registry.py:12 Public API registration failed: No module named 'app.services.models'
WARNING  app.blueprints_registry:blueprints_registry.py:36 Failed to register recipes_bp from app.blueprints.recipes.routes: cannot import name 'check_organization_access' from 'app.utils.authorization' (/home/runner/workspace/app/utils/authorization.py)
WARNING  app.blueprints_registry:blueprints_registry.py:55 Failed to register app_routes_bp from app.routes.app_routes: No module named 'app.services.models'
WARNING  app.blueprints_registry:blueprints_registry.py:55 Failed to register api_bp from app.blueprints.api.routes: No module named 'app.services.models'
WARNING  app.blueprints_registry:blueprints_registry.py:91 Product blueprints failed: No module named 'app.services.models'
WARNING  app.blueprints_registry:blueprints_registry.py:117 API blueprints failed: No module named 'app.services.models'
INFO     app:unit_utils.py:28 BatchTrack startup
_____________ TestInventoryFIFOCharacterization.test_fifo_deduction_order ______________

self = <tests.test_inventory_fifo.TestInventoryFIFOCharacterization object at 0x7f48fd64e950>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7f48fe3a52d0>
test_user = <User testuser_1755645582938373>, test_org = <Organization 3>

    def test_fifo_deduction_order(self, app, db_session, test_user, test_org):
        """Test FIFO deduction follows first-in-first-out order."""
        with app.test_request_context():
            login_user(test_user)
    
            # Create inventory item
            item = InventoryItem(
                name="Test Ingredient",
                type="ingredient",
                unit="g",
                quantity=0.0,
                organization_id=test_org.id,
                created_by=test_user.id
            )
            db_session.add(item)
            db_session.flush()
    
            # Add stock in layers (oldest first)
            assert process_inventory_adjustment(
                item_id=item.id,
                quantity=100.0,
                change_type="restock",
                notes="First batch",
                created_by=test_user.id
            )
    
            assert process_inventory_adjustment(
                item_id=item.id,
                quantity=50.0,
                change_type="restock",
                notes="Second batch",
                created_by=test_user.id
            )
    
            # Verify total
            db_session.refresh(item)
            assert item.quantity == 150.0
    
            # Deduct and verify FIFO order
            assert process_inventory_adjustment(
                item_id=item.id,
                quantity=-75.0,
                change_type="batch",
                notes="FIFO test deduction",
                created_by=test_user.id
            )
    
            # Verify available quantity matches
>           from app.services.stock_check import check_stock_availability

tests/test_inventory_fifo.py:63: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
app/services/stock_check/__init__.py:9: in <module>
    from .core import UniversalStockCheckService
app/services/stock_check/core.py:13: in <module>
    from .handlers import IngredientHandler, ContainerHandler, ProductHandler
app/services/stock_check/handlers/__init__.py:6: in <module>
    from .ingredient_handler import IngredientHandler
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """
    Ingredient-specific stock checking handler
    """
    
    import logging
    from typing import Optional
    
    from ...models import InventoryItem
E   ModuleNotFoundError: No module named 'app.services.models'

app/services/stock_check/handlers/ingredient_handler.py:9: ModuleNotFoundError
---------------------------------- Captured log setup ----------------------------------
WARNING  app.blueprints_registry:blueprints_registry.py:12 Public API registration failed: No module named 'app.services.models'
WARNING  app.blueprints_registry:blueprints_registry.py:36 Failed to register recipes_bp from app.blueprints.recipes.routes: cannot import name 'check_organization_access' from 'app.utils.authorization' (/home/runner/workspace/app/utils/authorization.py)
WARNING  app.blueprints_registry:blueprints_registry.py:55 Failed to register app_routes_bp from app.routes.app_routes: No module named 'app.services.models'
WARNING  app.blueprints_registry:blueprints_registry.py:55 Failed to register api_bp from app.blueprints.api.routes: No module named 'app.services.models'
WARNING  app.blueprints_registry:blueprints_registry.py:91 Product blueprints failed: No module named 'app.services.models'
WARNING  app.blueprints_registry:blueprints_registry.py:117 API blueprints failed: No module named 'app.services.models'
INFO     app.blueprints_registry:blueprints_registry.py:123 Blueprint 'billing' registered successfully.
INFO     app:unit_utils.py:28 BatchTrack startup
---------------------------------- Captured log call -----------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_fifo.py:test_fifo_deduction_order
INFO     app.services.inventory_adjustment._core:_core.py:46 INITIAL STOCK: Detected item 1 has no FIFO history, delegating to creation logic
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 0.0 → 100.0
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 1: initial_stock
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=50.0, change_type=restock, caller=tests/test_inventory_fifo.py:test_fifo_deduction_order
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:237 FIFO: Updating inventory item 1 quantity: 100.0 → 150.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Second batch'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'quantity_change': 'Second batch', 'timestamp': datetime.datetime(2025, 8, 19, 23, 19, 43, 113273), 'remaining_quantity': 0.0, 'inventor ... (514 characters truncated) ... one, 'used_for_batch_id': None, 'marketplace_order_id': None, 'notes': None, 'fifo_reference_id': None, 'order_id': None, 'temperature_at_time': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:33 CANONICAL INVENTORY ADJUSTMENT: item_id=1, quantity=-75.0, change_type=batch, caller=tests/test_inventory_fifo.py:test_fifo_deduction_order
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'FIFO test deduction'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'quantity_change': 'FIFO test deduction', 'timestamp': datetime.datetime(2025, 8, 19, 23, 19, 43, 173629), 'remaining_quantity': 0.0, 'i ... (518 characters truncated) ... one, 'used_for_batch_id': None, 'marketplace_order_id': None, 'notes': None, 'fifo_reference_id': None, 'order_id': None, 'temperature_at_time': None}]]
=================================== warnings summary ===================================
tests/test_audit_canonicalization.py: 2 warnings
tests/test_auth_permissions.py: 8 warnings
tests/test_billing_and_tier_enforcement.py: 7 warnings
tests/test_expiration_canonicalization.py: 3 warnings
tests/test_google_oauth.py: 7 warnings
tests/test_inventory_fifo.py: 3 warnings
tests/test_inventory_routes_canonicalization.py: 2 warnings
tests/test_pos_integration_canonicalization.py: 1 warning
tests/test_product_sku.py: 4 warnings
tests/test_reservation_canonicalization.py: 2 warnings
tests/test_signup_tiers.py: 5 warnings
tests/test_stripe_webhooks.py: 4 warnings
  /home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask_limiter/extension.py:333: UserWarning: Using the in-memory storage for tracking rate limits as no storage was explicitly specified. This is not recommended for production use. See: https://flask-limiter.readthedocs.io#configuring-a-storage-backend for documentation about configuring the storage backend.
    warnings.warn(

tests/test_audit_canonicalization.py: 2 warnings
tests/test_auth_permissions.py: 8 warnings
tests/test_billing_and_tier_enforcement.py: 7 warnings
tests/test_expiration_canonicalization.py: 1 warning
tests/test_google_oauth.py: 7 warnings
tests/test_inventory_fifo.py: 3 warnings
tests/test_inventory_routes_canonicalization.py: 1 warning
tests/test_pos_integration_canonicalization.py: 1 warning
tests/test_product_sku.py: 4 warnings
tests/test_reservation_canonicalization.py: 2 warnings
tests/test_signup_tiers.py: 5 warnings
tests/test_stripe_webhooks.py: 4 warnings
  /home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask_sqlalchemy/extension.py:881: SAWarning: Can't sort tables for DROP; an unresolvable foreign key dependency exists between tables: batch, product_sku; and backend does not support ALTER.  To restore at least a partial sort, apply use_alter=True to ForeignKey and ForeignKeyConstraint objects involved in the cycle to mark these as known cycles that will be ignored.
    getattr(metadata, op_name)(bind=engine)

tests/test_billing_and_tier_enforcement.py::TestBillingAndTierEnforcement::test_tier_permission_is_the_hard_ceiling
tests/test_billing_and_tier_enforcement.py::TestBillingAndTierEnforcement::test_tier_permission_is_the_hard_ceiling
  /home/runner/workspace/app/models/models.py:323: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    role = Role.query.get(assignment.role_id)

tests/test_expiration_canonicalization.py::test_expiration_service_uses_canonical_adjustment
  /home/runner/workspace/app/blueprints/expiration/services.py:545: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    entry = InventoryHistory.query.get(entry_id)

tests/test_inventory_fifo.py::TestInventoryFIFOCharacterization::test_fifo_deduction_order
tests/test_inventory_fifo.py::TestInventoryFIFOCharacterization::test_fifo_deduction_order
tests/test_inventory_fifo.py::TestInventoryFIFOCharacterization::test_fifo_deduction_order
tests/test_inventory_fifo.py::TestInventoryFIFOCharacterization::test_inventory_adjustment_delegates_properly
  /home/runner/workspace/app/services/inventory_adjustment/_audit.py:77: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    item = InventoryItem.query.get(item_id)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=============================== short test summary info ================================
FAILED tests/test_audit_canonicalization.py::test_api_reservation_routes_uses_canonical_audit - ModuleNotFoundError: No module named 'app.services.models'
FAILED tests/test_inventory_fifo.py::TestInventoryFIFOCharacterization::test_fifo_deduction_order - ModuleNotFoundError: No module named 'app.services.models'
================ 2 failed, 47 passed, 100 warnings in 73.27s (0:01:13) =================
