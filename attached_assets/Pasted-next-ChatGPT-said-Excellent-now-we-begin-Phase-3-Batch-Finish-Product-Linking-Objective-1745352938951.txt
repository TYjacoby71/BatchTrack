next


ChatGPT said:
Excellent ‚Äî now we begin Phase 3: Batch Finish ‚Üí Product Linking.

üéØ Objective:
When finishing a batch, the user can:

Select an existing product

Enter optional variant (e.g., ‚Äú4 oz‚Äù)

Select an output unit (e.g., Jar, Tube)

Enter final quantity

(Optionally) create a new product

And the system will:

Link this batch to a ProductInventory row

Tag it with batch_id, product_id, variant, unit, and quantity

Make it ready for FIFO deduction + Shopify sync

üîß STEP 1: Patch the Batch Finish Form (finish_batch.html)
Here‚Äôs the full replacement code:

jinja
Copy
Edit
<form method="post" action="{{ url_for('batches.finish_batch', batch_id=batch.id) }}">
  {{ csrf_token() }}

  <h3>Finish This Batch</h3>

  <div class="mb-3">
    <label for="product_id" class="form-label">Link to Product</label>
    <select name="product_id" class="form-select" required>
      {% for product in products %}
        <option value="{{ product.id }}">{{ product.name }} {% if product.variant %}({{ product.variant }}){% endif %}</option>
      {% endfor %}
    </select>
    <a href="/products/new" class="btn btn-link">+ Add New Product</a>
  </div>

  <div class="mb-3">
    <label for="variant_label" class="form-label">Variant</label>
    <input type="text" class="form-control" name="variant_label" placeholder="e.g., 4 oz, Large">
  </div>

  <div class="mb-3">
    <label for="output_unit" class="form-label">Output Unit</label>
    <select name="output_unit" class="form-select" required>
      {% for unit in units if unit.type == 'count' %}
        <option value="{{ unit.name }}">{{ unit.name }}</option>
      {% endfor %}
    </select>
  </div>

  <div class="mb-3">
    <label for="final_quantity" class="form-label">Final Quantity</label>
    <input type="number" step="1" class="form-control" name="final_quantity" required>
  </div>

  <div class="mb-3">
    <label for="notes" class="form-label">Notes</label>
    <textarea class="form-control" name="notes" rows="3"></textarea>
  </div>

  <button type="submit" class="btn btn-success">Finish Batch</button>
</form>
‚úÖ Requirements for This to Work:
You must pass these values from your batch_routes.py:

python
Copy
Edit
products = Product.query.all()
units = get_global_product_unit_list()
return render_template("finish_batch.html", batch=batch, products=products, units=units)
Your database must have:

A Product model

A ProductInventory table (or prepare it next)