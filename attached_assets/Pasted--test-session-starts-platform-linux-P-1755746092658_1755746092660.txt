============================= test session starts ==============================
platform linux -- Python 3.11.13, pytest-8.3.5, pluggy-1.5.0 -- /home/runner/workspace/.pythonlibs/bin/python
cachedir: .pytest_cache
rootdir: /home/runner/workspace
collected 50 items                                                             

tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_create_ingredient_with_initial_stock FAILED [  2%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_create_product_zero_initial_stock PASSED [  4%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_create_container_with_storage_specs FAILED [  6%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_restock_operation FAILED [  8%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_manual_addition FAILED [ 10%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_finished_batch_addition FAILED [ 12%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_returned_refunded_inventory FAILED [ 14%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_fifo_deduction_order FAILED [ 16%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_batch_consumption FAILED [ 18%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_spoilage_tracking FAILED [ 20%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_sales_tracking FAILED [ 22%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_quality_control_deductions FAILED [ 24%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_sampling_and_testing FAILED [ 26%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_recount_increase FAILED [ 28%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_recount_decrease FAILED [ 30%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_recount_to_zero FAILED [ 32%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_cost_override FAILED [ 34%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_weighted_average_cost_tracking FAILED [ 36%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_perishable_item_expiration_tracking FAILED [ 38%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_expired_inventory_handling FAILED [ 40%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_inventory_reservation FAILED [ 42%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_inventory_fifo_sync_validation FAILED [ 44%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_audit_trail_completeness FAILED [ 46%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_insufficient_inventory_handling FAILED [ 48%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_canonical_service_dispatch FAILED [ 50%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_unit_conversion_edge_cases FAILED [ 52%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_overdraft_protection FAILED [ 54%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_invalid_quantity_handling FAILED [ 56%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_nonexistent_item_handling FAILED [ 58%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[restock-100.0-50.0-150.0] FAILED [ 60%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[manual_addition-100.0-25.0-125.0] FAILED [ 62%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[returned-50.0-10.0-60.0] FAILED [ 64%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[refunded-50.0-5.0-55.0] FAILED [ 66%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[finished_batch-0.0-48.0-48.0] FAILED [ 68%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[use-100.0-30.0-70.0] FAILED [ 70%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[batch-100.0-25.0-75.0] FAILED [ 72%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[sale-100.0-10.0-90.0] FAILED [ 74%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[spoil-100.0-5.0-95.0] FAILED [ 76%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[trash-100.0-20.0-80.0] FAILED [ 78%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[expired-100.0-15.0-85.0] FAILED [ 80%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[damaged-100.0-2.5-97.5] FAILED [ 82%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[quality_fail-100.0-3.0-97.0] FAILED [ 84%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[sample-100.0-0.5-99.5] FAILED [ 86%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[tester-100.0-1.0-99.0] FAILED [ 88%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[gift-100.0-2.0-98.0] FAILED [ 90%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[reserved-100.0-25.0-75.0] FAILED [ 92%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_complex_multi_operation_scenario FAILED [ 94%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_high_volume_operations FAILED [ 96%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_item_update_with_quantity_change FAILED [ 98%]
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_perishable_status_change PASSED [100%]

=================================== FAILURES ===================================
__ TestInventorySystemComprehensive.test_create_ingredient_with_initial_stock __

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50eac910>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_create_ingredient_with_initial_stock(self, app, db_session, setup_test_data):
        """Test creating ingredient with initial stock"""
        data = setup_test_data
    
        form_data = {
            'name': 'New Test Ingredient',
            'type': 'ingredient',
            'unit': 'kg',
            'quantity': 50.0,
            'cost_per_unit': 1.25,
            'notes': 'Initial stock test'
        }
    
        success, message, item_id = create_inventory_item(
            form_data, data['org'].id, data['user'].id
        )
    
        assert success is True
        assert item_id is not None
    
        # Verify item was created correctly
        item = InventoryItem.query.get(item_id)
>       assert item.name == 'New Test Ingredient'
E       AttributeError: 'NoneType' object has no attribute 'name'

tests/test_inventory_comprehensive.py:131: AttributeError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 4 quantity: 0.0 â†’ 50.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 4: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (4, '2025-08-21 03:09:09.175991', 'initial_stock', 50.0, None, 1.25, 50.0, None, None, None, 2, 'Initial stock test', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:79 Cannot record audit entry - item 4 not found
__ TestInventorySystemComprehensive.test_create_container_with_storage_specs ___

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d2ac50>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_create_container_with_storage_specs(self, app, db_session, setup_test_data):
        """Test creating container with storage specifications"""
        data = setup_test_data
    
        form_data = {
            'name': 'New Test Container',
            'type': 'container',
            'quantity': 100.0,
            'cost_per_unit': 0.75,
            'storage_amount': 500,
            'storage_unit': 'ml'
        }
    
        success, message, item_id = create_inventory_item(
            form_data, data['org'].id, data['user'].id
        )
    
        assert success is True
        item = InventoryItem.query.get(item_id)
>       assert item.storage_amount == 500
E       AttributeError: 'NoneType' object has no attribute 'storage_amount'

tests/test_inventory_comprehensive.py:182: AttributeError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 4 quantity: 0.0 â†’ 100.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 4: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (4, '2025-08-21 03:09:12.372979', 'initial_stock', 100.0, None, 0.75, 100.0, None, None, None, 2, 'Initial stock creation', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:79 Cannot record audit entry - item 4 not found
___________ TestInventorySystemComprehensive.test_restock_operation ____________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d2afd0>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_restock_operation(self, app, db_session, setup_test_data):
        """Test restocking existing inventory"""
        data = setup_test_data
        item = data['ingredient']
    
        # Add initial stock
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=100.0,
            change_type='restock',
            notes='Initial restock',
            created_by=data['user'].id
        )
>       assert success is True
E       AssertionError: assert (True, 'Initial stock added: 100.0 g') is True

tests/test_inventory_comprehensive.py:200: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_restock_operation
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 100.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:13.808204', 'initial_stock', 100.0, None, 0.5, 100.0, None, None, None, 2, 'Initial restock', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Initial restock'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Initial restock', 'change_type': 'initial_stock', 'organization_i ... (520 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
____________ TestInventorySystemComprehensive.test_manual_addition _____________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d2b450>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_manual_addition(self, app, db_session, setup_test_data):
        """Test manual inventory addition"""
        data = setup_test_data
        item = data['product']
    
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=25.0,
            change_type='manual_addition',
            notes='Found extra inventory',
            created_by=data['user'].id
        )
>       assert success is True
E       AssertionError: assert (True, 'Initial stock added: 25.0 ml') is True

tests/test_inventory_comprehensive.py:237: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=2, quantity=25.0, change_type=manual_addition, caller=tests/test_inventory_comprehensive.py:test_manual_addition
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 2 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 2 quantity: 0.0 â†’ 25.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 2: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (2, '2025-08-21 03:09:15.203494', 'initial_stock', 25.0, None, 5.0, 25.0, None, None, None, 2, 'Found extra inventory', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 2: (builtins.ValueError) could not convert string to float: 'Found extra inventory'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'ml', 'remaining_quantity': 0.0, 'inventory_item_id': 2, 'quantity_change': 'Found extra inventory', 'change_type': 'initial_stock', 'organiz ... (527 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
________ TestInventorySystemComprehensive.test_finished_batch_addition _________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d2bad0>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_finished_batch_addition(self, app, db_session, setup_test_data):
        """Test adding inventory from finished batch"""
        data = setup_test_data
        item = data['product']
    
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=48.0,
            change_type='finished_batch',
            notes='Batch #123 completed',
            created_by=data['user'].id,
            batch_id=123
        )
>       assert success is True
E       AssertionError: assert (True, 'Initial stock added: 48.0 ml') is True

tests/test_inventory_comprehensive.py:255: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=2, quantity=48.0, change_type=finished_batch, caller=tests/test_inventory_comprehensive.py:test_finished_batch_addition
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 2 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 2 quantity: 0.0 â†’ 48.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 2: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (2, '2025-08-21 03:09:16.513286', 'initial_stock', 48.0, None, 5.0, 48.0, None, None, 123, 2, 'Batch #123 completed', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 2: (builtins.ValueError) could not convert string to float: 'Batch #123 completed'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'ml', 'remaining_quantity': 0.0, 'inventory_item_id': 2, 'quantity_change': 'Batch #123 completed', 'change_type': 'initial_stock', 'organiza ... (527 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
______ TestInventorySystemComprehensive.test_returned_refunded_inventory _______

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d38250>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_returned_refunded_inventory(self, app, db_session, setup_test_data):
        """Test returned and refunded inventory operations"""
        data = setup_test_data
        item = data['product']
    
        # Test returned
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=5.0,
            change_type='returned',
            notes='Customer return',
            created_by=data['user'].id
        )
>       assert success is True
E       AssertionError: assert (True, 'Initial stock added: 5.0 ml') is True

tests/test_inventory_comprehensive.py:280: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=2, quantity=5.0, change_type=returned, caller=tests/test_inventory_comprehensive.py:test_returned_refunded_inventory
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 2 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 2 quantity: 0.0 â†’ 5.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 2: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (2, '2025-08-21 03:09:17.954629', 'initial_stock', 5.0, None, 5.0, 5.0, None, None, None, 2, 'Customer return', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 2: (builtins.ValueError) could not convert string to float: 'Customer return'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'ml', 'remaining_quantity': 0.0, 'inventory_item_id': 2, 'quantity_change': 'Customer return', 'change_type': 'initial_stock', 'organization_ ... (522 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
__________ TestInventorySystemComprehensive.test_fifo_deduction_order __________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d38990>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_fifo_deduction_order(self, app, db_session, setup_test_data):
        """Test FIFO (first-in-first-out) deduction order"""
        data = setup_test_data
        item = data['ingredient']
    
        # Add stock in layers with different costs
        process_inventory_adjustment(
            item_id=item.id,
            quantity=100.0,
            change_type='restock',
            cost_override=1.0,
            notes='First batch',
            created_by=data['user'].id
        )
    
        process_inventory_adjustment(
            item_id=item.id,
            quantity=50.0,
            change_type='restock',
            cost_override=1.50,
            notes='Second batch',
            created_by=data['user'].id
        )
    
        # Deduct 75 units (should come from first batch first)
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=75.0,
            change_type='use',
            notes='FIFO test deduction',
            created_by=data['user'].id
        )
>       assert success is True
E       AssertionError: assert (True, 'Initial stock added: 75.0 g') is True

tests/test_inventory_comprehensive.py:329: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_fifo_deduction_order
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 100.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:19.483036', 'initial_stock', 100.0, None, 1.0, 100.0, None, None, None, 2, 'First batch', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'First batch'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'First batch', 'change_type': 'initial_stock', 'organization_id':  ... (516 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=50.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_fifo_deduction_order
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 50.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:19.533221', 'initial_stock', 50.0, None, 1.5, 50.0, None, None, None, 2, 'Second batch', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Second batch'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Second batch', 'change_type': 'initial_stock', 'organization_id': ... (517 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=75.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_fifo_deduction_order
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 75.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:19.580419', 'initial_stock', 75.0, None, 0.5, 75.0, None, None, None, 2, 'FIFO test deduction', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'FIFO test deduction'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'FIFO test deduction', 'change_type': 'initial_stock', 'organizati ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
___________ TestInventorySystemComprehensive.test_batch_consumption ____________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d390d0>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_batch_consumption(self, app, db_session, setup_test_data):
        """Test batch consumption deduction"""
        data = setup_test_data
        item = data['ingredient']
    
        # Add stock
        process_inventory_adjustment(
            item_id=item.id,
            quantity=200.0,
            change_type='restock',
            created_by=data['user'].id
        )
    
        # Use for batch
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=75.0,
            change_type='batch',
            notes='Used in batch production',
            batch_id=456,
            created_by=data['user'].id
        )
>       assert success is True
E       AssertionError: assert (True, 'Initial stock added: 75.0 g') is True

tests/test_inventory_comprehensive.py:363: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=200.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_batch_consumption
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 200.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:20.896603', 'initial_stock', 200.0, None, 0.5, 200.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 200.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 200.0', 'change_type': 'initial_stock', 'organizat ... (526 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=75.0, change_type=batch, caller=tests/test_inventory_comprehensive.py:test_batch_consumption
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 75.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:20.938589', 'initial_stock', 75.0, None, 0.5, 75.0, None, None, 456, 2, 'Used in batch production', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Used in batch production'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Used in batch production', 'change_type': 'initial_stock', 'organ ... (529 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
___________ TestInventorySystemComprehensive.test_spoilage_tracking ____________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d397d0>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_spoilage_tracking(self, app, db_session, setup_test_data):
        """Test spoilage and waste tracking"""
        data = setup_test_data
        item = data['ingredient']
    
        # Add stock
        process_inventory_adjustment(
            item_id=item.id,
            quantity=100.0,
            change_type='restock',
            created_by=data['user'].id
        )
    
        # Record spoilage
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=15.0,
            change_type='spoil',
            notes='Expired ingredients',
            created_by=data['user'].id
        )
>       assert success is True
E       AssertionError: assert (True, 'Initial stock added: 15.0 g') is True

tests/test_inventory_comprehensive.py:389: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_spoilage_tracking
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 100.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:22.269857', 'initial_stock', 100.0, None, 0.5, 100.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 100.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 100.0', 'change_type': 'initial_stock', 'organizat ... (526 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=15.0, change_type=spoil, caller=tests/test_inventory_comprehensive.py:test_spoilage_tracking
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 15.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:22.316428', 'initial_stock', 15.0, None, 0.5, 15.0, None, None, None, 2, 'Expired ingredients', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Expired ingredients'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Expired ingredients', 'change_type': 'initial_stock', 'organizati ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
_____________ TestInventorySystemComprehensive.test_sales_tracking _____________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d39f10>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_sales_tracking(self, app, db_session, setup_test_data):
        """Test sales and revenue tracking"""
        data = setup_test_data
        item = data['product']
    
        # Add stock
        process_inventory_adjustment(
            item_id=item.id,
            quantity=50.0,
            change_type='finished_batch',
            created_by=data['user'].id
        )
    
        # Record sale
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=3.0,
            change_type='sale',
            notes='Customer purchase',
            sale_price=15.0,
            customer='John Doe',
            order_id='ORD-123',
            created_by=data['user'].id
        )
>       assert success is True
E       AssertionError: assert (True, 'Initial stock added: 3.0 ml') is True

tests/test_inventory_comprehensive.py:428: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=2, quantity=50.0, change_type=finished_batch, caller=tests/test_inventory_comprehensive.py:test_sales_tracking
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 2 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 2 quantity: 0.0 â†’ 50.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 2: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (2, '2025-08-21 03:09:23.899632', 'initial_stock', 50.0, None, 5.0, 50.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 2: (builtins.ValueError) could not convert string to float: 'initial_stock: 50.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'ml', 'remaining_quantity': 0.0, 'inventory_item_id': 2, 'quantity_change': 'initial_stock: 50.0', 'change_type': 'initial_stock', 'organizat ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=2, quantity=3.0, change_type=sale, caller=tests/test_inventory_comprehensive.py:test_sales_tracking
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 2 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 2 quantity: 0.0 â†’ 3.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 2: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (2, '2025-08-21 03:09:23.954983', 'initial_stock', 3.0, None, 5.0, 3.0, None, None, None, 2, 'Customer purchase', 0.0, None, 0, None, None, None, None, None, None, None, None, 'John Doe', 15.0, 'ORD-123', None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 2: (builtins.ValueError) could not convert string to float: 'Customer purchase'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'ml', 'remaining_quantity': 0.0, 'inventory_item_id': 2, 'quantity_change': 'Customer purchase', 'change_type': 'initial_stock', 'organizatio ... (523 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
_______ TestInventorySystemComprehensive.test_quality_control_deductions _______

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d3a650>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_quality_control_deductions(self, app, db_session, setup_test_data):
        """Test quality control related deductions"""
        data = setup_test_data
        item = data['product']
    
        # Add stock
        process_inventory_adjustment(
            item_id=item.id,
            quantity=100.0,
            change_type='finished_batch',
            created_by=data['user'].id
        )
    
        # Quality fail
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=2.0,
            change_type='quality_fail',
            notes='Failed QC inspection',
            created_by=data['user'].id
        )
>       assert success is True
E       AssertionError: assert (True, 'Initial stock added: 2.0 ml') is True

tests/test_inventory_comprehensive.py:463: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=2, quantity=100.0, change_type=finished_batch, caller=tests/test_inventory_comprehensive.py:test_quality_control_deductions
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 2 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 2 quantity: 0.0 â†’ 100.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 2: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (2, '2025-08-21 03:09:25.506880', 'initial_stock', 100.0, None, 5.0, 100.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 2: (builtins.ValueError) could not convert string to float: 'initial_stock: 100.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'ml', 'remaining_quantity': 0.0, 'inventory_item_id': 2, 'quantity_change': 'initial_stock: 100.0', 'change_type': 'initial_stock', 'organiza ... (526 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=2, quantity=2.0, change_type=quality_fail, caller=tests/test_inventory_comprehensive.py:test_quality_control_deductions
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 2 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 2 quantity: 0.0 â†’ 2.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 2: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (2, '2025-08-21 03:09:25.574920', 'initial_stock', 2.0, None, 5.0, 2.0, None, None, None, 2, 'Failed QC inspection', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 2: (builtins.ValueError) could not convert string to float: 'Failed QC inspection'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'ml', 'remaining_quantity': 0.0, 'inventory_item_id': 2, 'quantity_change': 'Failed QC inspection', 'change_type': 'initial_stock', 'organiza ... (526 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
__________ TestInventorySystemComprehensive.test_sampling_and_testing __________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d3add0>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_sampling_and_testing(self, app, db_session, setup_test_data):
        """Test sampling and testing deductions"""
        data = setup_test_data
        item = data['product']
    
        # Add stock
        process_inventory_adjustment(
            item_id=item.id,
            quantity=50.0,
            change_type='finished_batch',
            created_by=data['user'].id
        )
    
        # Sample
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=0.5,
            change_type='sample',
            notes='Quality sample',
            created_by=data['user'].id
        )
>       assert success is True
E       AssertionError: assert (True, 'Initial stock added: 0.5 ml') is True

tests/test_inventory_comprehensive.py:499: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=2, quantity=50.0, change_type=finished_batch, caller=tests/test_inventory_comprehensive.py:test_sampling_and_testing
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 2 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 2 quantity: 0.0 â†’ 50.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 2: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (2, '2025-08-21 03:09:27.033958', 'initial_stock', 50.0, None, 5.0, 50.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 2: (builtins.ValueError) could not convert string to float: 'initial_stock: 50.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'ml', 'remaining_quantity': 0.0, 'inventory_item_id': 2, 'quantity_change': 'initial_stock: 50.0', 'change_type': 'initial_stock', 'organizat ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=2, quantity=0.5, change_type=sample, caller=tests/test_inventory_comprehensive.py:test_sampling_and_testing
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 2 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 2 quantity: 0.0 â†’ 0.5
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 2: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (2, '2025-08-21 03:09:27.096654', 'initial_stock', 0.5, None, 5.0, 0.5, None, None, None, 2, 'Quality sample', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 2: (builtins.ValueError) could not convert string to float: 'Quality sample'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'ml', 'remaining_quantity': 0.0, 'inventory_item_id': 2, 'quantity_change': 'Quality sample', 'change_type': 'initial_stock', 'organization_i ... (521 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
____________ TestInventorySystemComprehensive.test_recount_increase ____________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d3b510>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_recount_increase(self, app, db_session, setup_test_data):
        """Test recount that increases inventory"""
        data = setup_test_data
        item = data['ingredient']
    
        # Add initial stock
        process_inventory_adjustment(
            item_id=item.id,
            quantity=100.0,
            change_type='restock',
            created_by=data['user'].id
        )
    
        # Recount to higher amount
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=120.0,  # Target quantity, not delta
            change_type='recount',
            notes='Physical count found more',
            created_by=data['user'].id
        )
>       assert success is True
E       AssertionError: assert (True, 'Initial stock added: 120.0 g') is True

tests/test_inventory_comprehensive.py:547: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_recount_increase
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 100.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:28.453560', 'initial_stock', 100.0, None, 0.5, 100.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 100.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 100.0', 'change_type': 'initial_stock', 'organizat ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=120.0, change_type=recount, caller=tests/test_inventory_comprehensive.py:test_recount_increase
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 120.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:28.533116', 'initial_stock', 120.0, None, 0.5, 120.0, None, None, None, 2, 'Physical count found more', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Physical count found more'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Physical count found more', 'change_type': 'initial_stock', 'orga ... (530 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
____________ TestInventorySystemComprehensive.test_recount_decrease ____________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d3bc50>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_recount_decrease(self, app, db_session, setup_test_data):
        """Test recount that decreases inventory"""
        data = setup_test_data
        item = data['ingredient']
    
        # Add initial stock
        process_inventory_adjustment(
            item_id=item.id,
            quantity=100.0,
            change_type='restock',
            created_by=data['user'].id
        )
    
        # Recount to lower amount
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=85.0,  # Target quantity, not delta
            change_type='recount',
            notes='Physical count found less',
            created_by=data['user'].id
        )
>       assert success is True
E       AssertionError: assert (True, 'Initial stock added: 85.0 g') is True

tests/test_inventory_comprehensive.py:573: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_recount_decrease
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 100.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:30.004876', 'initial_stock', 100.0, None, 0.5, 100.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 100.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 100.0', 'change_type': 'initial_stock', 'organizat ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=85.0, change_type=recount, caller=tests/test_inventory_comprehensive.py:test_recount_decrease
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 85.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:30.077449', 'initial_stock', 85.0, None, 0.5, 85.0, None, None, None, 2, 'Physical count found less', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Physical count found less'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Physical count found less', 'change_type': 'initial_stock', 'orga ... (530 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
____________ TestInventorySystemComprehensive.test_recount_to_zero _____________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d443d0>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_recount_to_zero(self, app, db_session, setup_test_data):
        """Test recount to zero inventory"""
        data = setup_test_data
        item = data['ingredient']
    
        # Add initial stock
        process_inventory_adjustment(
            item_id=item.id,
            quantity=50.0,
            change_type='restock',
            created_by=data['user'].id
        )
    
        # Recount to zero
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=0.0,
            change_type='recount',
            notes='All inventory missing',
            created_by=data['user'].id
        )
>       assert success is True
E       AssertionError: assert (True, 'Item initialized with zero stock') is True

tests/test_inventory_comprehensive.py:599: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=50.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_recount_to_zero
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 50.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:31.841072', 'initial_stock', 50.0, None, 0.5, 50.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 50.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 50.0', 'change_type': 'initial_stock', 'organizati ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=0.0, change_type=recount, caller=tests/test_inventory_comprehensive.py:test_recount_to_zero
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 1: initial_stock
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'All inventory missing'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'All inventory missing', 'change_type': 'initial_stock', 'organiza ... (526 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
_____________ TestInventorySystemComprehensive.test_cost_override ______________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d44b10>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_cost_override(self, app, db_session, setup_test_data):
        """Test cost override functionality"""
        data = setup_test_data
        item = data['ingredient']
    
        original_cost = item.cost_per_unit
        new_cost = 2.75
    
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=0,  # No quantity change
            change_type='cost_override',
            cost_override=new_cost,
            notes='Updated supplier pricing',
            created_by=data['user'].id
        )
>       assert success is True
E       AssertionError: assert (True, 'Item initialized with zero stock') is True

tests/test_inventory_comprehensive.py:622: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=0, change_type=cost_override, caller=tests/test_inventory_comprehensive.py:test_cost_override
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._audit:_audit.py:102 Recorded audit entry for item 1: initial_stock
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Updated supplier pricing'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Updated supplier pricing', 'change_type': 'initial_stock', 'organ ... (530 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
_____ TestInventorySystemComprehensive.test_weighted_average_cost_tracking _____

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d45250>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_weighted_average_cost_tracking(self, app, db_session, setup_test_data):
        """Test that different costs are tracked in FIFO lots"""
        data = setup_test_data
        item = data['ingredient']
    
        # Add stock at different costs
        process_inventory_adjustment(
            item_id=item.id,
            quantity=100.0,
            change_type='restock',
            cost_override=1.0,
            created_by=data['user'].id
        )
    
        process_inventory_adjustment(
            item_id=item.id,
            quantity=50.0,
            change_type='restock',
            cost_override=1.50,
            created_by=data['user'].id
        )
    
        # Verify costs are tracked in FIFO lots
        lots = UnifiedInventoryHistory.query.filter(
            UnifiedInventoryHistory.inventory_item_id == item.id,
            UnifiedInventoryHistory.remaining_quantity > 0
        ).order_by(UnifiedInventoryHistory.timestamp.asc()).all()
    
>       assert lots[0].unit_cost == 1.0
E       IndexError: list index out of range

tests/test_inventory_comprehensive.py:655: IndexError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_weighted_average_cost_tracking
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 100.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:34.862177', 'initial_stock', 100.0, None, 1.0, 100.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 100.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 100.0', 'change_type': 'initial_stock', 'organizat ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=50.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_weighted_average_cost_tracking
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 50.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:34.933060', 'initial_stock', 50.0, None, 1.5, 50.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 50.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 50.0', 'change_type': 'initial_stock', 'organizati ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
__ TestInventorySystemComprehensive.test_perishable_item_expiration_tracking ___

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d45990>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_perishable_item_expiration_tracking(self, app, db_session, setup_test_data):
        """Test expiration tracking for perishable items"""
        data = setup_test_data
    
        # Create perishable item
        form_data = {
            'name': 'Perishable Ingredient',
            'type': 'ingredient',
            'unit': 'kg',
            'quantity': 25.0,
            'cost_per_unit': 3.0,
            'is_perishable': 'on',
            'shelf_life_days': 30
        }
    
        success, message, item_id = create_inventory_item(
            form_data, data['org'].id, data['user'].id
        )
        assert success is True
    
        item = InventoryItem.query.get(item_id)
>       assert item.is_perishable is True
E       AttributeError: 'NoneType' object has no attribute 'is_perishable'

tests/test_inventory_comprehensive.py:681: AttributeError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 4 quantity: 0.0 â†’ 25.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 4: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (4, '2025-08-21 03:09:36.329080', 'initial_stock', 25.0, None, 3.0, 25.0, None, None, None, 2, 'Initial stock creation', 0.0, None, 0, None, '2025-09-20 00:00:00.000000', None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:79 Cannot record audit entry - item 4 not found
_______ TestInventorySystemComprehensive.test_expired_inventory_handling _______

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d460d0>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_expired_inventory_handling(self, app, db_session, setup_test_data):
        """Test handling of expired inventory"""
        data = setup_test_data
        item = data['ingredient']
    
        # Add stock
        process_inventory_adjustment(
            item_id=item.id,
            quantity=50.0,
            change_type='restock',
            created_by=data['user'].id
        )
    
        # Record expired inventory
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=10.0,
            change_type='expired',
            notes='Past expiration date',
            created_by=data['user'].id
        )
>       assert success is True
E       AssertionError: assert (True, 'Initial stock added: 10.0 g') is True

tests/test_inventory_comprehensive.py:713: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=50.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_expired_inventory_handling
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 50.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:37.726821', 'initial_stock', 50.0, None, 0.5, 50.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 50.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 50.0', 'change_type': 'initial_stock', 'organizati ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=expired, caller=tests/test_inventory_comprehensive.py:test_expired_inventory_handling
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:37.813222', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Past expiration date', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Past expiration date'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Past expiration date', 'change_type': 'initial_stock', 'organizat ... (526 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
_________ TestInventorySystemComprehensive.test_inventory_reservation __________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d46810>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_inventory_reservation(self, app, db_session, setup_test_data):
        """Test inventory reservation functionality"""
        data = setup_test_data
        item = data['product']
    
        # Add stock
        process_inventory_adjustment(
            item_id=item.id,
            quantity=100.0,
            change_type='finished_batch',
            created_by=data['user'].id
        )
    
        # Reserve inventory
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=25.0,
            change_type='reserved',
            notes='Reserved for order #456',
            order_id='ORD-456',
            created_by=data['user'].id
        )
>       assert success is True
E       AssertionError: assert (True, 'Initial stock added: 25.0 ml') is True

tests/test_inventory_comprehensive.py:742: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=2, quantity=100.0, change_type=finished_batch, caller=tests/test_inventory_comprehensive.py:test_inventory_reservation
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 2 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 2 quantity: 0.0 â†’ 100.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 2: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (2, '2025-08-21 03:09:39.444298', 'initial_stock', 100.0, None, 5.0, 100.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 2: (builtins.ValueError) could not convert string to float: 'initial_stock: 100.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'ml', 'remaining_quantity': 0.0, 'inventory_item_id': 2, 'quantity_change': 'initial_stock: 100.0', 'change_type': 'initial_stock', 'organiza ... (526 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=2, quantity=25.0, change_type=reserved, caller=tests/test_inventory_comprehensive.py:test_inventory_reservation
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 2 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 2 quantity: 0.0 â†’ 25.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 2: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (2, '2025-08-21 03:09:39.528988', 'initial_stock', 25.0, None, 5.0, 25.0, None, None, None, 2, 'Reserved for order #456', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, 'ORD-456', None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 2: (builtins.ValueError) could not convert string to float: 'Reserved for order #456'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'ml', 'remaining_quantity': 0.0, 'inventory_item_id': 2, 'quantity_change': 'Reserved for order #456', 'change_type': 'initial_stock', 'organ ... (529 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
_____ TestInventorySystemComprehensive.test_inventory_fifo_sync_validation _____

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d3a390>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_inventory_fifo_sync_validation(self, app, db_session, setup_test_data):
        """Test that inventory quantities stay in sync with FIFO totals"""
        data = setup_test_data
        item = data['ingredient']
    
        # Perform multiple operations
        process_inventory_adjustment(
            item_id=item.id,
            quantity=100.0,
            change_type='restock',
            created_by=data['user'].id
        )
    
        process_inventory_adjustment(
            item_id=item.id,
            quantity=25.0,
            change_type='use',
            created_by=data['user'].id
        )
    
        process_inventory_adjustment(
            item_id=item.id,
            quantity=50.0,
            change_type='restock',
            created_by=data['user'].id
        )
    
        # Validate sync
        is_valid, error, inventory_qty, fifo_total = validate_inventory_fifo_sync(item.id)
        assert is_valid is True
        assert inventory_qty == fifo_total
>       assert inventory_qty == 125.0
E       assert 0.0 == 125.0

tests/test_inventory_comprehensive.py:790: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_inventory_fifo_sync_validation
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 100.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:41.007532', 'initial_stock', 100.0, None, 0.5, 100.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 100.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 100.0', 'change_type': 'initial_stock', 'organizat ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=25.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_inventory_fifo_sync_validation
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 25.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:41.099260', 'initial_stock', 25.0, None, 0.5, 25.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 25.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 25.0', 'change_type': 'initial_stock', 'organizati ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=50.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_inventory_fifo_sync_validation
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 50.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:41.179507', 'initial_stock', 50.0, None, 0.5, 50.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 50.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 50.0', 'change_type': 'initial_stock', 'organizati ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
________ TestInventorySystemComprehensive.test_audit_trail_completeness ________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d45f50>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_audit_trail_completeness(self, app, db_session, setup_test_data):
        """Test that all operations create proper audit trails"""
        data = setup_test_data
        item = data['ingredient']
    
        # Perform operation
        process_inventory_adjustment(
            item_id=item.id,
            quantity=75.0,
            change_type='restock',
            notes='Audit trail test',
            created_by=data['user'].id
        )
    
        # Verify audit trail
        history_entries = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).all()
    
>       assert len(history_entries) > 0
E       assert 0 > 0
E        +  where 0 = len([])

tests/test_inventory_comprehensive.py:811: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=75.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_audit_trail_completeness
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 75.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:42.597554', 'initial_stock', 75.0, None, 0.5, 75.0, None, None, None, 2, 'Audit trail test', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Audit trail test'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Audit trail test', 'change_type': 'initial_stock', 'organization_ ... (521 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
____ TestInventorySystemComprehensive.test_insufficient_inventory_handling _____

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d45b10>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_insufficient_inventory_handling(self, app, db_session, setup_test_data):
        """Test handling of insufficient inventory scenarios"""
        data = setup_test_data
        item = data['ingredient']
    
        # Add small amount of stock
        process_inventory_adjustment(
            item_id=item.id,
            quantity=10.0,
            change_type='restock',
            created_by=data['user'].id
        )
    
        # Try to deduct more than available
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=25.0,
            change_type='use',
            notes='Should fail - insufficient stock',
            created_by=data['user'].id
        )
>       assert success is False
E       AssertionError: assert (True, 'Initial stock added: 25.0 g') is False

tests/test_inventory_comprehensive.py:842: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_insufficient_inventory_handling
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:44.004628', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 10.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 10.0', 'change_type': 'initial_stock', 'organizati ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=25.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_insufficient_inventory_handling
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 25.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:44.116296', 'initial_stock', 25.0, None, 0.5, 25.0, None, None, None, 2, 'Should fail - insufficient stock', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Should fail - insufficient stock'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Should fail - insufficient stock', 'change_type': 'initial_stock' ... (538 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
_______ TestInventorySystemComprehensive.test_canonical_service_dispatch _______

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d46dd0>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_canonical_service_dispatch(self, app, db_session, setup_test_data):
        """Test that process_inventory_adjustment correctly dispatches to sub-services"""
        data = setup_test_data
        item = data['ingredient']
    
        # Test that each change type creates exactly one history entry
        change_types_to_test = [
            ('restock', 50.0),
            ('use', 25.0),
            ('spoil', 10.0),
            ('recount', 100.0),  # Target quantity for recount
        ]
    
        for change_type, quantity in change_types_to_test:
            initial_history_count = UnifiedInventoryHistory.query.filter_by(
                inventory_item_id=item.id
            ).count()
    
            success = process_inventory_adjustment(
                item_id=item.id,
                quantity=quantity,
                change_type=change_type,
                created_by=data['user'].id
            )
>           assert success is True
E           AssertionError: assert (True, 'Initial stock added: 50.0 g') is True

tests/test_inventory_comprehensive.py:868: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=50.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_canonical_service_dispatch
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 50.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:45.588865', 'initial_stock', 50.0, None, 0.5, 50.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 50.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 50.0', 'change_type': 'initial_stock', 'organizati ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
_______ TestInventorySystemComprehensive.test_unit_conversion_edge_cases _______

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d47190>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_unit_conversion_edge_cases(self, app, db_session, setup_test_data):
        """Test unit conversion failures and edge cases"""
        data = setup_test_data
    
        # Create item without density
        item_no_density = InventoryItem(
            name="No Density Item",
            type="ingredient",
            unit="g",
            quantity=1000.0,
            cost_per_unit=1.0,
            organization_id=data['org'].id
        )
        db_session.add(item_no_density)
        db_session.commit()
    
        # Add initial stock
        process_inventory_adjustment(
            item_id=item_no_density.id,
            quantity=1000.0,
            change_type='restock',
            created_by=data['user'].id
        )
    
        # Try weight-to-volume conversion without density (should fail)
        success = process_inventory_adjustment(
            item_id=item_no_density.id,
            quantity=50.0,
            change_type='use',
            unit='ml',  # Converting from g to ml without density
            created_by=data['user'].id
        )
>       assert success is False
E       AssertionError: assert (True, 'Initial stock added: 50.0 g') is False

tests/test_inventory_comprehensive.py:913: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=4, quantity=1000.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_unit_conversion_edge_cases
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 4 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 4 quantity: 1000.0 â†’ 2000.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 4: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (4, '2025-08-21 03:09:47.646463', 'initial_stock', 1000.0, None, 1.0, 1000.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 4: (builtins.ValueError) could not convert string to float: 'initial_stock: 1000.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 4, 'quantity_change': 'initial_stock: 1000.0', 'change_type': 'initial_stock', 'organiza ... (527 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=4, quantity=50.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_unit_conversion_edge_cases
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 4 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 4 quantity: 1000.0 â†’ 1050.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 4: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (4, '2025-08-21 03:09:47.758763', 'initial_stock', 50.0, None, 1.0, 50.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 4: (builtins.ValueError) could not convert string to float: 'initial_stock: 50.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 4, 'quantity_change': 'initial_stock: 50.0', 'change_type': 'initial_stock', 'organizati ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
__________ TestInventorySystemComprehensive.test_overdraft_protection __________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d47550>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_overdraft_protection(self, app, db_session, setup_test_data):
        """Test overdraft protection prevents negative inventory"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set specific initial stock
        process_inventory_adjustment(
            item_id=item.id,
            quantity=50.0,
            change_type='restock',
            created_by=data['user'].id
        )
    
        # Try to deduct more than available
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=60.0,  # More than the 50 available
            change_type='sale',
            created_by=data['user'].id
        )
    
        # Should fail
>       assert success is False
E       AssertionError: assert (True, 'Initial stock added: 60.0 g') is False

tests/test_inventory_comprehensive.py:971: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=50.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_overdraft_protection
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 50.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:49.276211', 'initial_stock', 50.0, None, 0.5, 50.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 50.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 50.0', 'change_type': 'initial_stock', 'organizati ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=60.0, change_type=sale, caller=tests/test_inventory_comprehensive.py:test_overdraft_protection
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 60.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:49.349828', 'initial_stock', 60.0, None, 0.5, 60.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 60.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 60.0', 'change_type': 'initial_stock', 'organizati ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
_______ TestInventorySystemComprehensive.test_invalid_quantity_handling ________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d47910>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_invalid_quantity_handling(self, app, db_session, setup_test_data):
        """Test handling of invalid quantity values"""
        data = setup_test_data
        item = data['ingredient']
    
        # Try negative quantity for additive operation
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=-10.0,
            change_type='restock',
            created_by=data['user'].id
        )
>       assert success is True  # Should handle gracefully
E       AssertionError: assert (True, 'Initial stock added: -10.0 g') is True

tests/test_inventory_comprehensive.py:996: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=-10.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_invalid_quantity_handling
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ -10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:50.729439', 'initial_stock', -10.0, None, 0.5, -10.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: -10.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: -10.0', 'change_type': 'initial_stock', 'organizat ... (526 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
_______ TestInventorySystemComprehensive.test_nonexistent_item_handling ________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d47e90>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_nonexistent_item_handling(self, app, db_session, setup_test_data):
        """Test handling of operations on nonexistent items"""
        data = setup_test_data
    
        success = process_inventory_adjustment(
            item_id=99999,  # Non-existent ID
            quantity=10.0,
            change_type='restock',
            created_by=data['user'].id
        )
>       assert success is False
E       AssertionError: assert (False, 'Inventory item not found') is False

tests/test_inventory_comprehensive.py:1008: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=99999, quantity=10.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_nonexistent_item_handling
ERROR    app.services.inventory_adjustment._core:_core.py:43 Inventory item not found: 99999
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[restock-100.0-50.0-150.0] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d52bd0>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'restock', initial_qty = 100.0, adjustment_qty = 50.0
expected_final_qty = 150.0

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
>       assert success is True, f"Adjustment {change_type} failed"
E       AssertionError: Adjustment restock failed
E       assert (True, 'Initial stock added: 50.0 g') is True

tests/test_inventory_comprehensive.py:1067: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 200.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:53.573532', 'initial_stock', 100.0, None, 0.5, 100.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 100.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 100.0', 'change_type': 'initial_stock', 'organizat ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=50.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 150.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:53.678488', 'initial_stock', 50.0, None, 0.5, 50.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 50.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 50.0', 'change_type': 'initial_stock', 'organizati ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[manual_addition-100.0-25.0-125.0] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d52e50>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'manual_addition', initial_qty = 100.0, adjustment_qty = 25.0
expected_final_qty = 125.0

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
>       assert success is True, f"Adjustment {change_type} failed"
E       AssertionError: Adjustment manual_addition failed
E       assert (True, 'Initial stock added: 25.0 g') is True

tests/test_inventory_comprehensive.py:1067: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 200.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:55.481314', 'initial_stock', 100.0, None, 0.5, 100.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 100.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 100.0', 'change_type': 'initial_stock', 'organizat ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=25.0, change_type=manual_addition, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 125.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:55.586449', 'initial_stock', 25.0, None, 0.5, 25.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 25.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 25.0', 'change_type': 'initial_stock', 'organizati ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[returned-50.0-10.0-60.0] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d530d0>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'returned', initial_qty = 50.0, adjustment_qty = 10.0
expected_final_qty = 60.0

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
>       assert success is True, f"Adjustment {change_type} failed"
E       AssertionError: Adjustment returned failed
E       assert (True, 'Initial stock added: 10.0 g') is True

tests/test_inventory_comprehensive.py:1067: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=50.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 50.0 â†’ 100.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:57.078708', 'initial_stock', 50.0, None, 0.5, 50.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 50.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 50.0', 'change_type': 'initial_stock', 'organizati ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=returned, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 50.0 â†’ 60.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:57.165265', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 10.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 10.0', 'change_type': 'initial_stock', 'organizati ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[refunded-50.0-5.0-55.0] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d53350>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'refunded', initial_qty = 50.0, adjustment_qty = 5.0
expected_final_qty = 55.0

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
>       assert success is True, f"Adjustment {change_type} failed"
E       AssertionError: Adjustment refunded failed
E       assert (True, 'Initial stock added: 5.0 g') is True

tests/test_inventory_comprehensive.py:1067: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=50.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 50.0 â†’ 100.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:58.627962', 'initial_stock', 50.0, None, 0.5, 50.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 50.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 50.0', 'change_type': 'initial_stock', 'organizati ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=5.0, change_type=refunded, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 50.0 â†’ 55.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:09:58.719397', 'initial_stock', 5.0, None, 0.5, 5.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 5.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 5.0', 'change_type': 'initial_stock', 'organizatio ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[finished_batch-0.0-48.0-48.0] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d535d0>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'finished_batch', initial_qty = 0.0, adjustment_qty = 48.0
expected_final_qty = 48.0

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
>       assert success is True, f"Adjustment {change_type} failed"
E       AssertionError: Adjustment finished_batch failed
E       assert (True, 'Initial stock added: 48.0 g') is True

tests/test_inventory_comprehensive.py:1067: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=48.0, change_type=finished_batch, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 48.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:00.183015', 'initial_stock', 48.0, None, 0.5, 48.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 48.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 48.0', 'change_type': 'initial_stock', 'organizati ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[use-100.0-30.0-70.0] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d53850>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'use', initial_qty = 100.0, adjustment_qty = 30.0
expected_final_qty = 70.0

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
>       assert success is True, f"Adjustment {change_type} failed"
E       AssertionError: Adjustment use failed
E       assert (True, 'Initial stock added: 30.0 g') is True

tests/test_inventory_comprehensive.py:1067: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 200.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:01.676281', 'initial_stock', 100.0, None, 0.5, 100.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 100.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 100.0', 'change_type': 'initial_stock', 'organizat ... (526 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=30.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 130.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:01.797112', 'initial_stock', 30.0, None, 0.5, 30.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 30.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 30.0', 'change_type': 'initial_stock', 'organizati ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[batch-100.0-25.0-75.0] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d53ad0>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'batch', initial_qty = 100.0, adjustment_qty = 25.0
expected_final_qty = 75.0

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
>       assert success is True, f"Adjustment {change_type} failed"
E       AssertionError: Adjustment batch failed
E       assert (True, 'Initial stock added: 25.0 g') is True

tests/test_inventory_comprehensive.py:1067: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 200.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:03.230426', 'initial_stock', 100.0, None, 0.5, 100.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 100.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 100.0', 'change_type': 'initial_stock', 'organizat ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=25.0, change_type=batch, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 125.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:03.356172', 'initial_stock', 25.0, None, 0.5, 25.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 25.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 25.0', 'change_type': 'initial_stock', 'organizati ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[sale-100.0-10.0-90.0] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d53d50>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'sale', initial_qty = 100.0, adjustment_qty = 10.0
expected_final_qty = 90.0

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
>       assert success is True, f"Adjustment {change_type} failed"
E       AssertionError: Adjustment sale failed
E       assert (True, 'Initial stock added: 10.0 g') is True

tests/test_inventory_comprehensive.py:1067: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 200.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:05.108119', 'initial_stock', 100.0, None, 0.5, 100.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 100.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 100.0', 'change_type': 'initial_stock', 'organizat ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=sale, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 110.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:05.236219', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 10.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 10.0', 'change_type': 'initial_stock', 'organizati ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[spoil-100.0-5.0-95.0] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d53fd0>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'spoil', initial_qty = 100.0, adjustment_qty = 5.0
expected_final_qty = 95.0

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
>       assert success is True, f"Adjustment {change_type} failed"
E       AssertionError: Adjustment spoil failed
E       assert (True, 'Initial stock added: 5.0 g') is True

tests/test_inventory_comprehensive.py:1067: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 200.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:06.638614', 'initial_stock', 100.0, None, 0.5, 100.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 100.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 100.0', 'change_type': 'initial_stock', 'organizat ... (526 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=5.0, change_type=spoil, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 105.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:06.761177', 'initial_stock', 5.0, None, 0.5, 5.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 5.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 5.0', 'change_type': 'initial_stock', 'organizatio ... (523 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[trash-100.0-20.0-80.0] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d5c250>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'trash', initial_qty = 100.0, adjustment_qty = 20.0
expected_final_qty = 80.0

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
>       assert success is True, f"Adjustment {change_type} failed"
E       AssertionError: Adjustment trash failed
E       assert (True, 'Initial stock added: 20.0 g') is True

tests/test_inventory_comprehensive.py:1067: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 200.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:08.155225', 'initial_stock', 100.0, None, 0.5, 100.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 100.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 100.0', 'change_type': 'initial_stock', 'organizat ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=20.0, change_type=trash, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 120.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:08.258840', 'initial_stock', 20.0, None, 0.5, 20.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 20.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 20.0', 'change_type': 'initial_stock', 'organizati ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[expired-100.0-15.0-85.0] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d5c4d0>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'expired', initial_qty = 100.0, adjustment_qty = 15.0
expected_final_qty = 85.0

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
>       assert success is True, f"Adjustment {change_type} failed"
E       AssertionError: Adjustment expired failed
E       assert (True, 'Initial stock added: 15.0 g') is True

tests/test_inventory_comprehensive.py:1067: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 200.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:09.768933', 'initial_stock', 100.0, None, 0.5, 100.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 100.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 100.0', 'change_type': 'initial_stock', 'organizat ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=15.0, change_type=expired, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 115.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:09.915324', 'initial_stock', 15.0, None, 0.5, 15.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 15.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 15.0', 'change_type': 'initial_stock', 'organizati ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[damaged-100.0-2.5-97.5] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d5c750>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'damaged', initial_qty = 100.0, adjustment_qty = 2.5
expected_final_qty = 97.5

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
>       assert success is True, f"Adjustment {change_type} failed"
E       AssertionError: Adjustment damaged failed
E       assert (True, 'Initial stock added: 2.5 g') is True

tests/test_inventory_comprehensive.py:1067: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 200.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:11.396577', 'initial_stock', 100.0, None, 0.5, 100.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 100.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 100.0', 'change_type': 'initial_stock', 'organizat ... (526 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=2.5, change_type=damaged, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 102.5
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:11.530662', 'initial_stock', 2.5, None, 0.5, 2.5, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 2.5'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 2.5', 'change_type': 'initial_stock', 'organizatio ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[quality_fail-100.0-3.0-97.0] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d5c9d0>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'quality_fail', initial_qty = 100.0, adjustment_qty = 3.0
expected_final_qty = 97.0

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
>       assert success is True, f"Adjustment {change_type} failed"
E       AssertionError: Adjustment quality_fail failed
E       assert (True, 'Initial stock added: 3.0 g') is True

tests/test_inventory_comprehensive.py:1067: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 200.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:13.225926', 'initial_stock', 100.0, None, 0.5, 100.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 100.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 100.0', 'change_type': 'initial_stock', 'organizat ... (527 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=3.0, change_type=quality_fail, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 103.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:13.324240', 'initial_stock', 3.0, None, 0.5, 3.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 3.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 3.0', 'change_type': 'initial_stock', 'organizatio ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[sample-100.0-0.5-99.5] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d5ccd0>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'sample', initial_qty = 100.0, adjustment_qty = 0.5
expected_final_qty = 99.5

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
>       assert success is True, f"Adjustment {change_type} failed"
E       AssertionError: Adjustment sample failed
E       assert (True, 'Initial stock added: 0.5 g') is True

tests/test_inventory_comprehensive.py:1067: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 200.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:14.854488', 'initial_stock', 100.0, None, 0.5, 100.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 100.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 100.0', 'change_type': 'initial_stock', 'organizat ... (527 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=0.5, change_type=sample, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 100.5
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:15.000983', 'initial_stock', 0.5, None, 0.5, 0.5, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 0.5'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 0.5', 'change_type': 'initial_stock', 'organizatio ... (523 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[tester-100.0-1.0-99.0] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d5cfd0>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'tester', initial_qty = 100.0, adjustment_qty = 1.0
expected_final_qty = 99.0

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
>       assert success is True, f"Adjustment {change_type} failed"
E       AssertionError: Adjustment tester failed
E       assert (True, 'Initial stock added: 1.0 g') is True

tests/test_inventory_comprehensive.py:1067: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 200.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:16.594966', 'initial_stock', 100.0, None, 0.5, 100.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 100.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 100.0', 'change_type': 'initial_stock', 'organizat ... (526 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=1.0, change_type=tester, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 101.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:16.735022', 'initial_stock', 1.0, None, 0.5, 1.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 1.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 1.0', 'change_type': 'initial_stock', 'organizatio ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[gift-100.0-2.0-98.0] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d5d2d0>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'gift', initial_qty = 100.0, adjustment_qty = 2.0
expected_final_qty = 98.0

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
>       assert success is True, f"Adjustment {change_type} failed"
E       AssertionError: Adjustment gift failed
E       assert (True, 'Initial stock added: 2.0 g') is True

tests/test_inventory_comprehensive.py:1067: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 200.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:18.311609', 'initial_stock', 100.0, None, 0.5, 100.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 100.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 100.0', 'change_type': 'initial_stock', 'organizat ... (527 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=2.0, change_type=gift, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 102.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:18.486947', 'initial_stock', 2.0, None, 0.5, 2.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 2.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 2.0', 'change_type': 'initial_stock', 'organizatio ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
_ TestInventorySystemComprehensive.test_foundational_adjustments_parameterized[reserved-100.0-25.0-75.0] _

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d5d5d0>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}
change_type = 'reserved', initial_qty = 100.0, adjustment_qty = 25.0
expected_final_qty = 75.0

    @pytest.mark.parametrize("change_type,initial_qty,adjustment_qty,expected_final_qty", [
        # Additive cases
        ("restock", 100.0, 50.0, 150.0),
        ("manual_addition", 100.0, 25.0, 125.0),
        ("returned", 50.0, 10.0, 60.0),
        ("refunded", 50.0, 5.0, 55.0),
        ("finished_batch", 0.0, 48.0, 48.0),
    
        # Deductive cases
        ("use", 100.0, 30.0, 70.0),
        ("batch", 100.0, 25.0, 75.0),
        ("sale", 100.0, 10.0, 90.0),
        ("spoil", 100.0, 5.0, 95.0),
        ("trash", 100.0, 20.0, 80.0),
        ("expired", 100.0, 15.0, 85.0),
        ("damaged", 100.0, 2.5, 97.5),
        ("quality_fail", 100.0, 3.0, 97.0),
        ("sample", 100.0, 0.5, 99.5),
        ("tester", 100.0, 1.0, 99.0),
        ("gift", 100.0, 2.0, 98.0),
        ("reserved", 100.0, 25.0, 75.0),
    ])
    def test_foundational_adjustments_parameterized(self, app, db_session, setup_test_data,
                                                   change_type, initial_qty, adjustment_qty, expected_final_qty):
        """Parameterized test covering all basic adjustment types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Set initial quantity
        item.quantity = initial_qty
        db_session.commit()
    
        # Add initial stock if needed
        if initial_qty > 0:
            process_inventory_adjustment(
                item_id=item.id,
                quantity=initial_qty,
                change_type='restock',
                created_by=data['user'].id
            )
    
        # Get initial history count
        initial_history_count = UnifiedInventoryHistory.query.filter_by(
            inventory_item_id=item.id
        ).count()
    
        # Perform the adjustment
        success = process_inventory_adjustment(
            item_id=item.id,
            quantity=adjustment_qty,
            change_type=change_type,
            created_by=data['user'].id
        )
    
        # Assertions
>       assert success is True, f"Adjustment {change_type} failed"
E       AssertionError: Adjustment reserved failed
E       assert (True, 'Initial stock added: 25.0 g') is True

tests/test_inventory_comprehensive.py:1067: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 200.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:19.868801', 'initial_stock', 100.0, None, 0.5, 100.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 100.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 100.0', 'change_type': 'initial_stock', 'organizat ... (526 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=25.0, change_type=reserved, caller=tests/test_inventory_comprehensive.py:test_foundational_adjustments_parameterized
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 100.0 â†’ 125.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:19.993024', 'initial_stock', 25.0, None, 0.5, 25.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 25.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 25.0', 'change_type': 'initial_stock', 'organizati ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
____ TestInventorySystemComprehensive.test_complex_multi_operation_scenario ____

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d5dd10>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_complex_multi_operation_scenario(self, app, db_session, setup_test_data):
        """Test complex scenario with multiple operation types"""
        data = setup_test_data
        item = data['ingredient']
    
        # Initial restock
        process_inventory_adjustment(
            item_id=item.id,
            quantity=1000.0,
            change_type='restock',
            cost_override=1.0,
            created_by=data['user'].id
        )
    
        # Use in batches
        process_inventory_adjustment(
            item_id=item.id,
            quantity=250.0,
            change_type='batch',
            batch_id=1,
            created_by=data['user'].id
        )
    
        # Record spoilage
        process_inventory_adjustment(
            item_id=item.id,
            quantity=50.0,
            change_type='spoil',
            created_by=data['user'].id
        )
    
        # Add more stock at different cost
        process_inventory_adjustment(
            item_id=item.id,
            quantity=200.0,
            change_type='restock',
            cost_override=1.25,
            created_by=data['user'].id
        )
    
        # Recount adjustment
        process_inventory_adjustment(
            item_id=item.id,
            quantity=890.0,  # Target quantity
            change_type='recount',
            created_by=data['user'].id
        )
    
        # Final validation
        db_session.refresh(item)
        is_valid, error, inventory_qty, fifo_total = validate_inventory_fifo_sync(item.id)
        assert is_valid is True
>       assert inventory_qty == 890.0
E       assert 0.0 == 890.0

tests/test_inventory_comprehensive.py:1141: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=1000.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_complex_multi_operation_scenario
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 1000.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:21.417888', 'initial_stock', 1000.0, None, 1.0, 1000.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 1000.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 1000.0', 'change_type': 'initial_stock', 'organiza ... (527 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=250.0, change_type=batch, caller=tests/test_inventory_comprehensive.py:test_complex_multi_operation_scenario
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 250.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:21.550190', 'initial_stock', 250.0, None, 0.5, 250.0, None, None, 1, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 250.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 250.0', 'change_type': 'initial_stock', 'organizat ... (526 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=50.0, change_type=spoil, caller=tests/test_inventory_comprehensive.py:test_complex_multi_operation_scenario
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 50.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:21.663775', 'initial_stock', 50.0, None, 0.5, 50.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 50.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 50.0', 'change_type': 'initial_stock', 'organizati ... (526 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=200.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_complex_multi_operation_scenario
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 200.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:21.780178', 'initial_stock', 200.0, None, 1.25, 200.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 200.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 200.0', 'change_type': 'initial_stock', 'organizat ... (527 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=890.0, change_type=recount, caller=tests/test_inventory_comprehensive.py:test_complex_multi_operation_scenario
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 890.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:21.892949', 'initial_stock', 890.0, None, 0.5, 890.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 890.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 890.0', 'change_type': 'initial_stock', 'organizat ... (526 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
_________ TestInventorySystemComprehensive.test_high_volume_operations _________

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d47050>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_high_volume_operations(self, app, db_session, setup_test_data):
        """Test system performance with high volume operations"""
        data = setup_test_data
        item = data['ingredient']
    
        # Add large initial stock
        process_inventory_adjustment(
            item_id=item.id,
            quantity=10000.0,
            change_type='restock',
            created_by=data['user'].id
        )
    
        # Perform many small deductions
        for i in range(50):
            process_inventory_adjustment(
                item_id=item.id,
                quantity=10.0,
                change_type='use',
                notes=f'Small deduction {i+1}',
                created_by=data['user'].id
            )
    
        # Verify final state
        db_session.refresh(item)
>       assert item.quantity == 9500.0
E       assert 0.0 == 9500.0
E        +  where 0.0 = <InventoryItem 1>.quantity

tests/test_inventory_comprehensive.py:1168: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10000.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10000.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:23.509751', 'initial_stock', 10000.0, None, 0.5, 10000.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 10000.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 10000.0', 'change_type': 'initial_stock', 'organiz ... (528 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:23.614424', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 1', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 1'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 1', 'change_type': 'initial_stock', 'organization ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:23.804197', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 2', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 2'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 2', 'change_type': 'initial_stock', 'organization ... (523 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:23.939196', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 3', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 3'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 3', 'change_type': 'initial_stock', 'organization ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:24.068369', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 4', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 4'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 4', 'change_type': 'initial_stock', 'organization ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:24.205285', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 5', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 5'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 5', 'change_type': 'initial_stock', 'organization ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:24.383768', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 6', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 6'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 6', 'change_type': 'initial_stock', 'organization ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:24.508424', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 7', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 7'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 7', 'change_type': 'initial_stock', 'organization ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:24.647937', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 8', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 8'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 8', 'change_type': 'initial_stock', 'organization ... (523 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:24.828964', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 9', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 9'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 9', 'change_type': 'initial_stock', 'organization ... (523 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:24.966623', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 10', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 10'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 10', 'change_type': 'initial_stock', 'organizatio ... (523 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:25.092335', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 11', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 11'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 11', 'change_type': 'initial_stock', 'organizatio ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:25.213249', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 12', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 12'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 12', 'change_type': 'initial_stock', 'organizatio ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:25.379424', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 13', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 13'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 13', 'change_type': 'initial_stock', 'organizatio ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:25.455846', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 14', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 14'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 14', 'change_type': 'initial_stock', 'organizatio ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:25.604565', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 15', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 15'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 15', 'change_type': 'initial_stock', 'organizatio ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:25.821608', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 16', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 16'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 16', 'change_type': 'initial_stock', 'organizatio ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:25.973282', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 17', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 17'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 17', 'change_type': 'initial_stock', 'organizatio ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:26.174700', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 18', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 18'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 18', 'change_type': 'initial_stock', 'organizatio ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:26.301337', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 19', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 19'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 19', 'change_type': 'initial_stock', 'organizatio ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:26.481868', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 20', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 20'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 20', 'change_type': 'initial_stock', 'organizatio ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:26.619624', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 21', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 21'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 21', 'change_type': 'initial_stock', 'organizatio ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:26.759633', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 22', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 22'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 22', 'change_type': 'initial_stock', 'organizatio ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:26.947753', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 23', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 23'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 23', 'change_type': 'initial_stock', 'organizatio ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:27.107545', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 24', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 24'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 24', 'change_type': 'initial_stock', 'organizatio ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:27.296955', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 25', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 25'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 25', 'change_type': 'initial_stock', 'organizatio ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:27.408602', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 26', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 26'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 26', 'change_type': 'initial_stock', 'organizatio ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:27.623956', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 27', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 27'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 27', 'change_type': 'initial_stock', 'organizatio ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:27.782338', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 28', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 28'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 28', 'change_type': 'initial_stock', 'organizatio ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:27.905102', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 29', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 29'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 29', 'change_type': 'initial_stock', 'organizatio ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:28.056726', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 30', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 30'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 30', 'change_type': 'initial_stock', 'organizatio ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:28.184076', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 31', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 31'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 31', 'change_type': 'initial_stock', 'organizatio ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:28.364338', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 32', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 32'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 32', 'change_type': 'initial_stock', 'organizatio ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:28.500735', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 33', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 33'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 33', 'change_type': 'initial_stock', 'organizatio ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:28.697008', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 34', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 34'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 34', 'change_type': 'initial_stock', 'organizatio ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:28.855789', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 35', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 35'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 35', 'change_type': 'initial_stock', 'organizatio ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:29.002270', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 36', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 36'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 36', 'change_type': 'initial_stock', 'organizatio ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:29.171892', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 37', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 37'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 37', 'change_type': 'initial_stock', 'organizatio ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:29.294542', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 38', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 38'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 38', 'change_type': 'initial_stock', 'organizatio ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:29.428565', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 39', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 39'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 39', 'change_type': 'initial_stock', 'organizatio ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:29.562964', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 40', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 40'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 40', 'change_type': 'initial_stock', 'organizatio ... (523 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:29.829798', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 41', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 41'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 41', 'change_type': 'initial_stock', 'organizatio ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:30.147142', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 42', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 42'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 42', 'change_type': 'initial_stock', 'organizatio ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:30.262275', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 43', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 43'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 43', 'change_type': 'initial_stock', 'organizatio ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:30.443537', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 44', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 44'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 44', 'change_type': 'initial_stock', 'organizatio ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:30.629950', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 45', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 45'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 45', 'change_type': 'initial_stock', 'organizatio ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:30.811434', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 46', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 46'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 46', 'change_type': 'initial_stock', 'organizatio ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:30.942041', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 47', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 47'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 47', 'change_type': 'initial_stock', 'organizatio ... (523 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:31.085314', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 48', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 48'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 48', 'change_type': 'initial_stock', 'organizatio ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:31.214663', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 49', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 49'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 49', 'change_type': 'initial_stock', 'organizatio ... (524 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=10.0, change_type=use, caller=tests/test_inventory_comprehensive.py:test_high_volume_operations
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 10.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:31.375044', 'initial_stock', 10.0, None, 0.5, 10.0, None, None, None, 2, 'Small deduction 50', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'Small deduction 50'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'Small deduction 50', 'change_type': 'initial_stock', 'organizatio ... (525 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
____ TestInventorySystemComprehensive.test_item_update_with_quantity_change ____

self = <tests.test_inventory_comprehensive.TestInventorySystemComprehensive object at 0x7fed50d5e210>
app = <Flask 'app'>
db_session = <sqlalchemy.orm.scoping.scoped_session object at 0x7fed514c90d0>
setup_test_data = {'container': <InventoryItem 3>, 'ingredient': <InventoryItem 1>, 'org': <Organization 2>, 'product': <InventoryItem 2>, ...}

    def test_item_update_with_quantity_change(self, app, db_session, setup_test_data):
        """Test updating item details with quantity changes"""
        data = setup_test_data
        item = data['ingredient']
    
        # Add initial stock
        process_inventory_adjustment(
            item_id=item.id,
            quantity=100.0,
            change_type='restock',
            created_by=data['user'].id
        )
    
        # Update item with quantity change
        form_data = {
            'name': 'Updated Ingredient Name',
            'unit': 'kg',
            'quantity': 150.0,  # Increase quantity
            'cost_per_unit': 1.75
        }
    
        success, message = update_inventory_item(item.id, form_data)
>       assert success is True
E       assert False is True

tests/test_inventory_comprehensive.py:1198: AssertionError
---------------------------- Captured stdout setup -----------------------------

=== Blueprint Registration Summary ===
âœ… Successful: 27
   - Authentication
   - Admin
   - Developer
   - Inventory
   - Recipes
   - Batches
   - Organization
   - Billing
   - Settings
   - Timers
   - Expiration
   - Conversion
   - Products Main
   - Product Inventory
   - Reservations
   - SKU Management
   - Product Variants
   - Product Alerts
   - Public API
   - Main API
   - Stock API
   - App Routes
   - Legal Routes
   - Bulk Stock
   - Fault Log
   - Tag Manager
   - Waitlist

ðŸŽ‰ All blueprints registered successfully!
------------------------------ Captured log setup ------------------------------
INFO     app:unit_utils.py:28 BatchTrack startup
------------------------------ Captured log call -------------------------------
INFO     app.services.inventory_adjustment._core:_core.py:37 CANONICAL DISPATCHER: item_id=1, quantity=100.0, change_type=restock, caller=tests/test_inventory_comprehensive.py:test_item_update_with_quantity_change
INFO     app.services.inventory_adjustment._core:_core.py:50 INITIAL STOCK: Detected item 1 has no FIFO history, using initial_stock handler
INFO     app.services.inventory_adjustment._fifo_ops:_fifo_ops.py:213 FIFO: Updating inventory item 1 quantity: 0.0 â†’ 100.0
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (sqlite3.IntegrityError) NOT NULL constraint failed: unified_inventory_history.unit
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_ ... 348 characters truncated ...  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id]
[parameters: (1, '2025-08-21 03:10:32.893997', 'initial_stock', 100.0, None, 0.5, 100.0, None, None, None, 2, 'Initial stock entry', 0.0, None, 0, None, None, None, None, None, None, None, None, None, None, None, None, 0, None, None, None, None, None, None, None, 2)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
ERROR    app.services.inventory_adjustment._audit:_audit.py:107 Failed to record audit entry for item 1: (builtins.ValueError) could not convert string to float: 'initial_stock: 100.0'
[SQL: INSERT INTO unified_inventory_history (inventory_item_id, timestamp, change_type, quantity_change, unit, unit_cost, remaining_quantity, fifo_reference_id, fifo_code, batch_id, created_by, notes, quantity_used, used_for_batch_id, is_perishable, shelf_life_days, expiration_date, location_id, location_name, temperature_at_time, quality_status, compliance_status, quality_checked_by, customer, sale_price, order_id, reservation_id, is_reserved, sale_location, marketplace_order_id, marketplace_source, batch_number, lot_number, container_id, fifo_source, organization_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: [{'unit': 'g', 'remaining_quantity': 0.0, 'inventory_item_id': 1, 'quantity_change': 'initial_stock: 100.0', 'change_type': 'initial_stock', 'organizat ... (526 characters truncated) ... id': None, 'fifo_source': None, 'location_id': None, 'compliance_status': None, 'unit_cost': None, 'shelf_life_days': None, 'used_for_batch_id': None}]]
ERROR    root:_edit_logic.py:147 Error updating inventory item 1: 'NoneType' object has no attribute 'is_authenticated'
=============================== warnings summary ===============================
tests/test_inventory_comprehensive.py: 50 warnings
  /home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask_limiter/extension.py:333: UserWarning: Using the in-memory storage for tracking rate limits as no storage was explicitly specified. This is not recommended for production use. See: https://flask-limiter.readthedocs.io#configuring-a-storage-backend for documentation about configuring the storage backend.
    warnings.warn(

tests/test_inventory_comprehensive.py: 272 warnings
  /home/runner/workspace/app/services/inventory_adjustment/_audit.py:77: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    item = InventoryItem.query.get(item_id)

tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_create_ingredient_with_initial_stock
  /home/runner/workspace/tests/test_inventory_comprehensive.py:130: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    item = InventoryItem.query.get(item_id)

tests/test_inventory_comprehensive.py: 50 warnings
  /home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask_sqlalchemy/extension.py:881: SAWarning: Can't sort tables for DROP; an unresolvable foreign key dependency exists between tables: batch, product_sku; and backend does not support ALTER.  To restore at least a partial sort, apply use_alter=True to ForeignKey and ForeignKeyConstraint objects involved in the cycle to mark these as known cycles that will be ignored.
    getattr(metadata, op_name)(bind=engine)

tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_create_product_zero_initial_stock
  /home/runner/workspace/tests/test_inventory_comprehensive.py:160: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    item = InventoryItem.query.get(item_id)

tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_create_container_with_storage_specs
  /home/runner/workspace/tests/test_inventory_comprehensive.py:181: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    item = InventoryItem.query.get(item_id)

tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_perishable_item_expiration_tracking
  /home/runner/workspace/tests/test_inventory_comprehensive.py:680: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    item = InventoryItem.query.get(item_id)

tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_inventory_fifo_sync_validation
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_complex_multi_operation_scenario
  /home/runner/workspace/app/services/inventory_adjustment/_validation.py:8: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    item = InventoryItem.query.get(item_id)

tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_item_update_with_quantity_change
tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_perishable_status_change
  /home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask_sqlalchemy/query.py:30: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    rv = self.get(ident)

tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_perishable_status_change
  /home/runner/workspace/app/blueprints/expiration/services.py:384: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    item = InventoryItem.query.get(inventory_item_id)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_create_ingredient_with_initial_stock - AttributeError: 'NoneType' object has no attribute 'name'
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_create_container_with_storage_specs - AttributeError: 'NoneType' object has no attribute 'storage_amount'
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_restock_operation - AssertionError: assert (True, 'Initial stock added: 100.0 g') is True
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_manual_addition - AssertionError: assert (True, 'Initial stock added: 25.0 ml') is True
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_finished_batch_addition - AssertionError: assert (True, 'Initial stock added: 48.0 ml') is True
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_returned_refunded_inventory - AssertionError: assert (True, 'Initial stock added: 5.0 ml') is True
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_fifo_deduction_order - AssertionError: assert (True, 'Initial stock added: 75.0 g') is True
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_batch_consumption - AssertionError: assert (True, 'Initial stock added: 75.0 g') is True
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_spoilage_tracking - AssertionError: assert (True, 'Initial stock added: 15.0 g') is True
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_sales_tracking - AssertionError: assert (True, 'Initial stock added: 3.0 ml') is True
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_quality_control_deductions - AssertionError: assert (True, 'Initial stock added: 2.0 ml') is True
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_sampling_and_testing - AssertionError: assert (True, 'Initial stock added: 0.5 ml') is True
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_recount_increase - AssertionError: assert (True, 'Initial stock added: 120.0 g') is True
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_recount_decrease - AssertionError: assert (True, 'Initial stock added: 85.0 g') is True
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_recount_to_zero - AssertionError: assert (True, 'Item initialized with zero stock') is True
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_cost_override - AssertionError: assert (True, 'Item initialized with zero stock') is True
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_weighted_average_cost_tracking - IndexError: list index out of range
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_perishable_item_expiration_tracking - AttributeError: 'NoneType' object has no attribute 'is_perishable'
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_expired_inventory_handling - AssertionError: assert (True, 'Initial stock added: 10.0 g') is True
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_inventory_reservation - AssertionError: assert (True, 'Initial stock added: 25.0 ml') is True
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_inventory_fifo_sync_validation - assert 0.0 == 125.0
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_audit_trail_completeness - assert 0 > 0
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_insufficient_inventory_handling - AssertionError: assert (True, 'Initial stock added: 25.0 g') is False
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_canonical_service_dispatch - AssertionError: assert (True, 'Initial stock added: 50.0 g') is True
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_unit_conversion_edge_cases - AssertionError: assert (True, 'Initial stock added: 50.0 g') is False
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_overdraft_protection - AssertionError: assert (True, 'Initial stock added: 60.0 g') is False
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_invalid_quantity_handling - AssertionError: assert (True, 'Initial stock added: -10.0 g') is True
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_nonexistent_item_handling - AssertionError: assert (False, 'Inventory item not found') is False
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[restock-100.0-50.0-150.0] - AssertionError: Adjustment restock failed
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[manual_addition-100.0-25.0-125.0] - AssertionError: Adjustment manual_addition failed
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[returned-50.0-10.0-60.0] - AssertionError: Adjustment returned failed
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[refunded-50.0-5.0-55.0] - AssertionError: Adjustment refunded failed
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[finished_batch-0.0-48.0-48.0] - AssertionError: Adjustment finished_batch failed
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[use-100.0-30.0-70.0] - AssertionError: Adjustment use failed
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[batch-100.0-25.0-75.0] - AssertionError: Adjustment batch failed
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[sale-100.0-10.0-90.0] - AssertionError: Adjustment sale failed
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[spoil-100.0-5.0-95.0] - AssertionError: Adjustment spoil failed
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[trash-100.0-20.0-80.0] - AssertionError: Adjustment trash failed
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[expired-100.0-15.0-85.0] - AssertionError: Adjustment expired failed
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[damaged-100.0-2.5-97.5] - AssertionError: Adjustment damaged failed
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[quality_fail-100.0-3.0-97.0] - AssertionError: Adjustment quality_fail failed
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[sample-100.0-0.5-99.5] - AssertionError: Adjustment sample failed
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[tester-100.0-1.0-99.0] - AssertionError: Adjustment tester failed
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[gift-100.0-2.0-98.0] - AssertionError: Adjustment gift failed
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_foundational_adjustments_parameterized[reserved-100.0-25.0-75.0] - AssertionError: Adjustment reserved failed
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_complex_multi_operation_scenario - assert 0.0 == 890.0
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_high_volume_operations - assert 0.0 == 9500.0
FAILED tests/test_inventory_comprehensive.py::TestInventorySystemComprehensive::test_item_update_with_quantity_change - assert False is True
============ 48 failed, 2 passed, 381 warnings in 89.34s (0:01:29) =============
