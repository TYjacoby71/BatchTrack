🧂 Bulk Ingredient Tools — /ingredients
✅ What’s Now Working:
Checkbox to select ingredients to delete

Inline stock field to update quantities

Two buttons: 💾 Update Stock and 🗑 Delete Selected

All in one form, safe and clear

🏷️ Tag Entry Fix — (Next Batch)
We’ll immediately follow with:

A much better tag entry interface for recipes

Easy click-to-add tag buttons

Auto-formatting for lowercase, hyphenated tags

🧠 Replit Assistant Code: Bulk Ingredients
1️⃣ Replace templates/ingredients.html
html
Copy
Edit
{% extends "layout.html" %}
{% block content %}
<h2>🧂 Ingredients</h2>
<form method="post" action="/ingredients/bulk-update">
  <table>
    <tr>
      <th>Delete</th>
      <th>Name</th>
      <th>Quantity</th>
      <th>Unit</th>
      <th>Cost per Unit</th>
    </tr>
    {% for ing in ingredients %}
    <tr>
      <td><input type="checkbox" name="delete" value="{{ ing.name }}"></td>
      <td>{{ ing.name }}</td>
      <td><input type="number" step="any" name="qty_{{ ing.name }}" value="{{ ing.quantity }}"></td>
      <td>{{ ing.unit }}</td>
      <td>{{ ing.cost_per_unit }}</td>
    </tr>
    {% endfor %}
  </table>
  <button type="submit" name="action" value="update">💾 Update Stock</button>
  <button type="submit" name="action" value="delete">🗑 Delete Selected</button>
</form>
{% endblock %}
2️⃣ Add This Route to routes/ingredients.py
python
Copy
Edit
@ingredients_bp.route('/ingredients/bulk-update', methods=['POST'])
def bulk_update_ingredients():
    data = load_data()
    ingredients = data.get("ingredients", [])
    action = request.form.get("action")

    if action == "delete":
        to_delete = request.form.getlist("delete")
        ingredients = [i for i in ingredients if i["name"] not in to_delete]

    elif action == "update":
        for i in ingredients:
            form_key = f"qty_{i['name']}"
            if form_key in request.form:
                try:
                    i["quantity"] = float(request.form[form_key])
                except ValueError:
                    pass

    data["ingredients"] = ingredients
    save_data(data)
    return redirect("/ingredients")