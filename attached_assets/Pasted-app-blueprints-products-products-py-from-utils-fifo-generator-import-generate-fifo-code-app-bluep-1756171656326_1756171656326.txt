app/blueprints/products/products.py:from ...utils.fifo_generator import generate_fifo_code
app/blueprints/admin/debug_routes.py:from app.services.inventory_adjustment._validation import validate_inventory_fifo_sync
app/blueprints/api/fifo_routes.py:from ...utils.fifo_generator import int_to_base36
app/blueprints/api/routes.py:from .fifo_routes import fifo_api_bp
app/blueprints/batches/finish_batch.py:                from app.services.inventory_adjustment import validate_inventory_fifo_sync
app/blueprints/inventory/routes.py:from ...utils.fifo_generator import int_to_base36
app/blueprints/inventory/routes.py:        from app.services.inventory_adjustment import validate_inventory_fifo_sync
app/utils/__init__.py:from .fifo_generator import generate_fifo_code
app/services/inventory_adjustment/_creation_logic.py:from ._fifo_ops import create_new_fifo_lot
app/services/inventory_adjustment/_deductive_ops.py:from ._fifo_ops import deduct_fifo_inventory
app/services/inventory_adjustment/__init__.py:from ._validation import validate_inventory_fifo_sync
app/services/inventory_adjustment/_additive_ops.py:from ._fifo_ops import create_new_fifo_lot
app/services/inventory_adjustment/_additive_ops.py:    from ._fifo_ops import process_fifo_deduction
app/services/inventory_adjustment/_core.py:from ._validation import validate_inventory_fifo_sync
app/services/inventory_adjustment/_special_ops.py:from app.utils.fifo_generator import generate_fifo_code # Moved to module level import
app/services/inventory_adjustment/_special_ops.py:from ._fifo_ops import create_new_fifo_lot, deduct_fifo_inventory # Kept for local use within this file and added deduct_fifo_inventory
app/services/inventory_adjustment/_special_ops.py:        from ._fifo_ops import get_item_lots, create_new_fifo_lot
app/services/inventory_adjustment/_special_ops.py:        from app.utils.fifo_generator import generate_fifo_code
app/services/inventory_adjustment/_special_ops.py:                    notes=f"RECOUNT: Deducted {deduct_from_lot} from lot {lot.fifo_code}" + (f" | {notes}" if notes else ""),
app/services/inventory_adjustment/_special_ops.py:                logger.info(f"RECOUNT DEDUCT: Consumed {deduct_from_lot} from lot {lot.id} ({lot.fifo_code})")
app/services/inventory_adjustment/_fifo_ops.py:        from app.utils.fifo_generator import generate_fifo_code
app/services/inventory_adjustment/_fifo_ops.py:        from app.utils.fifo_generator import generate_fifo_code
app/services/inventory_adjustment/_fifo_ops.py:            from app.utils.fifo_generator import generate_fifo_code
app/services/inventory_adjustment/_fifo_ops.py:                notes=f"FIFO deduction: -{deduct_from_lot} from lot {lot.fifo_code}" + (f" | {notes}" if notes else ""),
app/services/inventory_adjustment/_fifo_ops.py:            logger.info(f"FIFO DEDUCT: Consumed {deduct_from_lot} from lot {lot.id} ({lot.fifo_code}), remaining: {lot.remaining_quantity}")
app/services/stock_check/core.py:from ...blueprints.fifo.services import FIFOService
app/services/batch_service/batch_operations.py:            from app.services.inventory_adjustment import validate_inventory_fifo_sync
app/services/pos_integration.py:from ..utils import generate_fifo_code
app/services/pos_integration.py:# from app.blueprints.fifo.services import FIFOService
app/services/reservation_service.py:from ..utils import generate_fifo_code