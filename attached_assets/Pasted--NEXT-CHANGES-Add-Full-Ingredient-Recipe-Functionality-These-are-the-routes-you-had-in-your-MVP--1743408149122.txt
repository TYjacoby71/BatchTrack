âœ… NEXT CHANGES: Add Full Ingredient & Recipe Functionality
These are the routes you had in your MVP â€” weâ€™ll now modularize them.

ðŸ”§ Step 1: Build ingredients.py routes
ðŸ“„ Edit app/routes/ingredients.py and paste this in:

python
Copy
Edit
from flask import Blueprint, render_template, request, redirect
from app.routes.utils import load_data, save_data

ingredients_bp = Blueprint('ingredients', __name__)

@ingredients_bp.route('/ingredients')
def list_ingredients():
    data = load_data()
    return render_template('ingredients.html', ingredients=data['ingredients'])

@ingredients_bp.route('/ingredients/add', methods=['GET', 'POST'])
def add_ingredient():
    data = load_data()
    if request.method == 'POST':
        name = request.form['name'].strip()
        quantity = request.form['quantity'].strip()
        unit = request.form['unit'].strip()
        cost_per_unit = request.form.get('cost_per_unit', '0').strip()

        if name:
            data['ingredients'].append({
                "name": name,
                "quantity": quantity,
                "unit": unit,
                "cost_per_unit": cost_per_unit
            })
            save_data(data)
            return redirect('/ingredients')
    return render_template('add_ingredient.html')

@ingredients_bp.route('/ingredients/<name>/edit', methods=['GET', 'POST'])
def edit_ingredient(name):
    data = load_data()
    ingredient = next((i for i in data['ingredients'] if i['name'] == name), None)

    if not ingredient:
        return "Ingredient not found", 404

    if request.method == 'POST':
        ingredient['quantity'] = request.form['quantity'].strip()
        ingredient['unit'] = request.form['unit'].strip()
        ingredient['cost_per_unit'] = request.form.get('cost_per_unit', '0').strip()
        save_data(data)
        return redirect('/ingredients')

    return render_template('edit_ingredient.html', ingredient=ingredient)

@ingredients_bp.route('/ingredients/<name>/delete')
def delete_ingredient(name):
    data = load_data()
    data['ingredients'] = [i for i in data['ingredients'] if i['name'] != name]
    save_data(data)
    return redirect('/ingredients')