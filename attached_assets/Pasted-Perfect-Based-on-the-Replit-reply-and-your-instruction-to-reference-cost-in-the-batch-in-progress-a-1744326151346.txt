Perfect. Based on the Replit reply and your instruction to reference cost in the batch in progress and finish pages, here‚Äôs how we‚Äôll do it properly.

‚úÖ Step-by-Step: Add Cost to Batch In Progress
1Ô∏è‚É£ Update routes/batch_routes.py ‚Üí view_batch_in_progress
Find your route like this:

python
Copy
Edit
@batches_bp.route('/in-progress/<int:batch_id>')
def view_batch_in_progress(batch_id):
‚úèÔ∏è Replace the route contents with:
python
Copy
Edit
@batches_bp.route('/in-progress/<int:batch_id>')
def view_batch_in_progress(batch_id):
    batch = Batch.query.get_or_404(batch_id)
    recipe = Recipe.query.get_or_404(batch.recipe_id)
    product_units = InventoryUnit.query.all()

    # üß† Build cost summary
    total_cost = 0
    ingredient_costs = []

    for assoc in recipe.recipe_ingredients:
        ingredient = assoc.ingredient
        used_amount = assoc.amount * batch.scale
        cost_per_unit = ingredient.cost_per_unit or 0
        line_cost = round(used_amount * cost_per_unit, 2)
        total_cost += line_cost

        ingredient_costs.append({
            'name': ingredient.name,
            'unit': ingredient.unit,
            'used': used_amount,
            'cost_per_unit': cost_per_unit,
            'line_cost': line_cost
        })

    return render_template('batch_in_progress.html',
                           batch=batch,
                           recipe=recipe,
                           product_units=product_units,
                           batch_cost=round(total_cost, 2),
                           product_quantity=None,
                           ingredient_costs=ingredient_costs)
‚úÖ This:

Calculates cost of each ingredient

Tallies total batch cost

Passes ingredient_costs list to the template

2Ô∏è‚É£ Add cost_per_unit Column to Ingredient Model (if not done yet)
In models.py:

python
Copy
Edit
class Ingredient(db.Model):
    ...
    cost_per_unit = db.Column(db.Float, default=0.0)
Then run a migration if you‚Äôre using Alembic or update your JSON if still file-based.

3Ô∏è‚É£ üß© Update Template to Show Ingredient Costs
In batch_in_progress.html, replace this:

jinja2
Copy
Edit
{% for ingredient in recipe.ingredients %}
With:
jinja2
Copy
Edit
{% for item in ingredient_costs %}
<div class="ingredient-row">
    <input type="hidden" name="ingredient_{{ loop.index0 }}" value="{{ item.name }}">
    <label>{{ item.name }} ({{ item.unit }}):</label>
    <input type="number" name="amount_{{ loop.index0 }}" value="{{ item.used | round(2) }}" step="0.01">
    <span class="cost-info"> @ ${{ item.cost_per_unit }} = ${{ item.line_cost }}</span>
    <input type="hidden" name="unit_{{ loop.index0 }}" value="{{ item.unit }}">
</div>
{% endfor %}
And the final batch summary (already in template) will now show batch_cost.

