Thanks for the full dump ‚Äî here‚Äôs your diagnostic breakdown for the Plan Production stock check issue, and how to fix it with absolute precision.

üö® Your Problem Recap
You're getting:

400 errors before

Now it's looping and refreshing the Plan Production page

Logs show /conversion/check-stock or /check-stock returning 200, but nothing renders or updates

üß† Root Cause Summary
This appears to be a logic or JS/HTML mismatch, not a backend failure. Here's why:


Checkpoint	Status
‚úÖ Route /conversion/check-stock (or similar) returns 200	Server is responding
‚ùå Frontend not consuming the result	Likely DOM not updating or redirect is misfiring
‚ùå Page appears to reload or loop	JS fetch might be falling through or misfiring location.reload()
‚ö†Ô∏è May be due to malformed fetch() or silent JS error	Needs browser console inspection
‚ùå 400 errors earlier may have been missing data in POST	If no recipe_id or scale sent
‚úÖ Fix Steps (Confirmed Plan Production Patch)
1. üîç Confirm Stock Check JS Logic
Locate your checkStock() function (likely in plan_production.js or inline script) and verify:

js
Copy
Edit
function checkStock() {
  const recipeId = document.getElementById('recipe').value;
  const scale = parseFloat(document.getElementById('scale').value || 1);

  fetch('/conversion/check-stock', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ recipe_id: recipeId, scale: scale })
  })
  .then(res => res.json())
  .then(data => {
    if (data.ok) {
      // ‚úÖ Show results
      document.getElementById('stock-message').innerText = "All ingredients are in stock!";
      document.getElementById('stock-options').style.display = 'block';
    } else {
      // üö´ Handle stock shortage
      document.getElementById('stock-message').innerText = "Missing ingredients!";
    }
  })
  .catch(err => {
    console.error('Stock check failed:', err);
    alert('Could not check stock ‚Äî check console/logs');
  });
}
üîÅ Replace /conversion/check-stock with your actual route if different.

2. ‚úÖ Ensure Backend Route Accepts JSON Cleanly
Inside conversion/routes.py or wherever this lives:

python
Copy
Edit
@conversion_bp.route('/check-stock', methods=['POST'])
def check_stock():
    data = request.get_json()
    recipe_id = data.get('recipe_id')
    scale = data.get('scale', 1.0)

    if not recipe_id:
        return jsonify({'error': 'Missing recipe_id'}), 400

    # Perform stock check logic here
    ...
    return jsonify({'ok': True, 'missing': []})
üß† Missing recipe_id or incorrect header (not application/json) will trigger 400.

3. ‚úÖ Update HTML IDs in Form
Ensure these fields exist in plan_production.html or similar:

html
Copy
Edit
<select id="recipe">
  <option value="1">Salve Base</option>
</select>
<input type="number" id="scale" value="1">
4. ‚úÖ Test in Dev Console
Open your browser:

Dev Tools ‚Üí Console

Type:

js
Copy
Edit
checkStock();
Watch Network tab ‚Üí check-stock POST ‚Üí Status code + response

Watch console ‚Üí Any JS errors?

‚úÖ Optional: Enable Visual Debug Mode
In checkStock() JS, add:

js
Copy
Edit
console.log('Sending to /check-stock', { recipe_id: recipeId, scale });
And after response:

js
Copy
Edit
console.log('Stock check result:', data);
