üß© Here's the Next Code Batch for Replit Assistant
This batch will:

Add a ‚Äúbatch type‚Äù prompt (inventory vs product)

Require the user to complete the batch with:

‚úÖ Success/failure

‚úÖ Actual yield (amount + unit)

‚úÖ Notes

Handle routing:

Inventory ‚Üí adds result to inventory

Product ‚Üí adds result to product log (not inventory)

üîÅ Step 1: Update routes/batches.py
Paste this at the bottom of the file:

python
Copy
Edit
@batches_bp.route('/batches/finish/<int:batch_id>', methods=["GET", "POST"])
def finish_batch(batch_id):
    data = load_data()
    batches = data.get("batches", [])
    inventory = data.get("ingredients", [])
    products = data.setdefault("products", [])

    if batch_id >= len(batches):
        return "Batch not found", 404

    batch = batches[batch_id]

    if request.method == "POST":
        batch_type = request.form.get("batch_type")
        success = request.form.get("success")
        notes = request.form.get("notes")
        yield_qty = request.form.get("yield_qty")
        yield_unit = request.form.get("yield_unit")

        batch["completed"] = True
        batch["batch_type"] = batch_type
        batch["notes"] = notes
        batch["success"] = success
        batch["yield_qty"] = yield_qty
        batch["yield_unit"] = yield_unit

        if success == "yes":
            if batch_type == "inventory":
                inv_item = {
                    "name": batch["recipe_name"],
                    "quantity": float(yield_qty),
                    "unit": yield_unit,
                    "cost_per_unit": 0,
                }
                inventory.append(inv_item)
                data["ingredients"] = inventory
            elif batch_type == "product":
                products.append({
                    "product": batch["recipe_name"],
                    "yield": yield_qty,
                    "unit": yield_unit,
                    "notes": notes,
                    "timestamp": datetime.now().isoformat()
                })

        save_data(data)
        return redirect("/batches")

    return render_template("finish_batch.html", batch=batch, batch_id=batch_id)
üîÅ Step 2: Create Template templates/finish_batch.html
html
Copy
Edit
{% extends "layout.html" %}
{% block content %}
<h2>Finish Batch: {{ batch.recipe_name }}</h2>

<form method="POST">
  <label>Batch Type:</label><br>
  <select name="batch_type" required>
    <option value="inventory">Inventory Item</option>
    <option value="product">Final Product</option>
  </select><br><br>

  <label>Was the batch successful?</label><br>
  <input type="radio" name="success" value="yes" required> Yes
  <input type="radio" name="success" value="no"> No<br><br>

  <label>Yield (Amount and Unit):</label><br>
  <input type="number" step="any" name="yield_qty" required>
  <input type="text" name="yield_unit" required><br><br>

  <label>Notes:</label><br>
  <textarea name="notes"></textarea><br><br>

  <button type="submit">Complete Batch</button>
</form>
{% endblock %}
