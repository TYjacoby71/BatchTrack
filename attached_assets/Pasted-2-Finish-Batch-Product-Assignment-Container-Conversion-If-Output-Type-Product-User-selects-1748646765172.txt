2. 📦 Finish Batch: Product Assignment & Container Conversion
If Output Type = Product:
User selects:

Product Parent (e.g. Royal Tallow)

Product Variant (e.g. Lavender)

✅ Quick Add options available for both if needed.

Then:
Containers selected at batch start are carried forward:

2 × 4 oz Glass Jars

1 × 5 oz Tin

These become size variants under the chosen product.

If no containers were used → fallback to recipe.output_unit (e.g., 13 oz) and treat it as unit-based inventory.

3. 🧾 Product Inventory Entry Created
Each unique combination of:

Product

Variant (e.g. Lavender)

Container Size (e.g. 4 oz)

...is logged into the product_inventory table, with:

quantity

batch_id reference

expiration (from Finish Batch date)

unit_cost (AWC for now, FIFO support later)

4. 🧰 Product Inventory Page Layout
Mirror the style of the Ingredient Inventory Page:

Table View:
Product	Variant	Container/Unit	In Stock	Avg Cost	Exp. Date	Actions
Royal Tallow	Lavender	4 oz Jar	12 units	$2.10	07/01/25	[History] [Edit]

Modals/Buttons:
[Add Product] – Same as “Add Ingredient” but structured by Product/Variant

[Adjust Inventory] – Spoil, Trash, Loss, Recount

[Product History] – FIFO entries with batch, cost, source, date

5. 📜 Product History Table (FIFO-like)
Each entry logs:

Event type (Restock, Spoilage, Sale, Adjustment)

Batch link (if from production)

Date

Qty change

Cost per unit

Total value

Expiration

Same logic as inventory_history, but for finished goods.

6. 🔄 Shopify Integration Ready
You’ve already planned SKU logic. BatchTrack should:

Treat Product + Variant + Size as unique SKU (e.g. TAL-LAV-4OZ)

Shopify will deduct inventory per SKU

Future sync flow can match based on:

Product name

Variant options (Scent, Size)

SKU field

7. ✂️ Do You Need an Update Product Page?
No – unless you plan to support standalone full-page editing.

Use modals to update name, variant, or size labels.

Keep edits scoped and contextual to reduce confusion.

If you want to “rename” or “merge” product variants, implement that as an advanced tool later (not MVP).

8. 🧪 Edge Case Handling
No Containers Used → Allow fallback to yield unit (e.g. 13 oz tallow) and treat as loose goods.

Custom Sizes → Let users define container mappings (e.g. “Sampler – 2.5 oz”) via unit manager.

Partial Containers or Leftovers → Mark as reserve or return to bulk (MVP may ignore this).

🔄 Finish Batch → Product Inventory Flow Summary
mathematica
Copy
Edit
[Plan Production]
  ↳ Output Type = Product
  ↳ Select Containers
      ↓
[Start Batch]
  ↳ Proceed with production
      ↓
[Finish Batch Modal]
  ↳ Select Product Parent
  ↳ Select/Create Variant (e.g. Lavender)
  ↳ Confirm Containers Used
  ↳ Yield auto-mapped to ProductInventory
      ↓
[Product Inventory Table]
  ↳ Track by Product + Variant + Size
  ↳ Show FIFO history, adjustments, sales
